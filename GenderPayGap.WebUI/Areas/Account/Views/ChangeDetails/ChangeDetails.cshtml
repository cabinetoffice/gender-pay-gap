@model ChangeDetailsViewModel

@if (ViewContext.ModelState.ErrorCount > 0)
{
    @await Html.PartialAsync("Patterns/ErrorSummary", ViewContext.ModelState)
}

<div class="grid-row">

    <div class="column-full">

        <form method="post">

            @Html.AntiForgeryToken()

            <fieldset style="display: none;">

                <legend>
                    <h1 class="heading-large">Change your personal details</h1>
                </legend>

                <div class="form-group @Html.SetErrorClass(model => model.FirstName, "error")">
                    @Html.LabelFor(m => m.FirstName, new {@class = "form-label"})
                    @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "error-message"})
                    @Html.CustomEditorFor(model => model.FirstName, new {@class = "form-control"})
                </div>

                <div class="form-group @Html.SetErrorClass(model => model.LastName, "error")">
                    @Html.LabelFor(m => m.LastName, new {@class = "form-label"})
                    @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "error-message"})
                    @Html.CustomEditorFor(model => model.LastName, new {@class = "form-control"})
                </div>

                <div class="form-group @Html.SetErrorClass(model => model.JobTitle, "error")">
                    @Html.LabelFor(m => m.JobTitle, new {@class = "form-label"})
                    @Html.ValidationMessageFor(model => model.JobTitle, "", new {@class = "error-message"})
                    @Html.CustomEditorFor(model => model.JobTitle, new {@class = "form-control"})
                </div>

                <div class="form-group @Html.SetErrorClass(model => model.ContactPhoneNumber, "error")">
                    @Html.LabelFor(m => m.ContactPhoneNumber, new {@class = "form-label"})
                    @Html.ValidationMessageFor(model => model.ContactPhoneNumber, "", new {@class = "error-message"})
                    @Html.CustomEditorFor(model => model.ContactPhoneNumber, new {@class = "form-control"})
                </div>

            </fieldset>

            <fieldset class="form-group">

                <legend>
                    <h2 class="heading-large">Change your email preferences</h2>
                </legend>

                <div class="multiple-choice @Html.SetErrorClass(model => model.SendUpdates, "error")">
                    @Html.CheckBoxFor(model => model.SendUpdates, new {@class = "form-control"})
                    @Html.LabelFor(m => m.SendUpdates, new {@class = "form-label"})
                </div>

                <div class="multiple-choice @Html.SetErrorClass(model => model.AllowContact, "error")">
                    @Html.CheckBoxFor(model => model.AllowContact, new {@class = "form-control"})
                    @Html.LabelFor(m => m.AllowContact, new {@class = "form-label"})
                </div>

            </fieldset>

            <div>
                <input class="button" type="submit" role="button" value="Confirm"/>
            </div>

            <div>
                <a href="@(Url.Action<ManageAccountController>(nameof(ManageAccountController.ManageAccount)))" style="display: inline-block; margin-top: 1em;">Cancel</a>
            </div>

        </form>

    </div>

</div>