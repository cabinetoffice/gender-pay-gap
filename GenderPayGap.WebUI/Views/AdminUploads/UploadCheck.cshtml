@using GenderPayGap.Database
@using GenderPayGap.WebUI.Models.Admin
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.Admin.AdminSicSectionUploadCheckViewModel
@{
    ViewBag.Title = "Upload check - Administration - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
        {
            new CrumbViewModel
            {
                Text = "Admin",
                Href = Url.Action("Home", "Admin")
            },
            new CrumbViewModel
            {
                Text = "Uploads",
                Href = Url.Action("Uploads", "AdminUploads")
            },
            new CrumbViewModel
            {
                Text = "Upload check"
            }
        };
    }

    @(Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<div class="govuk-grid-row">
    <span class="govuk-caption-xl">Administration</span>
    <h1 class="govuk-heading-xl">
        @(Html.DisplayFor(m => m.FileUploadType)) upload check
    </h1>

    <p class="govuk-body">Please review the changes you are about to make</p>

    @if (Model.RecordsToCreate != null && Model.RecordsToCreate.Count > 0)
    {
        <h2 class="govuk-heading-l">@(Model.RecordsToCreate.Count) created @(Html.DisplayFor(m => m.FileUploadType))s</h2>

        <table class="govuk-table">
            <tbody class="govuk-table__body">
                @foreach (SicSection record in Model.RecordsToCreate)
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header govuk-!-width-one-quarter">@(record.SicSectionId)</th>
                        <td class="govuk-table__cell govuk-!-width-one-third">
                            @(record.Description)
                        </td>
                        @* TODO fix hack for alignment *@
                        <td class="govuk-table__cell govuk-!-width-one-third">
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @if (Model.RecordsToUpdate != null && Model.RecordsToUpdate.Count > 0)
    {
        <h2 class="govuk-heading-l govuk-!-margin-top-9">@(Model.RecordsToUpdate.Count) updated @(Html.DisplayFor(m => m.FileUploadType))s</h2>
        <table class="govuk-table">
            <tbody class="govuk-table__body">
                @foreach (SicSectionToUpdate record in Model.RecordsToUpdate)
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header govuk-!-width-one-quarter">@(record.SicSectionId)</th>
                        <td class="govuk-table__cell govuk-!-width-one-third">
                            @(record.NewDescription)
                        </td>
                        <td class="govuk-table__cell govuk-!-width-one-third">
                            <strong>previously:</strong> @(record.PreviousDescription)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @if (Model.RecordsToDelete != null && Model.RecordsToDelete.Count > 0)
    {
        <h2 class="govuk-heading-l govuk-!-margin-top-9">@(Model.RecordsToDelete.Count) deleted @(Html.DisplayFor(m => m.FileUploadType))s</h2>

        @if (!Model.AbleToProceed)
        {
            <p class="govuk-body govuk-!-font-weight-bold">
                It is not possible to delete SIC sections that are still in use. Please go back and upload another file
                without these deletions.
            </p>
        }

        <table class="govuk-table">
            <tbody class="govuk-table__body">
                @foreach (SicSection record in Model.RecordsToDelete)
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header govuk-!-width-one-quarter">@(record.SicSectionId)</th>
                        <td class="govuk-table__cell govuk-!-width-one-third">
                            @(record.Description)
                        </td>
                        @if (record.SicCodes.Count > 0)
                        {
                            <td class="govuk-table__cell govuk-!-width-one-third">
                                @(record.SicCodes.Count) current uses
                            </td>
                        }

                    </tr>
                }
            </tbody>
        </table>
    }

    <form method="post" class="govuk-!-margin-top-9" action="@Url.Action("FileUploadCheckPost", "AdminUploads")">
        @(Html.AntiForgeryToken())
        <input type="hidden" name="SerializedNewRecords" value="@(Model.SerializedNewRecords)"/>

        @if (Model.AbleToProceed)
        {
            @(Html.GovUkTextAreaFor(
                m => m.Reason,
                labelOptions: new LabelViewModel
                {
                    Text = "What is the reason for this change?",
                    Classes = "govuk-label--m"
                }
                ))

            @(Html.GovUkButton(new ButtonViewModel
            {
                Text = "Confirm and continue",
                Classes = "govuk-!-margin-bottom-4"
            }))
        }

        <p class="govuk-body">
            <a href="@Url.Action("Uploads", "AdminUploads")"
               class="govuk-link">
                Cancel and return to the uploads page
            </a>
        </p>
    </form>
</div>
