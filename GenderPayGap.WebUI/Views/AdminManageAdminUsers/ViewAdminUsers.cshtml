@using GenderPayGap.Database
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using GenderPayGap.Core
@model List<User>

@{
    ViewBag.Title = $"Admin users - Administration - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
        {
            new CrumbViewModel
            {
                Text = "Admin",
                Href = Url.Action("AdminHomePage", "AdminHomepage")
            },
            new CrumbViewModel
            {
                Text = "Admin users"
            }
        };
    }

    @(await Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        
        <span class="govuk-caption-xl">Administration</span>
        <h1 class="govuk-heading-xl">
            Admin users
        </h1>

        <table class="govuk-table govuk-!-margin-bottom-8"
               style="width: fit-content;">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header">Name</th>
                    <th scope="col" class="govuk-table__header">Email address</th>
                    <th scope="col" class="govuk-table__header">
                        <span class="govuk-visually-hidden">Actions</span>
                    </th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @{
                    List<User> activeAdminUsers = Model.Where(user => user.Status == UserStatuses.Active).ToList();
                }
                @foreach (User adminUser in activeAdminUsers)
                {
                    <tr class="govuk-table__row">
                        <th scope="row"
                            class="govuk-table__header">
                            <a href="@Url.Action("ViewUser", "AdminViewUser", new {id = adminUser.UserId})"
                               class="govuk-link">
                                @(adminUser.Fullname)
                            </a>
                        </th>
                        <td class="govuk-table__cell">
                            @(adminUser.EmailAddress)
                        </td>
                        <td class="govuk-table__cell">
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        
        <details class="govuk-details" data-module="govuk-details">
            <summary class="govuk-details__summary">
                <span class="govuk-details__summary-text">
                    Inactive admin users
                </span>
            </summary>
            <div class="govuk-details__text">
                <table class="govuk-table"
                       style="width: fit-content;">
                    <thead class="govuk-table__head">
                        <tr class="govuk-table__row">
                            <th scope="col" class="govuk-table__header">Name</th>
                            <th scope="col" class="govuk-table__header">Email address</th>
                            <th scope="col" class="govuk-table__header">Status</th>
                            <th scope="col" class="govuk-table__header">
                                <span class="govuk-visually-hidden">Actions</span>
                            </th>
                        </tr>
                    </thead>
                    <tbody class="govuk-table__body">
                        @{
                            List<User> inactiveAdminUsers = Model.Where(user => user.Status != UserStatuses.Active).ToList();
                        }
                        @foreach (User adminUser in inactiveAdminUsers)
                        {
                            <tr class="govuk-table__row">
                                <th scope="row"
                                    class="govuk-table__header">
                                    <a href="@Url.Action("ViewUser", "AdminViewUser", new {id = adminUser.UserId})"
                                       class="govuk-link">
                                        @(adminUser.Fullname)
                                    </a>
                                </th>
                                <td class="govuk-table__cell">
                                    @(adminUser.EmailAddress)
                                </td>
                                <td class="govuk-table__cell">
                                    @(adminUser.Status)
                                </td>
                                <td class="govuk-table__cell">
                                    <a href="@Url.Action("ChangeStatusGet", "AdminUserStatus", new {id = adminUser.UserId})"
                                       class="govuk-button govuk-button--secondary govuk-!-margin-0">
                                        Change status
                                        <span class="govuk-visually-hidden">
                                            of user @(adminUser.Fullname)
                                        </span>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </details>
        
    </div>
</div>
