@using GenderPayGap.Database
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model GenderPayGap.WebUI.Models.Admin.AdminConfirmNewAdminUserViewModel

@{
    ViewBag.Title = "Add new admin user - Administration - Gender pay gap service";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
        {
            new CrumbViewModel
            {
                Text = "Admin",
                Href = Url.Action("AdminHomePage", "AdminHomepage")
            },
            new CrumbViewModel
            {
                Text = "Admin users",
                Href = Url.Action("ViewAdminUsers", "AdminManageAdminUsers")
            },
            new CrumbViewModel
            {
                Text = "Add new admin user"
            }
        };
    }

    @(await Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        
        <span class="govuk-caption-xl">Administration</span>
        <h1 class="govuk-heading-xl">
            Add new admin user
        </h1>
        
        <h2 class="govuk-heading-m">
            Check if this is the user you want to convert into an admin user
        </h2>
        
        <table class="govuk-table">
            <tbody class="govuk-table__body">
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">User Id</th>
                    <td class="govuk-table__cell">
                        <a href="@Url.Action("ViewUser", "AdminViewUser", new {id = Model.User.UserId})"
                           class="govuk-link">
                            @(Model.User.UserId)
                        </a>
                    </td>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Email address</th>
                    <td class="govuk-table__cell">@(Model.User.EmailAddress)</td>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Email Verified</th>
                    <td class="govuk-table__cell">
                        @if (Model.User.EmailVerifiedDate.HasValue)
                        {
                            <span>
                                Yes
                                <br/>
                                <span class="govuk-body-s">
                                    (on @(Model.User.EmailVerifiedDate.Value.ToString("d MMM yyyy")))
                                </span>
                            </span>
                        }
                        else
                        {
                            <span class="govuk-!-font-weight-bold">
                                No
                            </span>
                            <br/>
                            <span>
                                Verification email sent on @(Model.User.EmailVerifySendDate.Value.ToString("d MMM yyyy, HH:mm"))
                            </span>
                        }
                    </td>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Status</th>
                    <td class="govuk-table__cell">
                        @(Model.User.Status)
                        <br/>
                        <span class="govuk-body-s">
                            (since @(Model.User.StatusDate.ToString("d MMM yyyy")))
                        </span>
                    </td>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Name</th>
                    <td class="govuk-table__cell">@(Model.User.Fullname)</td>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Job title</th>
                    <td class="govuk-table__cell">@(Model.User.JobTitle)</td>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header" style="max-width: 150px;">
                        Registered organisations
                        <br/>
                        <small>(should be none)</small>
                    </th>
                    <td class="govuk-table__cell">
                        @if (Model.User.UserOrganisations.Count > 0)
                        {
                            <ul class="govuk-list govuk-!-margin-bottom-0">
                                @foreach (UserOrganisation registration in Model.User.UserOrganisations)
                                {
                                    @(await Html.PartialAsync("../AdminPendingRegistrations/Sections/PendingRegistrationOtherRegistration", registration))
                                }
                            </ul>
                        }
                        else
                        {
                            <span>Not registered to report for any organisations</span>
                        }
                    </td>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header" style="max-width: 150px;">
                        Type of admin account
                    </th>
                    <td class="govuk-table__cell govuk-!-font-weight-bold">
                        @if (Model.ReadOnly)
                        {
                            <span>Read-only</span>
                        }
                        else
                        {
                            <span>Full admin account - able to make changes</span>
                        }
                    </td>
                </tr>
            </tbody>
        </table>
        
        <form method="POST" action="@Url.Action("ConfirmNewAdminUserPost", "AdminManageAdminUsers", new {userId = Model.User.UserId, readOnly = Model.ReadOnly})">
            @(Html.AntiForgeryToken())
            @await Html.GovUkErrorSummary(ViewData.ModelState)

            @(await Html.GovUkButton(new ButtonViewModel
            {
                Text = "Confirm",
                Classes = "govuk-!-margin-bottom-4"
            }))

            <p class="govuk-body">
                <a href="@Url.Action("ViewAdminUsers", "AdminManageAdminUsers")"
                   class="govuk-link">
                    Cancel and return to manage admin users page
                </a>
            </p>
        </form>
        
    </div>
</div>
