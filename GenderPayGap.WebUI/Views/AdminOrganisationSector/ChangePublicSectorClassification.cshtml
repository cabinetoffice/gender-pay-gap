@using GenderPayGap.WebUI.Helpers
@using GenderPayGap.WebUI.Models.Admin
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.Admin.AdminChangePublicSectorClassificationViewModel

@{
    ViewBag.Title = $"Change public-sector classification - {Model.OrganisationName} - Administration - Gender pay gap service";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
{
            new CrumbViewModel
            {
                Text = "Admin",
                Href = Url.Action("AdminHomePage", "AdminHomepage")
            },
            new CrumbViewModel
            {
                Text = Model.OrganisationName,
                Href = Url.Action("ViewOrganisation", "AdminViewOrganisation", new {id = Model.OrganisationId})
            },
            new CrumbViewModel
            {
                Text = "Change public-sector classification"
            }
        };
    }

    @(await Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <span class="govuk-caption-xl">Administration</span>
        <h1 class="govuk-heading-xl">
            Change public-sector classification
            <br />
            <span class="govuk-!-font-size-27">
                for @(Model.OrganisationName)
            </span>
        </h1>

        @(await Html.GovUkErrorSummary(ViewData.ModelState))

        
        <form method="post" action="@Url.Action("ChangePublicSectorClassificationPost", "AdminOrganisationSector", new {id = Model.OrganisationId})">
            @(Html.AntiForgeryToken())

            @{
                var error = ModelErrorHelper.GetErrorMessage(ViewData.ModelState, nameof(Model.SelectedPublicSectorTypeId));
                ErrorMessageViewModel errorMessageViewModel = error != null ? new ErrorMessageViewModel {Text = error} : null;
            }
            @(await Html.GovUkRadios(new RadiosViewModel
            {
                Name = nameof(AdminChangePublicSectorClassificationViewModel.SelectedPublicSectorTypeId),
                Fieldset = new FieldsetViewModel
                {
                    Legend = new LegendViewModel
                    {
                        Html = @<text>
                                   What type of public sector organisation is @(Model.OrganisationName)?
                                </text>,
                        Classes = "govuk-fieldset__legend--m"
                    }
                },
                Items = Model.PublicSectorTypes
                        .Select(publicSectorType =>
                        {
                            string fieldName = nameof(AdminChangePublicSectorClassificationViewModel.SelectedPublicSectorTypeId);
                            int fieldValue = publicSectorType.PublicSectorTypeId;
                            string fieldId = $"{fieldName}_{fieldValue}";

                            return (ItemViewModel) new RadioItemViewModel
                            {
                                Name = fieldName,
                                Value = fieldValue.ToString(),
                                Id = fieldId,
                                Checked = Model.SelectedPublicSectorTypeId == fieldValue,
                                Label = new LabelViewModel
                                {
                                    Text = publicSectorType.Description,
                                    For = fieldId
                                }
                            };
                        })
                        .ToList(),
                ErrorMessage = errorMessageViewModel
            }))
            
            @(await Html.GovUkCharacterCountFor(
                m => m.Reason,
                labelOptions: new LabelViewModel
                {
                    Text = "What is the reason for this change?",
                    Classes = "govuk-label--m"
                }
                ))

            @(await Html.GovUkButton(new ButtonViewModel
            {
                Text = "Confirm and save",
                Classes = "govuk-!-margin-right-2 govuk-!-margin-bottom-4"
            }))
        </form>

    </div>
</div>
