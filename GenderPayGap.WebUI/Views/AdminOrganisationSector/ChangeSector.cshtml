@using GenderPayGap.WebUI.Models.Admin
@using GovUkDesignSystem
@using GovUkDesignSystem.Attributes
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.Admin.AdminChangeSectorViewModel

@{
    ViewBag.Title = "Change sector - Administration - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
        {
            new CrumbViewModel
            {
                Text = "Admin",
                Href = Url.Action("AdminHomePage", "AdminHomepage")
            },
            new CrumbViewModel
            {
                Text = Model.Organisation.OrganisationName,
                Href = Url.Action("ViewOrganisation", "AdminViewOrganisation", new {id = Model.Organisation.OrganisationId})
            },
            new CrumbViewModel
            {
                Text = "Sector history",
                Href = Url.Action("ViewSectorHistory", "AdminOrganisationSector", new {id = Model.Organisation.OrganisationId})
            },
            new CrumbViewModel
            {
                Text = "Change sector"
            }
        };
    }

    @(await Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<span class="govuk-caption-xl">Administration</span>
<h1 class="govuk-heading-xl">
    Change sector
    <br/>
    <span class="govuk-!-font-size-27">
        for @(Model.Organisation.OrganisationName)
    </span>
</h1>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <form method="POST" action="@Url.Action("ChangeSectorPost", "AdminOrganisationSector", new {id = Model.Organisation.OrganisationId})">
            @(Html.AntiForgeryToken())

            @(Html.Hidden(nameof(AdminChangeSectorViewModel.Action),
                ChangeOrganisationSectorViewModelActions.OfferNewSectorAndReason))

            @(await Html.GovUkErrorSummary(ViewData.ModelState, new[]
            {
                nameof(AdminChangeSectorViewModel.NewSector),
                nameof(AdminChangeSectorViewModel.Reason)
            }))

            <table class="govuk-table">
                <tbody class="govuk-table__body">
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Organisation name</th>
                        <td class="govuk-table__cell">@(Model.Organisation.OrganisationName)</td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Current sector</th>
                        <td class="govuk-table__cell">@(Model.Organisation.SectorType)</td>
                    </tr>
                </tbody>
            </table>

            <div class="govuk-form-group">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                    <h1 class="govuk-fieldset__heading">
                        Please select a new sector
                    </h1>
                </legend>

                @await Html.GovUkRadiosFor(
                    m => m.NewSector,
                    labelOptions: new Dictionary<NewSectorTypes, LabelViewModel>
                    {
                        {
                            NewSectorTypes.Public,
                            new LabelViewModel
                            {
                                Text = GovUkRadioCheckboxLabelTextAttribute.GetLabelText(NewSectorTypes.Public),
                            Classes = "govuk-!-font-size-24 govuk-!-font-weight-bold"
                            }
                        },
                        {
                            NewSectorTypes.Private,
                            new LabelViewModel
                            {
                                Text = GovUkRadioCheckboxLabelTextAttribute.GetLabelText(NewSectorTypes.Private),
                                Classes = "govuk-!-font-size-24 govuk-!-font-weight-bold"
                            }
                        },
                    },
                    radioHints: new Dictionary<NewSectorTypes, HintViewModel>
                    {
                        {
                            NewSectorTypes.Public,
                            new HintViewModel
                            {
                                Html = @<text>
                                           This includes:
                                           <ul class="govuk-list govuk-list--bullet" style="color: inherit;">
                                               <li>Most government departments</li>
                                               <li>The armed forces</li>
                                               <li>Local authorities</li>
                                               <li>NHS bodies</li>
                                               <li>Universities</li>
                                               <li>Most schools, including academies and multi-academy trusts (except private and independent schools)</li>
                                           </ul>
                                        </text>
                            }
                        },
                        {
                            NewSectorTypes.Private,
                            new HintViewModel
                            {
                                Html = @<text>
                                           This includes:
                                           <ul class="govuk-list govuk-list--bullet" style="color: inherit;">
                                               <li>Limited companies</li>
                                               <li>Limited liability partnerships</li>
                                               <li>Charities</li>
                                               <li>Independent and private schools</li>
                                           </ul>
                                        </text>
                            }
                        }
                    })

                @await Html.GovUkCharacterCountFor(
                    m => m.Reason,
                    labelOptions: new LabelViewModel
                    {
                        Text = "What is the reason for this change?",
                        Classes = "govuk-label--m"
                    },
                    formGroupOptions: new FormGroupViewModel
                    {
                        Classes = "govuk-!-margin-top-6"
                    })

                @(await Html.GovUkButton(new ButtonViewModel
                {
                    Text = "Continue",
                    Classes = "govuk-!-margin-bottom-4"
                }))

                <p class="govuk-body">
                    <a href="@Url.Action("ViewOrganisation", "AdminViewOrganisation", new {id = Model.Organisation.OrganisationId})"
                       class="govuk-link">
                        Cancel and return to organisation page
                    </a>
                </p>

            </div>
        </form>
    </div>
</div>
