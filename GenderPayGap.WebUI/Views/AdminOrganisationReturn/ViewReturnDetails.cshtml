@using GenderPayGap.Database
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.Admin.AdminOrganisationReturnDetailsViewModel

@{
    ViewBag.Title = $"Return details - {Model.Organisation.OrganisationName} - Administration - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>();
        crumbs.Add(new CrumbViewModel
        {
            Text = "Admin",
            Href = Url.Action("Home", "Admin")
        });

        crumbs.Add(new CrumbViewModel
        {
            Text = Model.Organisation.OrganisationName,
            Href = Url.Action("ViewOrganisation", "AdminViewOrganisation", new { id = Model.Organisation.OrganisationId })
        });

        crumbs.Add(new CrumbViewModel
        {
            Text = "Returns",
            Href = Url.Action("ViewReturns", "AdminOrganisationReturn", new { id = Model.Organisation.OrganisationId })
        });

        crumbs.Add(new CrumbViewModel
        {
            Text = "Return details"
        });
    }

    @(Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">

        <span class="govuk-caption-xl">Administration</span>
        <h1 class="govuk-heading-xl">
            Return details
            <br />
            <span class="govuk-!-font-size-27" style="display: inline-block; margin-top: 15px;">
                for @(Model.Organisation.OrganisationName)
                <br />
                for reporting year @(Model.Year)-@((Model.Year + 1) % 100)
            </span>
        </h1>

        <p class="govuk-body govuk-!-margin-bottom-6">
            <a href="@Url.Action("DownloadReturnDetailsCsv", "AdminOrganisationReturn", new { id = Model.Organisation.OrganisationId })"
               class="govuk-link">
                Download CSV of return details <span class="govuk-visually-hidden">for @(Model.Organisation.OrganisationName)</span>
            </a>
        </p>

        <table class="govuk-table admin-return-details-table">
            <tbody class="govuk-table__body">
                @{
                    List<Return> returnsForYear = Model.Organisation.Returns
                        .Where(r => r.AccountingDate.Year == Model.Year)
                        .OrderByDescending(r => r.StatusDate)
                        .ToList();
                }

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Revision number</th>
                    @for (int version = returnsForYear.Count; version > 0; version--)
                    {
                        <th scope="col" class="govuk-table__header">
                            version @(version)
                        </th>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">
                        <span class="govuk-visually-hidden">Date</span>
                        Modified
                    </th>
                    @foreach (Return returnForYear in returnsForYear)
                    {
                        <td class="govuk-table__cell">
                            <span style="white-space: nowrap">
                                @(returnForYear.Modified.ToString("d MMM yyyy"))
                            </span>
                            <span style="white-space: nowrap">
                                @(returnForYear.Modified.ToString("HH:mm"))
                            </span>
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Status</th>
                    @foreach (Return returnForYear in returnsForYear)
                    {
                        <td class="govuk-table__cell">@(returnForYear.Status)</td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Modifications</th>
                    @foreach (Return returnForYear in returnsForYear)
                    {
                        <td class="govuk-table__cell">
                            @(returnForYear.Modifications != null
                                ? string.Join(", ", returnForYear.Modifications.Split(",", StringSplitOptions.RemoveEmptyEntries))
                                : "")
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Late submission</th>
                    @for (int i = 0; i < returnsForYear.Count; i++)
                    {
                        Return thisVersion = returnsForYear[i];
                        Return previousVersion = i < returnsForYear.Count - 1 ? returnsForYear[i + 1] : null;

                        bool isChanged = previousVersion != null &&
                                         (thisVersion.IsLateSubmission != previousVersion.IsLateSubmission);

                        <td class="govuk-table__cell @(isChanged ? "value-changed-from-previous-return" : null)">
                            @(thisVersion.IsLateSubmission ? "Yes" : "No")
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Reason for late submission</th>
                    @for (int i = 0; i < returnsForYear.Count; i++)
                    {
                        Return thisVersion = returnsForYear[i];
                        Return previousVersion = i < returnsForYear.Count - 1 ? returnsForYear[i + 1] : null;

                        bool isChanged = previousVersion != null &&
                                         (thisVersion.LateReason != previousVersion.LateReason);

                        <td class="govuk-table__cell @(isChanged ? "value-changed-from-previous-return" : null)">
                            @thisVersion.LateReason
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">
                        <span class="govuk-visually-hidden">Number of</span>
                        Employees
                    </th>
                    @for (int i = 0; i < returnsForYear.Count; i++)
                    {
                        Return thisVersion = returnsForYear[i];
                        Return previousVersion = i < returnsForYear.Count - 1 ? returnsForYear[i + 1] : null;

                        bool isChanged = previousVersion != null &&
                                         ((thisVersion.MinEmployees != previousVersion.MinEmployees) ||
                                          (thisVersion.MaxEmployees != previousVersion.MaxEmployees));

                        <td class="govuk-table__cell @(isChanged ? "value-changed-from-previous-return" : null)">
                            @thisVersion.MinEmployees - @thisVersion.MaxEmployees
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Hourly pay gap (mean)</th>
                    @for (int i = 0; i < returnsForYear.Count; i++)
                    {
                        Return thisVersion = returnsForYear[i];
                        Return previousVersion = i < returnsForYear.Count - 1 ? returnsForYear[i + 1] : null;

                        bool isChanged = previousVersion != null &&
                                         (thisVersion.DiffMeanHourlyPayPercent != previousVersion.DiffMeanHourlyPayPercent);

                        <td class="govuk-table__cell @(isChanged ? "value-changed-from-previous-return" : null)">
                            @(thisVersion.DiffMeanHourlyPayPercent.ToString("0.#"))%
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Hourly pay gap (median)</th>
                    @for (int i = 0; i < returnsForYear.Count; i++)
                    {
                        Return thisVersion = returnsForYear[i];
                        Return previousVersion = i < returnsForYear.Count - 1 ? returnsForYear[i + 1] : null;

                        bool isChanged = previousVersion != null &&
                                         (thisVersion.DiffMedianHourlyPercent != previousVersion.DiffMedianHourlyPercent);

                        <td class="govuk-table__cell @(isChanged ? "value-changed-from-previous-return" : null)">
                            @(thisVersion.DiffMedianHourlyPercent.ToString("0.#"))%
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Who is paid a bonus</th>
                    @for (int i = 0; i < returnsForYear.Count; i++)
                    {
                        Return thisVersion = returnsForYear[i];
                        Return previousVersion = i < returnsForYear.Count - 1 ? returnsForYear[i + 1] : null;

                        bool isChanged = previousVersion != null &&
                                         ((thisVersion.MaleMedianBonusPayPercent != previousVersion.MaleMedianBonusPayPercent) ||
                                          (thisVersion.FemaleMedianBonusPayPercent != previousVersion.FemaleMedianBonusPayPercent));

                        <td class="govuk-table__cell @(isChanged ? "value-changed-from-previous-return" : null)">
                            <span style="white-space: nowrap;">@(thisVersion.MaleMedianBonusPayPercent.ToString("0"))% of men</span>
                            <br />
                            <span style="white-space: nowrap;">@(thisVersion.FemaleMedianBonusPayPercent.ToString("0"))% of women</span>
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Bonus pay gap (mean)</th>
                    @for (int i = 0; i < returnsForYear.Count; i++)
                    {
                        Return thisVersion = returnsForYear[i];
                        Return previousVersion = i < returnsForYear.Count - 1 ? returnsForYear[i + 1] : null;

                        bool isChanged = previousVersion != null &&
                                         (thisVersion.DiffMeanBonusPercent != previousVersion.DiffMeanBonusPercent);

                        <td class="govuk-table__cell @(isChanged ? "value-changed-from-previous-return" : null)">
                            @(thisVersion.DiffMeanBonusPercent?.ToString("0.##"))%
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Bonus pay gap (median)</th>
                    @for (int i = 0; i < returnsForYear.Count; i++)
                    {
                        Return thisVersion = returnsForYear[i];
                        Return previousVersion = i < returnsForYear.Count - 1 ? returnsForYear[i + 1] : null;

                        bool isChanged = previousVersion != null &&
                                         (thisVersion.DiffMedianBonusPercent != previousVersion.DiffMedianBonusPercent);

                        <td class="govuk-table__cell @(isChanged ? "value-changed-from-previous-return" : null)">
                            @(thisVersion.DiffMedianBonusPercent?.ToString("0.##"))%
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Highest paid quarter</th>
                    @for (int i = 0; i < returnsForYear.Count; i++)
                    {
                        Return thisVersion = returnsForYear[i];
                        Return previousVersion = i < returnsForYear.Count - 1 ? returnsForYear[i + 1] : null;

                        bool isChanged = previousVersion != null &&
                                         ((thisVersion.MaleUpperQuartilePayBand != previousVersion.MaleUpperQuartilePayBand) ||
                                          (thisVersion.FemaleUpperQuartilePayBand != previousVersion.FemaleUpperQuartilePayBand));

                        <td class="govuk-table__cell @(isChanged ? "value-changed-from-previous-return" : null)">
                            <span style="white-space: nowrap;">@(thisVersion.MaleUpperQuartilePayBand.ToString("0"))% male</span>
                            <br />
                            <span style="white-space: nowrap;">@(thisVersion.FemaleUpperQuartilePayBand.ToString("0"))% female</span>
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">2nd-highest paid quarter</th>
                    @for (int i = 0; i < returnsForYear.Count; i++)
                    {
                        Return thisVersion = returnsForYear[i];
                        Return previousVersion = i < returnsForYear.Count - 1 ? returnsForYear[i + 1] : null;

                        bool isChanged = previousVersion != null &&
                                         ((thisVersion.MaleUpperPayBand != previousVersion.MaleUpperPayBand) ||
                                          (thisVersion.FemaleUpperPayBand != previousVersion.FemaleUpperPayBand));

                        <td class="govuk-table__cell @(isChanged ? "value-changed-from-previous-return" : null)">
                            <span style="white-space: nowrap;">@(thisVersion.MaleUpperPayBand.ToString("0"))% male</span>
                            <br />
                            <span style="white-space: nowrap;">@(thisVersion.FemaleUpperPayBand.ToString("0"))% female</span>
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">2nd-lowest paid quarter</th>
                    @for (int i = 0; i < returnsForYear.Count; i++)
                    {
                        Return thisVersion = returnsForYear[i];
                        Return previousVersion = i < returnsForYear.Count - 1 ? returnsForYear[i + 1] : null;

                        bool isChanged = previousVersion != null &&
                                         ((thisVersion.MaleMiddlePayBand != previousVersion.MaleMiddlePayBand) ||
                                          (thisVersion.FemaleMiddlePayBand != previousVersion.FemaleMiddlePayBand));

                        <td class="govuk-table__cell @(isChanged ? "value-changed-from-previous-return" : null)">
                            <span style="white-space: nowrap;">@(thisVersion.MaleMiddlePayBand.ToString("0"))% male</span>
                            <br />
                            <span style="white-space: nowrap;">@(thisVersion.FemaleMiddlePayBand.ToString("0"))% female</span>
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Lowest paid quarter</th>
                    @for (int i = 0; i < returnsForYear.Count; i++)
                    {
                        Return thisVersion = returnsForYear[i];
                        Return previousVersion = i < returnsForYear.Count - 1 ? returnsForYear[i + 1] : null;

                        bool isChanged = previousVersion != null &&
                                         ((thisVersion.MaleLowerPayBand != previousVersion.MaleLowerPayBand) ||
                                          (thisVersion.FemaleLowerPayBand != previousVersion.FemaleLowerPayBand));

                        <td class="govuk-table__cell @(isChanged ? "value-changed-from-previous-return" : null)">
                            <span style="white-space: nowrap;">@(thisVersion.MaleLowerPayBand.ToString("0"))% male</span>
                            <br />
                            <span style="white-space: nowrap;">@(thisVersion.FemaleLowerPayBand.ToString("0"))% female</span>
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Link to company website</th>
                    @for (int i = 0; i < returnsForYear.Count; i++)
                    {
                        Return thisVersion = returnsForYear[i];
                        Return previousVersion = i < returnsForYear.Count - 1 ? returnsForYear[i + 1] : null;

                        bool isChanged = previousVersion != null &&
                                         (thisVersion.CompanyLinkToGPGInfo != previousVersion.CompanyLinkToGPGInfo);

                        <td class="govuk-table__cell @(isChanged ? "value-changed-from-previous-return" : null)">
                            @if (!string.IsNullOrWhiteSpace(thisVersion.CompanyLinkToGPGInfo))
                            {
                                try
                                {
                                    <a href="@(thisVersion.CompanyLinkToGPGInfo)"
                                       class="govuk-link">
                                        Link
                                    </a>
                                }
                                catch
                                {
                                    @(thisVersion.CompanyLinkToGPGInfo)
                                }
                            }
                            else
                            {
                                @:No link
                            }
                        </td>
                    }
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Senior Responsible Officer</th>
                    @for (int i = 0; i < returnsForYear.Count; i++)
                    {
                        Return thisVersion = returnsForYear[i];
                        Return previousVersion = i < returnsForYear.Count - 1 ? returnsForYear[i + 1] : null;

                        bool isChanged = previousVersion != null &&
                                         ((thisVersion.FirstName != previousVersion.FirstName) ||
                                          (thisVersion.LastName != previousVersion.LastName) ||
                                          (thisVersion.JobTitle != previousVersion.JobTitle));

                        <td class="govuk-table__cell @(isChanged ? "value-changed-from-previous-return" : null)">
                            @(thisVersion.FirstName) @(thisVersion.LastName)
                            <br />
                            (@(thisVersion.JobTitle))
                        </td>
                    }
                </tr>
            </tbody>
        </table>


    </div>
</div>
