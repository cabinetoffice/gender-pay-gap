@using GenderPayGap.Core.Helpers
@using GenderPayGap.WebUI.Views.Components.StatusMessages
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using GenderPayGap.Core.Classes
@model GenderPayGap.WebUI.Models.Report.ReportResponsiblePersonViewModel

@{
    string encryptedOrganisationId = Encryption.EncryptId(Model.Organisation.OrganisationId);
    string formattedReportingYears = ReportingYearsHelper.FormatYearAsReportingPeriod(Model.ReportingYear);

    string editOrReportTitle = Model.IsEditingSubmittedReturn
        ? "Edit your gender pay gap"
        : "Report your gender pay gap";

    ViewBag.Title = $"{editOrReportTitle} - reporting year {formattedReportingYears} - {Model.Organisation.OrganisationName} - Gender pay gap service";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
        {
            new CrumbViewModel
            {
                Text = "Manage Employers",
                Href = Url.Action("ManageOrganisationsGet", "ManageOrganisations")
            },
            new CrumbViewModel
            {
                Text = Model.Organisation.OrganisationName,
                Href = Url.Action("ManageOrganisationGet", "ManageOrganisations", new {encryptedOrganisationId})
            },
            new CrumbViewModel
            {
                Text = $"{formattedReportingYears} Reporting year",
                Href = Url.Action("ReportOverview", "ReportOverview", new { encryptedOrganisationId, reportingYear = Model.ReportingYear})
            },
            new CrumbViewModel
            {
                Text = "Responsible person"
            }
        };
    }

    @(await Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}



<form method="post"
      action="@Url.Action("ReportResponsiblePersonPost", "ReportResponsiblePerson", new { encryptedOrganisationId, reportingYear = Model.ReportingYear})">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            @(Html.AntiForgeryToken())
            @{ await Html.RenderPartialAsync("../Components/StatusMessages/StatusMessages", new StatusMessagesViewModel()); }
            @(await Html.GovUkErrorSummary(ViewData.ModelState))
            @Html.HiddenFor(m => m.IsEditingForTheFirstTime)

            <h1 class="govuk-heading-xl govuk-!-margin-bottom-6">
                Person responsible in your organisation
                <br/>
                <span class="govuk-!-font-size-27 govuk-!-margin-top-3" style="display: inline-block; line-height: 1.3 !important;">
                    Reporting as @(Model.Organisation.OrganisationName)
                    <br/>
                    for snapshot date
                    @(Model.Organisation.SectorType.GetAccountingStartDate(Model.ReportingYear).ToString("d MMMM yyyy"))
                </span>
            </h1>
        </div>
    </div>
    
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <p class="govuk-body">
                Enter the name and job title of the person in your organisation who is responsible for confirming that
                your gender pay gap information for this reporting year is accurate.
            </p>
            <p class="govuk-body">
                This should be the same person who signs the
                <a href="https://www.gov.uk/government/publications/gender-pay-gap-reporting-guidance-for-employers/overview#written-statement"
                   class="govuk-link" target="_blank" rel="noopener">
                    written statement (opens in a new tab)</a>
                that you publish on your website.
            </p>
            
            <fieldset class="govuk-fieldset">
                @(await Html.GovUkTextInputFor(
                    m => m.ResponsiblePersonFirstName,
                    labelOptions: new LabelViewModel {Text = "First name"},
                    formGroupOptions: new FormGroupViewModel {Classes = "govuk-!-margin-bottom-2"},
                    classes: "govuk-input--width-20"
                    ))
                @(await Html.GovUkTextInputFor(
                    m => m.ResponsiblePersonLastName,
                    labelOptions: new LabelViewModel {Text = "Last name"},
                    formGroupOptions: new FormGroupViewModel {Classes = "govuk-!-margin-bottom-2"},
                    classes: "govuk-input--width-20"
                    ))
                @(await Html.GovUkTextInputFor(
                    m => m.ResponsiblePersonJobTitle,
                    labelOptions: new LabelViewModel {Text = "Job title"},
                    classes: "govuk-input--width-20"
                    ))

            </fieldset>

            @(await Html.GovUkButton(new ButtonViewModel
            {
                Text = "Save and continue",
                Classes = "govuk-!-margin-bottom-6"
            }))

            <p class="govuk-body">
                <a href="@Url.Action("ReportOverview", "ReportOverview", new { encryptedOrganisationId, reportingYear = Model.ReportingYear})"
                   class="govuk-link">
                    Cancel and return to @(formattedReportingYears) report overview
                </a>
            </p>
        </div>
        @await Html.PartialAsync("~/Views/Submit/RelatedContent.cshtml")
    </div>
    
</form>
