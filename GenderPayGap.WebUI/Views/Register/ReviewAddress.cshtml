@{
    ViewBag.Title = "Review address change - Gender pay gap reporting service";
}
@model GenderPayGap.WebUI.Models.Register.OrganisationViewModel

<div class="breadcrumbs dynamic-content default-content" style="display: block;">
    <ol>
        <li style="display: block; padding-top: 0.75em; padding-bottom: 0;">
            &lt;
            @Html.ActionLink("Back to Pending Registrations", "PendingRegistrations", "Admin")
        </li>
    </ol>
</div>
@using (Html.BeginForm("ReviewRequest"))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.SectorType)
    @Html.HiddenFor(model => model.CompanyNumber)
    @Html.HiddenFor(model => model.CharityNumber)
    @Html.HiddenFor(model => model.MutualNumber)
    @Html.HiddenFor(model => model.OtherName)
    @Html.HiddenFor(model => model.OtherValue)
    @Html.HiddenFor(model => model.ReviewCode)
    @Html.HiddenFor(model => model.ManualAddress)

    <div class="grid-row">
        <div class="column-two-thirds">
            @await Html.CustomValidationSummaryAsync()
            <h1 class="heading-large">
                <span>Approve existing employer application - with change of address</span>
            </h1>
            <table class="confirm-details">
                <tbody>
                <tr>
                    <td colspan="3">
                        <br>
                        <span class="heading-medium">Person registering to report and change address</span>
                    </td>
                </tr>
                <tr class="row dynamic-content publicManual privateManual" style="display: table-row;">
                    <td>
                        Your name
                    </td>
                    <td>
                        <!-- Default Dynamic Section -->
                        @Model.ContactFirstName @Model.ContactLastName (@Model.ContactJobTitle)
                    </td>
                    <td></td>
                </tr>

                <tr class="row dynamic-content publicManual ">
                    <td>
                        Contact Email
                    </td>
                    <td>
                        <!-- Default Dynamic Section -->
                        @Model.ContactEmailAddress
                    </td>
                    <td></td>
                </tr>
                <tr class="row dynamic-content publicManual ">
                    <td>
                        Registered Email
                    </td>
                    <td>
                        <!-- Default Dynamic Section -->
                        @Model.EmailAddress
                    </td>
                    <td></td>
                </tr>
                <tr class="row dynamic-content publicManual privateManual" style="display: table-row;">
                    <td>
                        Telephone
                    </td>
                    <td>
                        <!-- Default Dynamic Section -->
                        @Model.ContactPhoneNumber
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td colspan="3">
                        <br>
                        <span class="heading-medium">Organisation being registered</span>
                    </td>
                </tr>
                <tr>
                    <td>
                        Organisation
                    </td>
                    <td>
                        @Model.OrganisationName
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td>
                        Business&nbsp;Sectors (SIC&nbsp;Codes)
                    </td>
                    <td colspan="2">
                        @await Html.PartialAsync("_SicCodeList", Model.SicCodes)
                    </td>
                    <td></td>
                </tr>
                <tr>
                    <td style="vertical-align: top;">
                        <span class="heading-medium">New address</span>
                    </td>
                    <td>
                        @Html.Raw(Model.GetFullAddress().Replace(",", ",<br/>"))
                    </td>
                    <td></td>
                </tr>
                @if (!string.IsNullOrWhiteSpace(Model.RegisteredAddress))
                {
                    <tr>
                        <td style="vertical-align: top;">
                            <span class="heading-medium">Old address</span>
                        </td>
                        <td>
                            @Html.Raw(Model.RegisteredAddress.Replace(",", ",<br/>"))
                        </td>
                        <td></td>
                    </tr>
                }

                <tr>
                    <td colspan="3">
                        <br>
                        <span class="heading-medium">References</span>
                    </td>
                </tr>

                @await Html.PartialAsync("DisplayReference", new {name = "Company number", value = Model.CompanyNumber})

                @await Html.PartialAsync("DisplayReference", new {name = "Charity number", value = Model.CharityNumber, defaultValue = ""})

                @await Html.PartialAsync("DisplayReference", new {name = "Mutual partnership number", value = Model.MutualNumber, defaultValue = ""})

                @await Html.PartialAsync("DisplayReference", new {name = Model.OtherName, value = Model.OtherValue, defaultValue = ""})

                </tbody>
            </table>

            <fieldset>
                <br>
                <p>
                    <button type="submit" class="button" name="command" value="approve">Confirm and complete registration</button>
                </p>
                <p>
                    <button type="submit" class="link-button" name="command" value="decline">Reject registration</button>
                </p>
            </fieldset>
        </div>
    </div>
}