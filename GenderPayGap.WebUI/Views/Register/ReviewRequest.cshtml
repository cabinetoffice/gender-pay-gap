@{
    ViewBag.Title = "Review new registration request - Gender pay gap reporting service";
}
@model GenderPayGap.WebUI.Models.Register.OrganisationViewModel

<div class="breadcrumbs dynamic-content default-content" style="display: block;">
    <ol>
        <li style="display: block; padding-bottom: 0; padding-top: 0.75em;">
            &lt;
            @Html.ActionLink("Back to Pending Registrations", "PendingRegistrations", "Admin")
        </li>
    </ol>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.SectorType)
    @Html.HiddenFor(model => model.CompanyNumber)
    @Html.HiddenFor(model => model.CharityNumber)
    @Html.HiddenFor(model => model.MutualNumber)
    @Html.HiddenFor(model => model.OtherName)
    @Html.HiddenFor(model => model.OtherValue)
    @Html.HiddenFor(model => model.ReviewCode)
    @Html.HiddenFor(model => model.ManualAddress)

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            @await Html.CustomValidationSummaryAsync()
            <h1 class="heading-large">
                <span>Approve registration request</span>
            </h1>
            <table class="govuk-table">
                <caption class="govuk-table__caption govuk-!-margin-bottom-2">Person registering to report</caption>
                <tbody class="govuk-table__body">
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="row">
                            Your name
                        </th>
                        <td class="govuk-table__cell">
                            @Model.ContactFirstName @Model.ContactLastName (@Model.ContactJobTitle)
                        </td>
                    </tr>

                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="row">
                            Contact Email
                        </th>
                        <td class="govuk-table__cell">
                            @Model.ContactEmailAddress
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="row">
                            Registered Email
                        </th>
                        <td class="govuk-table__cell">
                            @Model.EmailAddress
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="row">
                            Telephone
                        </th>
                        <td class="govuk-table__cell">
                            @Model.ContactPhoneNumber
                        </td>
                    </tr>
                </tbody>
            </table>

            <table class="govuk-table">
                <caption class="govuk-table__caption govuk-!-margin-bottom-2">Organisation being registered</caption>
                <tbody class="govuk-table__body">
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="row">
                            Organisation
                        </th>
                        <td class="govuk-table__cell">
                            @Model.OrganisationName
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="row">
                            Business&nbsp;Sectors (SIC&nbsp;Codes)
                        </th>
                        <td class="govuk-table__cell">
                            @await Html.PartialAsync("_SicCodeList", Model.SicCodes)
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="row">
                            Address to register
                        </th>
                        <td class="govuk-table__cell">
                            @foreach (string addressLine in Model.GetFullAddress())
                            {
                                @(addressLine)<br />
                            }
                        </td>
                    </tr>
                    @if (Model.RegisteredAddress != null)
                    {
                        <tr class="govuk-table__row">
                            <th class="govuk-table__header" scope="row">
                                Current address
                            </th>
                            <td class="govuk-table__cell">
                                @foreach (string addressLine in Model.RegisteredAddress)
                                {
                                    @(addressLine)<br />
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <table class="govuk-table">
                <caption class="govuk-table__caption govuk-!-margin-bottom-2">Provided references</caption>
                <tbody class="govuk-table__body">

                    @await Html.PartialAsync("DisplayReference", new {name = "Company number", value = Model.CompanyNumber, defaultValue = ""})

                    @await Html.PartialAsync("DisplayReference", new {name = "Charity number", value = Model.CharityNumber, defaultValue = ""})

                    @await Html.PartialAsync("DisplayReference", new {name = "Mutual partnership number", value = Model.MutualNumber, defaultValue = ""})

                    @await Html.PartialAsync("DisplayReference", new {name = Model.OtherName, value = Model.OtherValue, defaultValue = ""})

                </tbody>
            </table>
            <h1 class="heading-medium">
                Similar organisations
            </h1>
            @if (Model.ManualEmployers != null && Model.ManualEmployers.Any())
            {
                <table class="govuk-table" summary="A list organisations that match your organisation details">
                    <caption class="govuk-table__caption govuk-visually-hidden">Customer and Business listing</caption>
                    <thead class="govuk-table__head">
                        <tr class="govuk-table__row">
                            <th class="govuk-table__header" scope="col">Organisation and address</th>
                            <th class="govuk-table__header" scope="col">References</th>
                            <th class="govuk-table__header" scope="col">Registration Status</th>
                        </tr>
                    </thead>
                    <tbody class="govuk-table__body">
                        @for (var i = 0; i < Model.ManualEmployers.Count; i++)
                        {
                            <tr class="govuk-table__row">
                                <td class="govuk-table__cell">
                                    @Model.ManualEmployers[i].OrganisationName <span>@Model.ManualEmployers[i].GetFullAddress()</span>
                                </td>
                                <td class="govuk-table__cell">
                                    @{ Dictionary<string, string> references = Model.GetReferences(i); }
                                    @foreach (string key in references.Keys)
                                    {
                                        if (key.EqualsI("Company No") && references[key].EqualsI(Model.CompanyNumber)
                                            || key.EqualsI("Charity No") && references[key].EqualsI(Model.CharityNumber)
                                            || key.EqualsI("Mutual No") && references[key].EqualsI(Model.MutualNumber)
                                            || key.EqualsI(Model.OtherName) && references[key].EqualsI(Model.OtherValue)
                                            )
                                        {
                                            <span style="color: red; display: block; white-space: nowrap;">@key: @(references[key])</span>
                                        }
                                        else
                                        {
                                            <span style="display: block; white-space: nowrap;">@key: @(references[key])</span>
                                        }
                                    }
                                </td>
                                <td class="govuk-table__cell">
                                    @Model.ManualEmployers[i].RegistrationStatus
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>No similar organisations found.</p>
            }
            <fieldset>
                <br>
                <p>
                    <button type="submit" class="button" name="command" value="approve">Confirm and complete registration</button>
                </p>
                <p>
                    <button type="submit" class="link-button" name="command" value="decline">Reject registration</button>
                </p>
            </fieldset>
        </div>
    </div>
}
