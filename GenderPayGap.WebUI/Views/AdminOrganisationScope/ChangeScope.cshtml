@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using GenderPayGap.WebUI.Models.Admin
@using GenderPayGap.Core.Helpers
@using GenderPayGap.Core
@model GenderPayGap.WebUI.Models.Admin.AdminChangeScopeViewModel

@{
    ViewBag.Title = "Change scope - Administration - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
{
            new CrumbViewModel
            {
                Text = "Admin",
                Href = Url.Action("AdminHomePage", "AdminHomepage")
            },
            new CrumbViewModel
            {
                Text = Model.OrganisationName,
                Href = Url.Action("ViewOrganisation", "AdminViewOrganisation", new {id = Model.OrganisationId})
            },
            new CrumbViewModel
            {
                Text = "Scope history",
                Href = Url.Action("ViewScopeHistory", "AdminOrganisationScope", new {id = Model.OrganisationId})
            },
            new CrumbViewModel
            {
                Text = "Change scope"
            }
        };
    }

    @(await Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <span class="govuk-caption-xl">Administration</span>
        <h1 class="govuk-heading-xl">
            Change scope
            <br />
            <span class="govuk-!-font-size-27">
                for @(Model.OrganisationName)
            </span>
        </h1>

        <form method="POST" action="@Url.Action("ChangeScopePost", "AdminOrganisationScope", new { id = Model.OrganisationId, year = Model.ReportingYear })">
            @(Html.AntiForgeryToken())

            @(await Html.GovUkErrorSummary(ViewData.ModelState, new[]
            {
                nameof(AdminChangeScopeViewModel.NewScopeStatus),
                nameof(AdminChangeScopeViewModel.Reason)
            }))

            <table class="govuk-table">
                <tbody class="govuk-table__body">
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Organisation name</th>
                        <td class="govuk-table__cell">@(Model.OrganisationName)</td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Reporting year</th>
                        <td class="govuk-table__cell">@(ReportingYearsHelper.FormatYearAsReportingPeriod(Model.ReportingYear))</td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Current scope</th>
                        <td class="govuk-table__cell">@(Model.CurrentScopeStatus)</td>
                    </tr>
                    @if (Model.CurrentScopeStatus == ScopeStatuses.InScope)
                    {
                        <tr class="govuk-table__row">
                            <th scope="row" class="govuk-table__header">New scope</th>
                            <td class="govuk-table__cell">@(ScopeStatuses.OutOfScope)</td>
                        </tr>
                    }
                    @if (Model.CurrentScopeStatus == ScopeStatuses.OutOfScope)
                    {
                        <tr class="govuk-table__row">
                            <th scope="row" class="govuk-table__header">New scope</th>
                            <td class="govuk-table__cell">@(ScopeStatuses.InScope)</td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="govuk-form-group">

                @if (Model.CurrentScopeStatus != ScopeStatuses.InScope && Model.CurrentScopeStatus != ScopeStatuses.OutOfScope)
                {
                    @await Html.GovUkRadiosFor(
                        m => m.NewScopeStatus,
                        new FieldsetViewModel
                        {
                            Legend = new LegendViewModel
                            {
                                Text = "Please select a new scope",
                                Classes = "govuk-fieldset__legend--m"
                            },
                            Classes = "govuk-!-margin-top-6"
                        })
                }
                else
                {
                    @(Html.HiddenFor(m => m.NewScopeStatus))
                }

                @await Html.GovUkCharacterCountFor(
                    m => m.Reason,
                    labelOptions: new LabelViewModel
                    {
                        Text = "What is the reason for this change?",
                        Classes = "govuk-label--m"
                    },
                    formGroupOptions: new FormGroupViewModel
                    {
                        Classes = "govuk-!-margin-top-6"
                    })

                @(await Html.GovUkButton(new ButtonViewModel
                {
                    Text = "Confirm",
                    Classes = "govuk-!-margin-bottom-4"
                }))

                <p class="govuk-body">
                    <a href="@Url.Action("ViewOrganisation", "AdminViewOrganisation", new {id = Model.OrganisationId})"
                       class="govuk-link">
                        Cancel and return to organisation page
                    </a>
                </p>

            </div>
        </form>
        
    </div>
</div>
