@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.Admin.ChangeOrganisationAddressViewModel

@{
    ViewBag.Title = $"Change address - {Model.Organisation.OrganisationName} - Administration - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>();
        crumbs.Add(new CrumbViewModel
        {
            Text = "Admin",
            Href = Url.Action("AdminHomePage", "AdminHomepage")
        });

        crumbs.Add(new CrumbViewModel
        {
            Text = Model.Organisation.OrganisationName,
            Href = Url.Action("ViewOrganisation", "AdminViewOrganisation", new {id = Model.Organisation.OrganisationId})
        });

        crumbs.Add(new CrumbViewModel
        {
            Text = "Address history",
            Href = Url.Action("ViewAddressHistory", "AdminOrganisationAddress", new {id = Model.Organisation.OrganisationId})
        });

        crumbs.Add(new CrumbViewModel
        {
            Text = "Change address"
        });
    }

    @(await Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <span class="govuk-caption-xl">Administration</span>
        <h1 class="govuk-heading-xl">
            Change address
            <br/>
            <span class="govuk-!-font-size-27">
                for @(Model.Organisation.OrganisationName)
            </span>
        </h1>

        <h2 class="govuk-heading-l">
            Check the new address
        </h2>

        <form method="post" action="@Url.Action("ChangeAddressPost", "AdminOrganisationAddress", new {id = Model.Organisation.OrganisationId})">
            @(Html.AntiForgeryToken())
            @(Html.HiddenFor(m => m.Action))
            @(Html.HiddenFor(m => m.Reason))
            @{
                var latestAddress = Model.Organisation.GetLatestAddress();
            }

            <table class="govuk-table">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th scope="col" class="govuk-table__header">
                            <span class="govuk-visually-hidden">Address component</span>
                        </th>
                        <th scope="col" class="govuk-table__header">Old address</th>
                        <th scope="col" class="govuk-table__header">New address</th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">PO Box</th>
                        <td class="govuk-table__cell">
                            @(latestAddress?.PoBox)
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.PoBox)
                            @(Html.HiddenFor(m => m.PoBox))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Address 1</th>
                        <td class="govuk-table__cell">
                            @(latestAddress?.Address1)
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.Address1)
                            @(Html.HiddenFor(m => m.Address1))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Address 2</th>
                        <td class="govuk-table__cell">
                            @(latestAddress?.Address2)
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.Address2)
                            @(Html.HiddenFor(m => m.Address2))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Address 3</th>
                        <td class="govuk-table__cell">
                            @(latestAddress?.Address3)
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.Address3)
                            @(Html.HiddenFor(m => m.Address3))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Town / city</th>
                        <td class="govuk-table__cell">
                            @(latestAddress?.TownCity)
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.TownCity)
                            @(Html.HiddenFor(m => m.TownCity))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">County</th>
                        <td class="govuk-table__cell">
                            @(latestAddress?.County)
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.County)
                            @(Html.HiddenFor(m => m.County))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Country</th>
                        <td class="govuk-table__cell">
                            @(latestAddress?.Country)
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.Country)
                            @(Html.HiddenFor(m => m.Country))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Post code</th>
                        <td class="govuk-table__cell">
                            @(latestAddress?.GetPostCodeInAllCaps())
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.PostCode)
                            @(Html.HiddenFor(m => m.PostCode))
                        </td>
                    </tr>
                </tbody>
            </table>

            @(await Html.GovUkButton(new ButtonViewModel
            {
                Text = "Confirm and save",
                Classes = "govuk-!-margin-bottom-4"
            }))

            <p class="govuk-body">
                <a href="@Url.Action("ViewOrganisation", "AdminViewOrganisation", new {id = Model.Organisation.OrganisationId})"
                   class="govuk-link">
                    Cancel and return to organisation page
                </a>
            </p>

        </form>

    </div>
</div>
