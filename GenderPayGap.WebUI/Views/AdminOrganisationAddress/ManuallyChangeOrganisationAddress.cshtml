@using GenderPayGap.WebUI.Models.Admin
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.Admin.ChangeOrganisationAddressViewModel

@{
    ViewBag.Title = $"Change address - {Model.Organisation.OrganisationName} - Administration - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>();
        crumbs.Add(new CrumbViewModel
        {
            Text = "Admin",
            Href = Url.Action("AdminHomePage", "AdminHomepage")
        });

        crumbs.Add(new CrumbViewModel
        {
            Text = Model.Organisation.OrganisationName,
            Href = Url.Action("ViewOrganisation", "AdminViewOrganisation", new { id = Model.Organisation.OrganisationId })
        });

        crumbs.Add(new CrumbViewModel
        {
            Text = "Address history",
            Href = Url.Action("ViewAddressHistory", "AdminOrganisationAddress", new { id = Model.Organisation.OrganisationId })
        });

        crumbs.Add(new CrumbViewModel
        {
            Text = "Change address"
        });
    }

    @(Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <span class="govuk-caption-xl">Administration</span>
        <h1 class="govuk-heading-xl">
            Change address
            <br />
            <span class="govuk-!-font-size-27">
                for @(Model.Organisation.OrganisationName)
            </span>
        </h1>

        <form method="post" action="@Url.Action("ChangeAddressPost", "AdminOrganisationAddress", new { id = Model.Organisation.OrganisationId })">
            @(Html.AntiForgeryToken())
            @(Html.HiddenFor(m => m.Action))

            @(Html.GovUkErrorSummary(new[]
            {
                nameof(ChangeOrganisationAddressViewModel.IsUkAddress),
                nameof(ChangeOrganisationAddressViewModel.Reason),
            }))

            <fieldset class="govuk-fieldset">

                <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                    <h2 class="govuk-fieldset__heading">
                        What is their address?
                    </h2>
                </legend>

                @(Html.GovUkTextInputFor(
                    m => m.PoBox,
                    labelOptions: new LabelViewModel { Text = "PO Box" },
                    classes: "govuk-input--width-10",
                    formGroupOptions: new FormGroupViewModel { Classes = "govuk-!-margin-bottom-3" }
                ))
                @(Html.GovUkTextInputFor(
                    m => m.Address1,
                    labelOptions: new LabelViewModel { Text = "Address line 1" },
                    formGroupOptions: new FormGroupViewModel { Classes = "govuk-!-margin-bottom-3" },
                    autocomplete: "address-line1"
                ))
                @(Html.GovUkTextInputFor(
                    m => m.Address2,
                    labelOptions: new LabelViewModel { Text = "Address line 2" },
                    formGroupOptions: new FormGroupViewModel { Classes = "govuk-!-margin-bottom-3" },
                    autocomplete: "address-line2"
                ))
                @(Html.GovUkTextInputFor(
                    m => m.Address3,
                    labelOptions: new LabelViewModel { Text = "Address line 3" },
                    formGroupOptions: new FormGroupViewModel { Classes = "govuk-!-margin-bottom-3" },
                    autocomplete: "address-line3"
                ))
                @(Html.GovUkTextInputFor(
                    m => m.TownCity,
                    labelOptions: new LabelViewModel { Text = "Town / city" },
                    classes: "govuk-input--width-20",
                    formGroupOptions: new FormGroupViewModel { Classes = "govuk-!-margin-bottom-3" },
                    autocomplete: "address-level2"
                ))
                @(Html.GovUkTextInputFor(
                    m => m.County,
                    labelOptions: new LabelViewModel { Text = "County" },
                    classes: "govuk-input--width-20",
                    formGroupOptions: new FormGroupViewModel { Classes = "govuk-!-margin-bottom-3" },
                    autocomplete: "address-level1"
                ))
                @(Html.GovUkTextInputFor(
                    m => m.Country,
                    labelOptions: new LabelViewModel { Text = "Country" },
                    classes: "govuk-input--width-20",
                    formGroupOptions: new FormGroupViewModel { Classes = "govuk-!-margin-bottom-3" },
                    autocomplete: "country-name"
                ))
                @(Html.GovUkTextInputFor(
                    m => m.PostCode,
                    labelOptions: new LabelViewModel { Text = "Post code" },
                    classes: "govuk-input--width-10",
                    formGroupOptions: new FormGroupViewModel { Classes = "govuk-!-margin-bottom-3" },
                    autocomplete: "postal-code"
                ))
            </fieldset>

            @(Html.GovUkRadiosFor(
                m => m.IsUkAddress,
                fieldsetOptions: new FieldsetViewModel
                {
                    Legend = new LegendViewModel
                    {
                        Text = "Is this a UK address?",
                        Classes = "govuk-fieldset__legend--m"
                    },
                    Classes = "govuk-!-margin-top-4"
                }
            ))

            @(Html.GovUkCharacterCountFor(
                m => m.Reason,
                labelOptions: new LabelViewModel
                {
                    Text = "What is the reason for this change?",
                    Classes = "govuk-label--m"
                }
            ))

            @(Html.GovUkButton(new ButtonViewModel
            {
                Text = "Continue",
                Classes = "govuk-!-margin-bottom-4"
            }))

            <p class="govuk-body">
                <a href="@Url.Action("ViewOrganisation", "AdminViewOrganisation", new { id = Model.Organisation.OrganisationId })"
                   class="govuk-link">
                    Cancel and return to organisation page
                </a>
            </p>

        </form>

    </div>
</div>

