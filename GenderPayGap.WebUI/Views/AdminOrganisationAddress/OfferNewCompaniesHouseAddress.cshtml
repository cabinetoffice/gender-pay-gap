@using GenderPayGap.WebUI.Models.Admin
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.Admin.ChangeOrganisationAddressViewModel

@{
    ViewBag.Title = $"Change address - {Model.Organisation.OrganisationName} - Administration - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>();
        crumbs.Add(new CrumbViewModel
        {
            Text = "Admin",
            Href = Url.Action("AdminHomePage", "AdminHomepage")
        });

        crumbs.Add(new CrumbViewModel
        {
            Text = Model.Organisation.OrganisationName,
            Href = Url.Action("ViewOrganisation", "AdminViewOrganisation", new { id = Model.Organisation.OrganisationId })
        });

        crumbs.Add(new CrumbViewModel
        {
            Text = "Address history",
            Href = Url.Action("ViewAddressHistory", "AdminOrganisationAddress", new { id = Model.Organisation.OrganisationId })
        });

        crumbs.Add(new CrumbViewModel
        {
            Text = "Change address"
        });
    }

    @(Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <span class="govuk-caption-xl">Administration</span>
        <h1 class="govuk-heading-xl">
            Change address
            <br />
            <span class="govuk-!-font-size-27">
                for @(Model.Organisation.OrganisationName)
            </span>
        </h1>
        
        @(Html.GovUkErrorSummary())

        <h2 class="govuk-heading-l">
            This organisation has a different address registered with Companies House
        </h2>

        <form method="post" action="@Url.Action("ChangeAddressPost", "AdminOrganisationAddress", new { id = Model.Organisation.OrganisationId })">
            @(Html.AntiForgeryToken())
            @(Html.HiddenFor(m => m.Action))

            <table class="govuk-table">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th scope="col" class="govuk-table__header"></th>
                        <th scope="col" class="govuk-table__header">Current address</th>
                        <th scope="col" class="govuk-table__header">Address from Companies House</th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">PO Box</th>
                        <td class="govuk-table__cell">
                            @(Model.Organisation.GetLatestAddress().PoBox)
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.PoBox)
                            @(Html.HiddenFor(m => m.PoBox))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Address 1</th>
                        <td class="govuk-table__cell">
                            @(Model.Organisation.GetLatestAddress().Address1)
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.Address1)
                            @(Html.HiddenFor(m => m.Address1))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Address 2</th>
                        <td class="govuk-table__cell">
                            @(Model.Organisation.GetLatestAddress().Address2)
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.Address2)
                            @(Html.HiddenFor(m => m.Address2))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Address 3</th>
                        <td class="govuk-table__cell">
                            @(Model.Organisation.GetLatestAddress().Address3)
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.Address3)
                            @(Html.HiddenFor(m => m.Address3))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Town / city</th>
                        <td class="govuk-table__cell">
                            @(Model.Organisation.GetLatestAddress().TownCity)
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.TownCity)
                            @(Html.HiddenFor(m => m.TownCity))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">County</th>
                        <td class="govuk-table__cell">
                            @(Model.Organisation.GetLatestAddress().County)
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.County)
                            @(Html.HiddenFor(m => m.County))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Country</th>
                        <td class="govuk-table__cell">
                            @(Model.Organisation.GetLatestAddress().Country)
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.Country)
                            @(Html.HiddenFor(m => m.Country))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Post code</th>
                        <td class="govuk-table__cell">
                            @(Model.Organisation.GetLatestAddress().GetPostCodeInAllCaps())
                        </td>
                        <td class="govuk-table__cell">
                            @(Model.PostCode)
                            @(Html.HiddenFor(m => m.PostCode))
                        </td>
                    </tr>
                </tbody>
            </table>

            @(Html.GovUkRadiosFor(
                m => m.AcceptCompaniesHouseAddress,
                fieldsetOptions: new FieldsetViewModel
                {
                    Legend = new LegendViewModel
                    {
                        Text = "Would you like to use this address from Companies House?",
                        Classes = "govuk-fieldset__legend--m"
                    },
                    Classes = "govuk-!-margin-top-6"
                }
            ))

            <div id="reason-for-change-container">
                @(Html.GovUkTextAreaFor(
                    m => m.Reason,
                    labelOptions: new LabelViewModel
                    {
                        Text = "What is the reason for this change?",
                        Classes = "govuk-label--m"
                    },
                    hintOptions: new HintViewModel
                    {
                        Text = "(Only required if you are using the address from Companies House)"
                    }
                ))
            </div>
            <script>
                (function () {
                    var acceptCoHoRadio = document.getElementById('@($"GovUk_Radio_{nameof(ChangeOrganisationAddressViewModel.AcceptCompaniesHouseAddress)}_{nameof(AcceptCompaniesHouseAddress.Accept)}")');
                    var radios = document.querySelectorAll('input[type=radio][name="@($"GovUk_Radio_{nameof(ChangeOrganisationAddressViewModel.AcceptCompaniesHouseAddress)}")"]');

                    function changeReasonVisibilityBasedOnCoHoAddressAcceptRadio() {
                        var reasonElement = document.getElementById('reason-for-change-container');
                        reasonElement.style.display = (acceptCoHoRadio.checked ? null : 'none');
                    }

                    changeReasonVisibilityBasedOnCoHoAddressAcceptRadio();

                    radios.forEach(function(radio) {
                        radio.addEventListener('change', changeReasonVisibilityBasedOnCoHoAddressAcceptRadio);
                    });
                })();
            </script>

            @(Html.GovUkButton(new ButtonViewModel
            {
                Text = "Continue",
                Classes = "govuk-!-margin-bottom-4"
            }))

            <p class="govuk-body">
                <a href="@Url.Action("ViewOrganisation", "AdminViewOrganisation", new { id = Model.Organisation.OrganisationId })"
                   class="govuk-link">
                    Cancel and return to organisation page
                </a>
            </p>

        </form>

    </div>
</div>
