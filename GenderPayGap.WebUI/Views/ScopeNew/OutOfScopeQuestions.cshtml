@using GovUkDesignSystem.GovUkDesignSystemComponents
@using GovUkDesignSystem
@using GenderPayGap.WebUI.Classes.Formatters
@using GenderPayGap.WebUI.Controllers.SendFeedback
@using GenderPayGap.WebUI.Models.ScopeNew
@using GenderPayGap.Core
@model GenderPayGap.WebUI.Models.ScopeNew.OutOfScopeViewModel

@{
    ViewBag.Title = "Tell us why your organisation is not in scope - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        string encryptedOrganisationId = Encryption.EncryptQuerystring(Model.Organisation.OrganisationId.ToString());
        var crumbs = new List<CrumbViewModel>
        {
            new CrumbViewModel
            {
                Text = "Manage Organisations",
                Href = Url.Action("ManageOrganisations", "Organisation")
            },
            new CrumbViewModel
            {
                Text = Model.Organisation.OrganisationName,
                Href = Url.Action("ManageOrganisation", "Organisation", new {id = encryptedOrganisationId})
            },
            new CrumbViewModel
            {
                Text = "Change Scope (" + Model.ReportingYear.Year + " Reporting Year)"
            }
        };
    }

    @(Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <form method="POST" action="@Url.Action("SendFeedbackPost", "Feedback")">
            @(Html.AntiForgeryToken())
            <h1 class="govuk-heading-xl">Tell us why your organisation doesn't need to report</h1>
            
            <div class="govuk-form-group">
            
                @(Html.GovUkErrorSummary(new[]
                {
                    nameof(OutOfScopeViewModel.WhyOutOfScope),
                    nameof(OutOfScopeViewModel.WhyOutOfScopeDetails),
                    nameof(OutOfScopeViewModel.HaveReadGuidance)
                }))

                @{
                    var whyOutOfScopeConditionalOptions =
                        new Dictionary<WhyOutOfScope?, Func<object, object>>
                        {
                            {
                                WhyOutOfScope.Other,
                                @<text>
                                    @(Html.GovUkLabel(new LabelViewModel {For = nameof(FeedbackViewModel.OtherSourceText), Text = "Please provide some details"}))
                                    @(Html.GovUkTextAreaFor(m => m.WhyOutOfScopeDetails))
                                 </text>
                            }
                        };
                }
                
                @(Html.GovUkRadiosFor(
                    m => m.WhyOutOfScope,
                    new FieldsetViewModel
                    {
                        Legend = new LegendViewModel
                        {
                            Text = "Why is your organisation not required to report their gender pay gap data for the " + Model.ReportingYear.Year + "/" + (Model.ReportingYear.Year + 1).ToString().Substring(2,2) + " reporting year?",
                            Classes = "govuk-fieldset__legend--m"
                        },
                        Classes = "govuk-!-margin-top-6"
                    },
                    itemLabelOptions: new Dictionary<WhyOutOfScope?, LabelViewModel>
                    {
                        {
                            WhyOutOfScope.Under250,
                            new LabelViewModel
                            {
                                Text = "My organisation had fewer than 250 employees on the " + new GDSDateFormatter(Model.ReportingYear).FullStartDate
                            }
                        }
                    },
                    conditionalOptions: whyOutOfScopeConditionalOptions
                    ))
                
                @(Html.GovUkRadiosFor(
                    m => m.HaveReadGuidance,
                    new FieldsetViewModel
                    {
                        Legend = new LegendViewModel
                        {
                            Text = "Have you read our guidance, which explains who needs to report?",
                            Classes = "govuk-fieldset__legend--m"
                        },
                        Classes = "govuk-!-margin-top-6"
                    },
                    new HintViewModel
                    {
                        Html = @<p>If you would like to read the guidance then you can find it <a href="@Global.WhoNeedsToReportGuidanceLink" target="_blank" rel="noopener noreferrer"><span class="govuk-visually-hidden">Find the guidance </span>here<span class="govuk-visually-hidden">(opens in a new window)</span></a></p>
                    }
                ))

            </div>

        </form>
    </div>
</div>
