@using GenderPayGap.Core
@using GenderPayGap.Core.Helpers
@using GenderPayGap.Database
@using GenderPayGap.WebUI.Helpers
@using GenderPayGap.WebUI.Models.ViewReports
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.ManageOrganisations.ManageOrganisationViewModel

@{
    ViewBag.Title = "Manage your employers - Gender pay gap service";
    string encryptedOrganisationId = Encryption.EncryptQuerystring(Model.Organisation.OrganisationId.ToString());
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
        {
            new CrumbViewModel
            {
                Text = "Manage Employers",
                Href = Url.Action("ManageOrganisationsGet", "ManageOrganisations")
            },
            new CrumbViewModel
            {
                Text = Model.Organisation.OrganisationName
            },
        };
    }

    @(await Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">

        <h1 class="govuk-heading-xl">
            Manage your employer's reporting
            <br>
            <span class="govuk-!-font-size-27">
                for @(Model.Organisation.OrganisationName)
            </span>
        </h1>
    
        
        <h2 class="govuk-heading-l">
            Your employer's reports
        </h2>
    
        <table class="govuk-table govuk-!-margin-bottom-9">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header">
                        Deadline
                    </th>
                    <th scope="col" class="govuk-table__header">
                        Reporting requirement
                    </th>
                    <th scope="col" class="govuk-table__header">
                        Report status
                    </th>
                    <th scope="col" class="govuk-table__header">
                        <span class="govuk-visually-hidden">
                            Action
                        </span>
                    </th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @foreach (int reportingYear in ReportingYearsHelper.GetReportingYears(Model.Organisation.SectorType).OrderByDescending(y => y))
                {
                    bool requiredToReportForYear = Model.OrganisationIsRequiredToSubmit(reportingYear);
                    ReportStatusTag reportStatusTag = ReportStatusTagHelper.GetReportStatusTag(Model.Organisation, reportingYear);
                    
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">
                            @(ReportingYearsHelper.GetDeadline(Model.Organisation.SectorType, reportingYear).ToString("d MMM yyyy"))
                        </th>
                        
                        <td class="govuk-table__cell">
                            You
                            @(requiredToReportForYear ? "are required" : "are not required")
                            to report.
                            @if (ReportingYearsHelper.CanChangeScope(Model.Organisation.SectorType, reportingYear))
                            {
                                <br/>
                                <a href="@Url.Action("ChangeOrganisationScope", "Scope", new {encryptedOrganisationId, reportingYear = reportingYear})"
                                   class="govuk-link">
                                    Think this is wrong?
                                    <span class="govuk-visually-hidden">
                                        Change scope for year @(ReportingYearsHelper.FormatYearAsReportingPeriod(reportingYear))
                                    </span>
                                </a>
                            }
                        </td>
                        
                        <td class="govuk-table__cell">
                            @await Html.PartialAsync("ReportStatusBadge",
                                new ReportStatusBadgeViewModel
                                {
                                    ReportStatusTag = reportStatusTag,
                                    ReportSubmittedDate = Model.Organisation.GetReturn(reportingYear)?.Modified,
                                    DeadlineDate = ReportingYearsHelper.GetDeadline(Model.Organisation.SectorType, reportingYear)
                                })
                            
                            @if (requiredToReportForYear &&
                                 ReportingYearsHelper.IsReportingYearExcludedFromLateFlagEnforcement(reportingYear) &&
                                 (reportStatusTag == ReportStatusTag.NotRequiredDueToCovid ||
                                  reportStatusTag == ReportStatusTag.Overdue ||
                                  reportStatusTag == ReportStatusTag.SubmittedLate))
                            {
                                <br/>
                                <div class="govuk-!-padding-top-2" style="max-width: 375px;">
                                        The deadline for 2019-20 was
                                        @(ReportingYearsHelper.GetDeadline(Model.Organisation.SectorType, 2019).ToString("d MMMM yyyy")).
                                        Due to Coronavirus (COVID-19), enforcement of reporting deadlines does not
                                        apply to employers in the 2019-20 reporting year.
                                </div>
                            }
                        </td>
                        
                        <td class="govuk-table__cell">
                            @if (Model.DoesReturnOrDraftReturnExistForYear(reportingYear))
                            {
                               <a loadtest-id="create-report-@(reportingYear)"
                                  href="@Url.Action("ReportOverview", "ReportOverview", new { encryptedOrganisationId, reportingYear = reportingYear, canTriggerLateSubmissionWarning = true}) ">
                                   @Model.GetReportLinkText(reportingYear)
                               </a>
                            }
                            else
                            {
                               <a loadtest-id="create-report-@(reportingYear)"
                                  href="@Url.Action("ReportingStart", "ReportStarting", new {encryptedOrganisationId, reportingYear = reportingYear})">
                                   @Model.GetReportLinkText(reportingYear)
                               </a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        
        <h2 class="govuk-heading-l">
            Registered users
        </h2>
        
        @{
            List<User> usersRegisteredToReportForOrganisation = Model.GetFullyRegisteredUsersForOrganisationWithCurrentUserFirst();
        }
        
        @if (usersRegisteredToReportForOrganisation.Count == 1)  // If s User can view this page, then there will always be at least 1 User - themselves!
        {
            <p class="govuk-body">
                You are the only person registered to report for this employer.
            </p>
            <p class="govuk-body govuk-!-margin-bottom-2">
                If you remove yourself:
            </p>
            <ul class="govuk-list govuk-list--bullet">
                <li>You will not be able to report for this employer</li>
                <li>Someone else must register to report on behalf of this employer - this can take up to a week</li>
                <li>Your account will remain open</li>
            </ul>
        }
        else
        {
            <p class="govuk-body">
                The following people are registered to report gender pay gap information for this employer:
            </p>
        }
        
        <table class="govuk-table govuk-!-margin-bottom-9">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header">
                        Name
                    </th>
                    <th scope="col" class="govuk-table__header">
                        Email address
                    </th>
                    <th scope="col" class="govuk-table__header">
                        <span class="govuk-visually-hidden">
                            Action
                        </span>
                    </th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @foreach (User userRegisteredToReport in usersRegisteredToReportForOrganisation)
                {
                    string encryptedUserId = Encryption.EncryptQuerystring(userRegisteredToReport.UserId.ToString());
                    
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">
                            @(userRegisteredToReport.Fullname)
                            @if (userRegisteredToReport.UserId == Model.User.UserId)
                            {
                                <span>(You)</span>
                            }
                        </th>
                        <td class="govuk-table__cell" style="word-wrap: anywhere;">
                            @(userRegisteredToReport.EmailAddress)
                        </td>
                        <td class="govuk-table__cell">
                            <a href="@Url.Action("RemoveUserFromOrganisationGet", "RemoveUserFromOrganisation", new {encryptedOrganisationId = encryptedOrganisationId, userToRemoveEncryptedUserId = encryptedUserId})"
                               class="govuk-link">
                                Remove user
                                <span class="govuk-visually-hidden">
                                    @(userRegisteredToReport.Fullname)
                                </span>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        
        
        <h2 class="govuk-heading-l">
            Employer details
        </h2>
        
        <details class="govuk-details govuk-!-margin-bottom-4"
                 data-module="govuk-details">
            <summary class="govuk-details__summary">
                <span class="govuk-details__summary-text">
                    Need to make changes to your employer's details?
                </span>
            </summary>
            
            @if (Model.Organisation.SectorType == SectorTypes.Private &&
                 !string.IsNullOrWhiteSpace(Model.Organisation.CompanyNumber) &&
                 !Model.Organisation.OptedOutFromCompaniesHouseUpdate)
            {
                <div class="govuk-details__text">
                    <h3 class="govuk-heading-s">
                        Name or address
                    </h3>
                    <p class="govuk-body">
                        If your company’s name or address is incorrect,
                        <a href="https://www.gov.uk/file-changes-to-a-company-with-companies-house"
                           class="govuk-link">
                            tell Companies House</a>.
                        It may take some time for any changes to show on the gender pay gap service.
                    </p>
                    
                    <h3 class="govuk-heading-s">
                        SIC code
                    </h3>
                    <p class="govuk-body">
                        This service shows the sector your company is in (for example, ‘Manufacturing’) based on your
                        Standard Industrial Classification (SIC) code.
                        It does not show the specific class for your SIC code (for example, ‘Manufacture of leather clothes’).
                    </p>
                    <p class="govuk-body">
                        If you need to change your SIC code, you can do it when you file your next
                        <a href="https://www.gov.uk/file-your-confirmation-statement-with-companies-house"
                           class="govuk-link">
                            confirmation statement</a>.
                        You can file a confirmation statement early if you need to change it sooner.
                    </p>
                </div>
            }
            else
            {
                <div class="govuk-details__text">
                    Please contact
                    <a href="mailto:@(Global.GpgReportingEmail)" class="govuk-link">
                        @Global.GpgReportingEmail
                    </a>
                </div>
            }
        </details>
        
        <dl class="govuk-summary-list">
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Employer name
                </dt>
                <dd class="govuk-summary-list__value">
                    @(Model.Organisation.OrganisationName)
                </dd>
            </div>
            @if (!string.IsNullOrWhiteSpace(Model.Organisation.CompanyNumber))
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Companies House number
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @(Model.Organisation.CompanyNumber)
                    </dd>
                </div>
            }
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Registered address
                </dt>
                <dd class="govuk-summary-list__value">
                    @foreach (string addressLine in Model.Organisation.GetLatestAddress().GetAddressLines())
                    {
                        @(addressLine)<br/>
                    }
                </dd>
            </div>
            @if (Model.Organisation.GetSicCodes().Any())
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Nature of business
                        <br/>
                        (SIC codes)
                    </dt>
                    <dd class="govuk-summary-list__value">
                        <ul class="govuk-list">
                            @foreach (OrganisationSicCode organisationSicCode in Model.Organisation.OrganisationSicCodes.Where(osc => !osc.IsRetired()))
                            {
                                <li>
                                    <b>@(organisationSicCode.SicCode.SicCodeId)</b>
                                    @(organisationSicCode.SicCode.Description)
                                    <br/>
                                    <span class="govuk-body-s">
                                        part of: @(organisationSicCode.SicCode.SicSection.Description)
                                    </span>
                                </li>
                            }
                        </ul>
                    </dd>
                </div>
            }
        </dl>

    </div>
</div>

