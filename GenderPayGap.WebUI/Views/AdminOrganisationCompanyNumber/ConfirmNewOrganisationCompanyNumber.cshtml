@using GenderPayGap.BusinessLogic.Services
@using GenderPayGap.Database
@using GenderPayGap.WebUI.Models.Admin
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.Admin.AdminOrganisationCompanyNumberViewModel

@{
    ViewBag.Title = $"Change company number - {Model.Organisation.OrganisationName} - Administration - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
{
            new CrumbViewModel
            {
                Text = "Admin",
                Href = Url.Action("Home", "Admin")
            },
            new CrumbViewModel
            {
                Text = Model.Organisation.OrganisationName,
                Href = Url.Action("ViewOrganisation", "AdminViewOrganisation", new {id = Model.Organisation.OrganisationId})
            },
            new CrumbViewModel
            {
                Text = "Change company number"
            }
        };
    }

    @(Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}


<span class="govuk-caption-xl">Administration</span>
<h1 class="govuk-heading-xl">
    Change company number
    <br />
    <span class="govuk-!-font-size-27">
        for @(Model.Organisation.OrganisationName)
    </span>
</h1>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <form method="POST" action="@Url.Action("ChangeScopePost", "AdminOrganisationScope", new { id = Model.Organisation.OrganisationId })">
            @(Html.AntiForgeryToken())
            @(Html.HiddenFor(m => m.NewCompanyNumber))

            <table class="govuk-table">
                <tbody class="govuk-table__body">
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Organisation name</th>
                        <td class="govuk-table__cell">@(Model.Organisation.OrganisationName)</td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Current company number</th>
                        <td class="govuk-table__cell">@(Model.Organisation.CompanyNumber ?? "(none)")</td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">New company number</th>
                        <td class="govuk-table__cell">@(Model.NewCompanyNumber)</td>
                    </tr>
                </tbody>
            </table>

            <div class="govuk-warning-text">
                <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
                <strong class="govuk-warning-text__text">
                    <span class="govuk-warning-text__assistive">Warning</span>
                    Changing the company number will cause this organisation 
                    to be opted in to updates from Companies House.
                    The following changes will be made to the organisation:
                </strong>
            </div>

            <h3 class="govuk-heading-m">Current organisation details</h3>

            <table class="govuk-table">
                <tbody class="govuk-table__body">
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header govuk-!-width-one-third">Current name</th>
                        <td class="govuk-table__cell">@(Model.Organisation.OrganisationName)</td>
                        <td></td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header govuk-!-width-one-third">Current address</th>
                        <td class="govuk-table__cell">@(Model.Organisation.OrganisationAddresses.OrderByDescending(a => a.Created).FirstOrDefault()?.GetAddressString() ?? "(No address)")</td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header govuk-!-width-one-third">Current SIC codes</th>
                        <td class="govuk-table__cell">
                            @foreach (OrganisationSicCode organisationSicCode in Model.Organisation.OrganisationSicCodes.Where(osc => !osc.Retired.HasValue))
                            {
                                @(organisationSicCode.SicCode.SicCodeId)
                                <br />
                            }
                        </td>
                        <td></td>
                    </tr>
                </tbody>
            </table>


            <h3 class="govuk-heading-m">Organisation details after opting in</h3>

            <table class="govuk-table">
                <tbody class="govuk-table__body">
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header govuk-!-width-one-third">New name</th>
                        <td class="govuk-table__cell">@(UpdateFromCompaniesHouseService.IsCompanyNameEqual(Model.Organisation.GetName(), Model.CompaniesHouseCompany.CompanyName) ? "(Not changed)" : Model.CompaniesHouseCompany.CompanyName)</td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header govuk-!-width-one-third">New address</th>
                        @{ OrganisationAddress addressFromCoHo = UpdateFromCompaniesHouseService.CreateOrganisationAddressFromCompaniesHouseAddress(Model.CompaniesHouseCompany.RegisteredOfficeAddress); }
                        <td class="govuk-table__cell">@(UpdateFromCompaniesHouseService.AddressMatches(addressFromCoHo, Model.Organisation.LatestAddress) ? "(Not changed)" : addressFromCoHo.GetAddressString())</td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header govuk-!-width-one-third">New SIC codes</th>

                        @if (UpdateFromCompaniesHouseService.SicCodesEqual(Model.Organisation.GetSicCodes(), Model.CompaniesHouseCompany.SicCodes))
                        {
                            <td class="govuk-table__cell">
                                (Not changed)
                            </td>
                        }
                        else
                        {
                            <td class="govuk-table__cell">
                                @{
                                    var companiesHouseSicCOdes = Model.CompaniesHouseCompany.SicCodes ?? new List<string>();
                                }
                                @foreach (string organisationSicCode in companiesHouseSicCOdes)
                                {
                                    @(organisationSicCode)
                                    <br />
                                }
                            </td>
                        }
                    </tr>
                </tbody>
            </table>

            @(Html.GovUkTextAreaFor(
                m => m.Reason,
                labelOptions: new LabelViewModel
                {
                    Text = "What is the reason for this change?",
                    Classes = "govuk-label--m"
                }
            ))

            <div class="govuk-form-group">
                <div>
                    @(Html.GovUkButton(new ButtonViewModel
                    {
                        Text = "Confirm",
                        Classes = "govuk-!-margin-bottom-4",
                        Name = nameof(AdminOrganisationCompanyNumberViewModel.CurrentPage),
                        Value = nameof(AdminOrganisationCompanyNumberViewModelCurrentPage.ConfirmNew)
                    }))
                </div>

                <div>
                    @(Html.GovUkButton(new ButtonViewModel
                    {
                        Text = "Enter a different company number",
                        Classes = "govuk-button--secondary govuk-!-margin-bottom-4",
                        Name = nameof(AdminOrganisationCompanyNumberViewModel.CurrentPage),
                        Value = nameof(AdminOrganisationCompanyNumberViewModelCurrentPage.BackToChange)
                    }))
                </div>

                <p class="govuk-body">
                    <a href="@Url.Action("ViewOrganisation", "AdminViewOrganisation", new {id = Model.Organisation.OrganisationId})"
                       class="govuk-link">
                        Cancel and return to organisation page
                    </a>
                </p>
            </div>

        </form>
    </div>
</div>
