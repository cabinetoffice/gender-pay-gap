@using GenderPayGap.Core
@using GenderPayGap.Database.Models
@using GenderPayGap.WebUI.Views.AdminFeedback
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.Admin.AdminFeedbackToCategoriseViewModel

@{
    ViewBag.Title = "Categorise new feedback - Administration - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
        {
            new CrumbViewModel
            {
                Text = "Admin",
                Href = Url.Action("AdminHomePage", "AdminHomepage")
            },
            new CrumbViewModel
            {
                Text = "Categorise new feedback"
            }
        };
    }

    @(await Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <span class="govuk-caption-xl">
            Administration
        </span>
        <h1 class="govuk-heading-xl govuk-!-margin-bottom-6">
            Categorise new feedback
        </h1>

        <p class="govuk-body">
            There are
            <span class="govuk-!-font-size-36 govuk-!-font-weight-bold">
                @(Model.NumberOfNewFeedbacks)
            </span>
            new pieces of feedback to categorise
        </p>
        
        @if (Model.FeedbackToCategorise != null)
        {
            <h2 class="govuk-heading-m">
                Next piece of feedback
            </h2>
            
            <form action="@Url.Action("CategoriseFeedbackPost", "AdminFeedback")"
                  method="post"
                  style="display: flex; flex-direction: row; justify-content: space-between;">
                @(Html.AntiForgeryToken())
                <input type="hidden" name="feedbackId" value="@(Model.FeedbackToCategorise.FeedbackId)"/>
                
                <button class="govuk-button govuk-button--warning"
                        style="min-width: 200px;"
                        data-module="govuk-button"
                        name="status"
                        value="@(FeedbackStatus.Spam)">
                    <span class="govuk-visually-hidden">Mark feedback as </span>Spam
                </button>
                <button class="govuk-button"
                        style="min-width: 200px;"
                        data-module="govuk-button"
                        name="status"
                        value="@(FeedbackStatus.NotSpam)">
                    <span class="govuk-visually-hidden">Mark feedback as </span>Not spam
                </button>
            </form>

            <table class="govuk-table">
                <tbody class="govuk-table__body">
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">
                            Date received
                        </th>
                        <td class="govuk-table__cell">
                            @(Model.FeedbackToCategorise.CreatedDate.ToString("ddd d MMM yyyy, HH:mm"))
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">
                            Details
                        </th>
                        <td class="govuk-table__cell">
                            @if (string.IsNullOrWhiteSpace(Model.FeedbackToCategorise.Details))
                            {
                                <span class="govuk-hint">
                                    (none)
                                    <br/>
                                    <span class="govuk-!-font-size-16">
                                        Note: A piece of feedback with no Details is normally <b>not spam</b>
                                    </span>
                                </span>
                            }
                            else
                            {
                                @(Model.FeedbackToCategorise.Details)
                            }
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">
                            Email address
                        </th>
                        <td class="govuk-table__cell">
                            @if (string.IsNullOrWhiteSpace(Model.FeedbackToCategorise.EmailAddress))
                            {
                                <span class="govuk-hint">(none)</span>
                            }
                            else
                            {
                                @(Model.FeedbackToCategorise.EmailAddress)
                            }
                        </td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">
                            Phone number
                        </th>
                        <td class="govuk-table__cell">
                            @if (string.IsNullOrWhiteSpace(Model.FeedbackToCategorise.PhoneNumber))
                            {
                                <span class="govuk-hint">(none)</span>
                            }
                            else
                            {
                                @(Model.FeedbackToCategorise.PhoneNumber)
                            }
                        </td>
                    </tr>
                </tbody>
            </table>
        }

    </div>
</div>
