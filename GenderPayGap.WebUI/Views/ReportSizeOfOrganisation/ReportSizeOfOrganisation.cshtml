@using GenderPayGap.Core.Helpers
@using GenderPayGap.WebUI.Views.Components.StatusMessages
@using GenderPayGap.Core.Classes
@using GenderPayGap.Extensions
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.Report.ReportSizeOfOrganisationViewModel

@{
    string encryptedOrganisationId = Encryption.EncryptQuerystring(Model.Organisation.OrganisationId.ToString());
    string formattedReportingYears = ReportingYearsHelper.FormatYearAsReportingPeriod(Model.ReportingYear);

    string editOrReportTitle = Model.IsEditingSubmittedReturn
        ? "Edit your gender pay gap"
        : "Report your gender pay gap";

    ViewBag.Title = $"{editOrReportTitle} - reporting year {formattedReportingYears} - {Model.Organisation.OrganisationName} - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
        {
            new CrumbViewModel
            {
                Text = "Manage Employers",
                Href = Url.Action("ManageOrganisationsGet", "ManageOrganisations")
            },
            new CrumbViewModel
            {
                Text = Model.Organisation.OrganisationName,
                Href = Url.Action("ManageOrganisationGet", "ManageOrganisations", new {encryptedOrganisationId})
            },
            new CrumbViewModel
            {
                Text = $"{formattedReportingYears} Reporting year",
                Href = Url.Action("ReportOverview", "ReportOverview", new { encryptedOrganisationId, reportingYear = Model.ReportingYear})
            },
            new CrumbViewModel
            {
                Text = "Number of employees"
            }
        };
    }

    @(await Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<form method="post" action="@Url.Action("ReportSizeOfOrganisationPost", "ReportSizeOfOrganisation", new { encryptedOrganisationId, reportingYear = Model.ReportingYear})">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            @(Html.AntiForgeryToken())
            @{ await Html.RenderPartialAsync("../Components/StatusMessages/StatusMessages", new StatusMessagesViewModel()); }
            @(await Html.GovUkErrorSummary(ViewData.ModelState))
            @Html.HiddenFor(m => m.IsEditingForTheFirstTime)
            
            <h1 class="govuk-heading-xl govuk-!-margin-bottom-6">
                How many employees did you have on your snapshot date?
                <br/>
                <span class="govuk-!-font-size-27 govuk-!-margin-top-3" style="display: inline-block; line-height: 1.3 !important;">
                    Reporting as @(Model.Organisation.OrganisationName)
                    <br/>
                    for snapshot date
                    @(Model.Organisation.SectorType.GetAccountingStartDate(Model.ReportingYear).ToString("d MMMM yyyy"))
                </span>
            </h1>
        </div>
    </div>
    
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <fieldset class="govuk-fieldset">
                @(await Html.GovUkRadiosFor(m => m.SizeOfOrganisation))

                <div class="govuk-inset-text">
                    <p>
                        You can read more about
                        <a href="https://www.gov.uk/government/publications/gender-pay-gap-reporting-guidance-for-employers/who-needs-to-report#how-to-work-out-if-you-have-250-or-more-employees"
                           target="_blank" rel="noopener">
                            how to work out if you have 250 or more employees (opens in a new tab)</a>.
                    </p>
                </div>
            </fieldset>

            @(await Html.GovUkButton(new ButtonViewModel
            {
                Text = "Save and continue",
                Classes = "govuk-!-margin-bottom-6"
            }))

            <p class="govuk-body">
                <a href="@Url.Action("ReportOverview", "ReportOverview", new { encryptedOrganisationId, reportingYear = Model.ReportingYear})"
                   class="govuk-link">
                    Cancel and return to @(formattedReportingYears) report overview
                </a>
            </p>
        </div>
        @await Html.PartialAsync("~/Views/Submit/RelatedContent.cshtml")
    </div>
</form>
