@using GenderPayGap.WebUI.Models.Report
@using GenderPayGap.WebUI.Views.Components.StatusMessages
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.Report.ReportSizeOfOrganisationViewModel

@{
    string encryptedOrganisationId = Encryption.EncryptQuerystring(Model.Organisation.OrganisationId.ToString());
    string formattedReportingYears = $"{Model.ReportingYear}-{(Model.ReportingYear + 1) % 100}";

    string editOrReportTitle = Model.IsEditingSubmittedReturn
        ? "Edit your gender pay gap"
        : "Report your gender pay gap";

    ViewBag.Title = $"{editOrReportTitle} - reporting year {formattedReportingYears} - {Model.Organisation.OrganisationName} - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
        {
            new CrumbViewModel
            {
                Text = "Your Organisations",
                Href = Url.Action("ManageOrganisationsGet", "ManageOrganisations")
            },
            new CrumbViewModel
            {
                Text = Model.Organisation.OrganisationName,
                Href = Url.Action("ManageOrganisationGet", "ManageOrganisations", new {encryptedOrganisationId = encryptedOrganisationId})
            },
            new CrumbViewModel
            {
                Text = $"{editOrReportTitle} (reporting year {formattedReportingYears})",
                Href = Url.Action("ReportOverview", "ReportOverview",
                    new {encryptedOrganisationId = encryptedOrganisationId, reportingYear = Model.ReportingYear})
            },
            new CrumbViewModel
            {
                Text = $"Size of your organisation"
            }
        };
    }

    @(Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}


<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        @{ await Html.RenderPartialAsync("../Components/StatusMessages/StatusMessages", new StatusMessagesViewModel()); }

        @(Html.GovUkErrorSummary())

        <h1 class="govuk-heading-xl">
            @(editOrReportTitle)
            <br />
            <span class="govuk-!-font-size-27">
                for @(Model.Organisation.OrganisationName)
            </span>
            <br />
            <span class="govuk-!-font-size-27" style="margin-top: 4px; display: block;">
                for reporting year @(formattedReportingYears)
            </span>
        </h1>

        <form method="post"
              action="@Url.Action("ReportSizeOfOrganisationPost", "ReportSizeOfOrganisation",
                          new {encryptedOrganisationId = encryptedOrganisationId, reportingYear = Model.ReportingYear})">
            @(Html.AntiForgeryToken())

            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                    <h2 class="govuk-fieldset__heading">
                        Size of your organisation
                    </h2>
                </legend>

                @(Html.GovUkRadiosFor(
                    m => m.SizeOfOrganisation
                ))

            </fieldset>

            <button id="clear-size-of-organisation-button"
                    class="govuk-button govuk-button--secondary govuk-!-margin-bottom-4"
                    data-module="govuk-button"
                    style="display: none;">
                Clear
            </button>

            @(Html.GovUkButton(new ButtonViewModel
            {
                Text = "Save",
                Name = nameof(Model.Action),
                Value = nameof(ReportPagesAction.Save),
                Classes = "govuk-!-margin-bottom-6"
            }))
            @(Html.GovUkButton(new ButtonViewModel
            {
                Text = "Save and continue",
                Name = nameof(Model.Action),
                Value = nameof(ReportPagesAction.SaveAndContinue),
                Classes = "govuk-!-margin-bottom-6"
            }))

        </form>

        <p class="govuk-body">
            <a href="@Url.Action("ReportOverview", "ReportOverview",
                         new {encryptedOrganisationId = encryptedOrganisationId, reportingYear = Model.ReportingYear})"
               class="govuk-link">
                Back to report overview
            </a>
        </p>

    </div>
</div>

<script>
    (function() {
        var clearSizeOfOrganisationButton = document.getElementById('clear-size-of-organisation-button');

        clearSizeOfOrganisationButton.addEventListener('click', function (event) {
            event.preventDefault();

            var organisationSizeRadios = document.querySelectorAll("input[name='GovUk_Radio_@(nameof(Model.SizeOfOrganisation))']");
            organisationSizeRadios.forEach(function(radio) {
                radio.checked = false;
            });
        });

        clearSizeOfOrganisationButton.style.display = 'block'; // We do specifically want 'block' here, so that the button appears on a separate line
    })();
</script>
