@inject ISearchViewService SearchViewService
@inject ICompareViewService CompareViewService
@model CompareBasketViewModel
@{
    int compareCount = CompareViewService.BasketItemCount;
    bool hasMaximumItemsInBasket = compareCount >= CompareViewService.MaxCompareBasketCount;
    if (string.IsNullOrWhiteSpace(ViewBag.ReturnUrl))
    {
        ViewBag.ReturnUrl = Context.GetUri().PathAndQuery;
    }
}

@if (compareCount > 0)
{
    <div id="comparison-basket" class="no-print show-empty js-stick-at-top-when-scrolling @(compareCount < 1 ? "visuallyhidden" : "")" data-basket-count="@(compareCount)">
    <div class="comparison-basket-row grid-row">

        <div class="column-half" style="@(Model.CanViewCompare ? "padding-top: .5em;" : "")">
            @if (hasMaximumItemsInBasket)
            {
                <div>
                    <span class="error-message" style="font-size: 16px">The maximum number of employers you can compare is @CompareViewService.MaxCompareBasketCount</span>
                </div>
            }
            <div>
                Your comparison list contains <strong>@(compareCount) employer@(compareCount != 1 ? "s" : "")</strong>
            </div>
            @if (hasMaximumItemsInBasket)
            {
                <div>
                    <span><a href="@Url.Action(nameof(ViewingController.Download), "Viewing")">Download gender pay gap data</a> to view all employer submissions</span>
                </div>
            }
        </div>

        <div class="column-half">
            <ul class="list list-inline list-right">
                @if (Model.CanAddEmployers)
                {
                    <li>
                        <a href="@SearchViewService.GetLastSearchUrl()">Add another employer</a>
                    </li>
                }
                @if (compareCount > 0)
                {
                    @if (Model.CanClearCompare)
                    {
                        string clearBasketUrl = Url.Action(
                            nameof(CompareController.ClearEmployers), "Compare",
                            new {returnUrl = ViewBag.ReturnUrl}
                            );
                        <li>
                            <a href="@clearBasketUrl">Clear list</a>
                        </li>
                    }

                    @if (Model.CanViewCompare)
                    {
                        string viewBasketUrl = Url.Action(nameof(CompareController.CompareEmployers), "Compare");
                        <li>
                            <a class="button" href="@viewBasketUrl">View comparison</a>
                        </li>
                    }
                }
            </ul>
        </div>

    </div>
</div>
}
