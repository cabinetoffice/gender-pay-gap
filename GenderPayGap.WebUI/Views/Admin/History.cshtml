@using GenderPayGap.WebUI.Models.Admin
@model GenderPayGap.WebUI.Models.Admin.DownloadViewModel
@{
    ViewBag.Title = "Administration: History";
}

<main id="content" role="main">
    <div class="breadcrumbs dynamic-content default-content" style="display: block;">
        <ol>
            <li style="display: block; padding-top: 0.75em; padding-bottom: 0;">
                &lt;
                @Html.ActionLink("Back to Administration home", "Home")
            </li>
        </ol>
    </div>

    <div class="grid-row">
        <div class="column-full">
            <div style="float:right;font-size:smaller;">
                <span>
                    <a href="@Url.Action("History", "Admin", new {v = Guid.NewGuid().ToShortString()})" title="Show more recent content"><span class="visually-hidden">Show more recent content </span>@VirtualDateTime.Now.ToString("d MMM HH:mm")</a>
                </span>
            </div>

            <h1 class="heading-large" style="margin-top: 0.3em;">
                <span id="companyname">Administration</span>
                <span class="heading-secondary">History</span>
            </h1>

            <table class="download-table">
                <thead>
                <tr>
                    <th scope="col">Description</th>
                    <th scope="col">File</th>
                </tr>
                </thead>
                <tbody>
                @{
                    var type = "Registration History";
                    IEnumerable<DownloadViewModel.Download> downloads = Model.Downloads.Where(d => d.Type.EqualsI(type));
                }
                <tr>
                    <td colspan="2">
                        <b>@type Downloads</b>
                    </td>
                </tr>
                @if (!downloads.Any())
                {
                    <tr>
                        <td colspan="2">No @type.ToLower() found</td>
                    </tr>
                }
                else
                {
                    foreach (DownloadViewModel.Download download in downloads)
                    {
                        <tr>
                            <td>
                                <a href="@Url.Action("Read", new {filePath = download.Filepath})">
                                    <b>@download.Title</b>
                                </a><br/>@download.Description</td>
                            <td>
                                <a href="@Url.Action("Download", new {filePath = download.Filepath})" target="_blank">@download.Filename</a>
                            </td>
                        </tr>
                    }
                }

                @{
                    type = "Submission History";
                    downloads = Model.Downloads.Where(d => d.Type.EqualsI(type));
                }
                <tr>
                    <td colspan="2">
                        <b>@type Downloads</b>
                    </td>
                </tr>
                @if (!downloads.Any())
                {
                    <tr>
                        <td colspan="2">No @type.ToLower() found</td>
                    </tr>
                }
                else
                {
                    foreach (DownloadViewModel.Download download in downloads)
                    {
                        <tr>
                            <td>
                                <a href="@Url.Action("Read", new {filePath = download.Filepath})">
                                    <b>@download.Title</b>
                                </a><br/>@download.Description</td>
                            <td>
                                <a href="@Url.Action("Download", new {filePath = download.Filepath})" target="_blank">@download.Filename</a>
                            </td>
                        </tr>
                    }
                }

                </tbody>
            </table>

        </div>

    </div>
</main>