@using GenderPayGap.Database
@using GenderPayGap.WebUI.Models.AdminReferenceData
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.Admin.AdminSicCodeUploadCheckViewModel
@{
    ViewBag.Title = "Upload new SIC codes - Reference Data - Administration - Gender pay gap service";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
        {
            new CrumbViewModel
            {
                Text = "Admin",
                Href = Url.Action("AdminHomePage", "AdminHomepage")
            },
            new CrumbViewModel
            {
                Text = "Reference Data",
                Href = Url.Action("ReferenceData", "AdminReferenceData")
            },
            new CrumbViewModel
            {
                Text = "SIC codes"
            }
        };
    }

    @(await Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">

        <span class="govuk-caption-xl">Administration</span>
        <h1 class="govuk-heading-xl">
            Update SIC codes
        </h1>

        @(await Html.GovUkErrorSummary(ViewData.ModelState))

        <p class="govuk-body">Please review the changes you are about to make</p>

        <h2 class="govuk-heading-l">Summary of changes</h2>

        <p class="govuk-body">
            There are currently <span class="govuk-!-font-weight-bold">@(Model.AddsEditsDeletesSet.OldItems.Count)</span> SIC codes
            <br />
            The new files contains <span class="govuk-!-font-weight-bold">@(Model.AddsEditsDeletesSet.NewItems.Count)</span> SIC codes
        </p>

        <ul class="govuk-list govuk-list--bullet">
            <li><span class="govuk-!-font-weight-bold">@(Model.AddsEditsDeletesSet.ItemsToAdd.Count) created</span> SIC codes</li>
            <li><span class="govuk-!-font-weight-bold">@(Model.AddsEditsDeletesSet.ItemsToChange.Count) updated</span> SIC codes</li>
            <li><span class="govuk-!-font-weight-bold">@(Model.AddsEditsDeletesSet.ItemsToDelete.Count) deleted</span> SIC codes</li>
            <li><span class="govuk-!-font-weight-bold">@(Model.AddsEditsDeletesSet.ItemsWithNoChanges.Count)</span> SIC codes without any changes</li>
        </ul>

        @if (Model.AddsEditsDeletesSet.ItemsToAdd.Count > 0)
        {
            <h2 class="govuk-heading-l">
                @(Model.AddsEditsDeletesSet.ItemsToAdd.Count) created SIC code@(Model.AddsEditsDeletesSet.ItemsToAdd.Count > 1 ? "s" : "")
            </h2>

            <table class="govuk-table">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th scope="col" class="govuk-table__header govuk-!-width-one-quarter">SIC code ID</th>
                        <th scope="col" class="govuk-table__header govuk-!-width-one-quarter">SIC section ID</th>
                        <th scope="col" class="govuk-table__header">Description</th>
                        <th scope="col" class="govuk-table__header">Synonyms</th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                    @foreach (SicCode record in Model.AddsEditsDeletesSet.ItemsToAdd)
                    {
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">@(record.SicCodeId)</td>
                            <td class="govuk-table__cell">@(record.SicSectionId)</td>
                            <td class="govuk-table__cell">@(record.Description)</td>
                            <td class="govuk-table__cell">@(record.Synonyms)</td>
                        </tr>
                    }
                </tbody>
            </table>
        }

        @if (Model.AddsEditsDeletesSet.ItemsToChange.Count > 0)
        {
            <h2 class="govuk-heading-l govuk-!-margin-top-4">
                @(Model.AddsEditsDeletesSet.ItemsToChange.Count) updated SIC code@(Model.AddsEditsDeletesSet.ItemsToChange.Count > 1 ? "s" : "")
            </h2>
            <table class="govuk-table">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th scope="col" class="govuk-table__header govuk-!-width-one-quarter">SIC code ID</th>
                        <th scope="col" class="govuk-table__header govuk-!-width-one-quarter">SIC section ID</th>
                        <th scope="col" class="govuk-table__header">Description</th>
                        <th scope="col" class="govuk-table__header">Synonyms</th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                    @foreach (OldAndNew<SicCode> record in Model.AddsEditsDeletesSet.ItemsToChange)
                    {
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">@(record.Old.SicCodeId)</td>
                            <td class="govuk-table__cell">
                                <div>
                                    @(record.New.SicSectionId)
                                </div>
                                @if (record.Old.SicSectionId != record.New.SicSectionId)
                                {
                                    <div>
                                        previously @(record.Old.SicSectionId)
                                    </div>
                                }
                            </td>
                            <td class="govuk-table__cell ">
                                <div>@(record.New.Description)</div>
                                @if (record.Old.Description != record.New.Description)
                                {
                                    <div>
                                        previously @(record.Old.Description)
                                    </div>
                                }
                            </td>
                            <td class="govuk-table__cell ">
                                <div>@(record.New.Synonyms)</div>
                                @if (record.Old.Synonyms != record.New.Synonyms)
                                {
                                    <div>
                                        previously @(record.Old.Synonyms)
                                    </div>
                                }
                            </td>
                            
                        </tr>
                    }
                </tbody>
            </table>
        }

        @if (Model.AddsEditsDeletesSet.ItemsToDelete.Count > 0)
        {
            <h2 class="govuk-heading-l govuk-!-margin-top-4">
                @(Model.AddsEditsDeletesSet.ItemsToDelete.Count) deleted SIC code@(Model.AddsEditsDeletesSet.ItemsToDelete.Count > 1 ? "s" : "")
            </h2>

            @if (Model.AddsEditsDeletesSet.AnyItemsThatCannotBeDeleted)
            {
                <div class="govuk-warning-text">
                    <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
                    <strong class="govuk-warning-text__text">
                        <span class="govuk-warning-text__assistive">Warning</span>
                        It is not possible to delete SIC codes that are still in use.
                        Please go back and upload another file without any deletions.
                    </strong>
                </div>
            }

            <table class="govuk-table">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th scope="col" class="govuk-table__header govuk-!-width-one-quarter">SIC code ID</th>
                        <th scope="col" class="govuk-table__header govuk-!-width-one-quarter">SIC section ID</th>
                        <th scope="col" class="govuk-table__header">Description</th>
                        <th scope="col" class="govuk-table__header">Synonyms</th>
                        @if (Model.AddsEditsDeletesSet.ItemsToDelete.Count(r => r.OrganisationSicCodes.Count > 0) > 0)
                        {
                            <th scope="col" class="govuk-table__header">Number of current uses</th>
                        }
                    </tr>
                </thead>
                <tbody class="govuk-table__body">
                    @foreach (SicCode record in Model.AddsEditsDeletesSet.ItemsToDelete)
                    {
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">@(record.SicCodeId)</td>
                            <td class="govuk-table__cell">@(record.SicSectionId)</td>
                            <td class="govuk-table__cell">@(record.Description)</td>
                            <td class="govuk-table__cell">@(record.Synonyms)</td>
                            @if (record.OrganisationSicCodes.Count > 0)
                            {
                                <td class="govuk-table__cell">
                                    @(record.OrganisationSicCodes.Count)
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        }

    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">


        @if (!Model.AddsEditsDeletesSet.AnyChanges)
        {
            <p class="govuk-body govuk-!-margin-top-4">
                @(await Html.GovUkButton(new ButtonViewModel
                {
                    Text = "Confirm and continue",
                    Classes = "govuk-!-margin-bottom-1",
                    Disabled = true
                }))

                <br />
                The file you uploaded contains no changes to the SIC codes, so there is nothing to save.
            </p>
        }

        @if (Model.AddsEditsDeletesSet.AnyChanges && !Model.AddsEditsDeletesSet.AnyItemsThatCannotBeDeleted)
        {
            <form method="post" class="govuk-!-margin-top-4" action="@Url.Action("SicCodeUploadCheckPost", "AdminReferenceData")">
                @(Html.AntiForgeryToken())
                <input type="hidden" name="SerializedNewRecords" value="@(Model.SerializedNewRecords)" />

                @(await Html.GovUkCharacterCountFor(
                    m => m.Reason,
                    labelOptions: new LabelViewModel
                    {
                        Text = "What is the reason for this change?",
                        Classes = "govuk-label--m"
                    }
                    ))
                @(await Html.GovUkButton(new ButtonViewModel
                {
                    Text = "Confirm and continue",
                    Classes = "govuk-!-margin-bottom-4"
                }))

            </form>
        }

        <p class="govuk-body">
            <a href="@Url.Action("ReferenceData", "AdminReferenceData")"
               class="govuk-link">
                Cancel and return to the reference data page
            </a>
        </p>

    </div>
</div>
