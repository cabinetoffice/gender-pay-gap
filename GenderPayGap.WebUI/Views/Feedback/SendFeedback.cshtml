@using GenderPayGap.WebUI.Controllers.SendFeedback
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@using GenderPayGap.Core
@model GenderPayGap.WebUI.Controllers.SendFeedback.FeedbackViewModel
@{
    ViewBag.Title = "Give feedback about the gender pay gap service - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @(await Html.GovUkBackLink(new BackLinkViewModel
    {
        Text = "Back",
        OverrideWithJavascript = true
    }))
}

<div class="govuk-grid-row cookie-settings-page">
    <div class="govuk-grid-column-two-thirds">
        <form method="POST" action="@Url.Action("SendFeedbackPost", "Feedback")">
            @(Html.AntiForgeryToken())
            <h1 class="govuk-heading-xl">
                Give feedback about the gender pay gap service
            </h1>
            <div class="govuk-form-group">

                @(await Html.GovUkErrorSummary(ViewData.ModelState, new[]
                {
                    nameof(FeedbackViewModel.HowEasyIsThisServiceToUse),
                    nameof(FeedbackViewModel.HowDidYouHearAboutGpg),
                    nameof(FeedbackViewModel.WhyVisitGpgSite),
                    nameof(FeedbackViewModel.WhoAreYou)
                }))

                @(await Html.GovUkRadiosFor(
                    m => m.HowEasyIsThisServiceToUse,
                    new FieldsetViewModel
                    {
                        Legend = new LegendViewModel
                        {
                            Text = "How easy was this service to use?",
                            Classes = "govuk-fieldset__legend--m"
                        },
                        Classes = "govuk-!-margin-top-6"
                    }
                    ))

                @(await Html.GovUkCharacterCountFor(
                    m => m.Details,
                    labelOptions: new LabelViewModel
                    {
                        Text = "How could we improve your experience?",
                        Classes = "govuk-label--m"
                    },
                    formGroupOptions: new FormGroupViewModel
                    {
                        Classes = "govuk-!-margin-top-6"
                    }
                    ))

                @{
                    var howDidYouHearAboutGpgConditionalOptions =
                        new Dictionary<HowDidYouHearAboutGpg, Conditional>
                        {
                            {
                                HowDidYouHearAboutGpg.Other,
                                new Conditional
                                {
                                    Html = @<text>
                                               @(await Html.GovUkLabel(new LabelViewModel {Classes = "govuk-visually-hidden", For = nameof(FeedbackViewModel.OtherSourceText), Text = "Other source description"}))
                                               @(await Html.GovUkTextInputFor(m => m.OtherSourceText))
                                            </text>
                                }
                            }
                        };
                }

                @(await Html.GovUkCheckboxesFor(
                    m => m.HowDidYouHearAboutGpg,
                    new FieldsetViewModel
                    {
                        Legend = new LegendViewModel
                        {
                            Text = "How did you hear about the gender pay gap service?",
                            Classes = "govuk-fieldset__legend--m"
                        },
                        Classes = "govuk-!-margin-top-6"
                    },
                    new HintViewModel
                    {
                        Text = "Select all that apply."
                    },
                    conditionalOptions: howDidYouHearAboutGpgConditionalOptions
                    ))

                @{
                    var whyVisitGpgSiteConditionalOptions =
                        new Dictionary<WhyVisitGpgSite, Conditional>
                        {
                            {
                                WhyVisitGpgSite.Other,
                                new Conditional
                                {
                                    Html = @<text>
                                               @(await Html.GovUkLabel(new LabelViewModel {Classes = "govuk-visually-hidden", For = nameof(FeedbackViewModel.OtherReasonText), Text = "Other reason description"}))
                                               @(await Html.GovUkTextInputFor(m => m.OtherReasonText))
                                            </text>
                                }
                            }
                        };
                }

                @(await Html.GovUkCheckboxesFor(
                    m => m.WhyVisitGpgSite,
                    new FieldsetViewModel
                    {
                        Legend = new LegendViewModel
                        {
                            Text = "Why have you visited the site?",
                            Classes = "govuk-fieldset__legend--m"
                        },
                        Classes = "govuk-!-margin-top-6"
                    },
                    new HintViewModel
                    {
                        Text = "Select all that apply."
                    },
                    conditionalOptions: whyVisitGpgSiteConditionalOptions
                    ))

                @{
                    var whoAreYouConditionalOptions =
                        new Dictionary<WhoAreYou, Conditional>
                        {
                            {
                                WhoAreYou.Other,
                                new Conditional
                                {
                                    Html = @<text>
                                               @(await Html.GovUkLabel(new LabelViewModel {Classes = "govuk-visually-hidden", For = nameof(FeedbackViewModel.OtherReasonText), Text = "Other person description"}))
                                               @(await Html.GovUkTextInputFor(m => m.OtherPersonText))
                                            </text>
                                }
                            }
                        };
                }

                @(await Html.GovUkCheckboxesFor(
                    m => m.WhoAreYou,
                    new FieldsetViewModel
                    {
                        Legend = new LegendViewModel
                        {
                            Text = "Which of these best describe you?",
                            Classes = "govuk-fieldset__legend--m"
                        },
                        Classes = "govuk-!-margin-top-6"
                    },
                    new HintViewModel
                    {
                        Text = "Select all that apply."
                    },
                    conditionalOptions: whoAreYouConditionalOptions
                    ))

                <fieldset class="govuk-fieldset govuk-!-margin-top-6">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        Can we contact you?
                    </legend>
                    <div class="govuk-hint">
                        We sometimes like to follow up on the feedback that has been submitted to us.
                        If you are happy for us to get in touch with you, please enter your email address and/or phone number below.
                        For more information about how we use your data, see our
                        <a href="@(Url.Action("PrivacyPolicyGet", "PrivacyPolicy"))" class="govuk-link">privacy policy</a>
                    </div>

                    @(await Html.GovUkTextInput(new TextInputViewModel
                    {
                        Label = new LabelViewModel
                        {
                            Text = "Your email address (optional)"
                        },
                        Name = nameof(Model.EmailAddress),
                        InputMode = "email"
                    }))

                    @(await Html.GovUkTextInput(new TextInputViewModel
                    {
                        Label = new LabelViewModel
                        {
                            Text = "Your phone number (optional)"
                        },
                        Name = nameof(Model.PhoneNumber),
                        InputMode = "tel"
                    }))
                </fieldset>

                @(await Html.GovUkButton(new ButtonViewModel
                {
                    Text = "Submit",
                    Classes = "govuk-!-margin-top-6"
                }))

            </div>
        </form>
        
        <h2 class="govuk-heading-m">
            If you need help
        </h2>
        <p class="govuk-body govuk-!-margin-bottom-2">
            Email us at
            <a href="mailto:@(Global.GpgReportingEmail)"
               class="govuk-link">
                @(Global.GpgReportingEmail)</a>
            if you:
        </p>
        <ul class="govuk-list govuk-list--bullet">
            <li>need help with technical difficulties, managing your account, or using the gender pay gap service</li>
            <li>use an assistive technology, such as a screen reader, and cannot access all or part of the service</li>
        </ul>
        <p class="govuk-body">
            We cannot give case-by-case guidance on how you should calculate your gender pay gap or interpret the regulations.
        </p>

    </div>
</div>
