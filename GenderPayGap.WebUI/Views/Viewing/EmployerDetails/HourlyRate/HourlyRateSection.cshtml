@using GenderPayGap.WebUI.Models.Shared
@using GenderPayGap.WebUI.Models.Viewing
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using GenderPayGap.WebUI.Classes.TagHelpers
@model GenderPayGap.Database.Return

@{
    bool femaleHasLowerMeanHourlyPercent = Model.DiffMeanHourlyPayPercent >= 0;
    bool femaleHasLowerMedianHourlyPercent = Model.DiffMedianHourlyPercent >= 0;

    decimal FemaleMoneyFromMedianHourlyRate()
    {
        return femaleHasLowerMedianHourlyPercent
            ? 100 - Model.DiffMedianHourlyPercent
            : 100 + Math.Abs(Model.DiffMedianHourlyPercent);
    }

    string FemaleMedianHourlyRateMonitised()
    {
        decimal femaleMoneyFromMedianHourlyRate = FemaleMoneyFromMedianHourlyRate();

        decimal roundedRate = Math.Round(femaleMoneyFromMedianHourlyRate);
        if (roundedRate < 100)
        {
            return $"{roundedRate}p";
        }

        if (roundedRate == 100)
        {
            return "£1";
        }

        return $"£{string.Format("{0:#.00}", roundedRate / 100)}";
    }
}

<div class="grid-row">
    <div class="column-full">
        <section id="HourlyRateInfo">
            <h2 class="heading-medium">
                <span>Hourly pay gap</span>
            </h2>

            <div class="grid-row">
                <div class="column-full">
                    <span>
                        In this organisation, women earn @FemaleMedianHourlyRateMonitised()
                        for every £1 that men earn when comparing median hourly pay.
                    </span>
                    <span>Their median hourly pay is @(string.Format("{0:0.#}", Math.Abs(Model.DiffMedianHourlyPercent)))%</span>
                    <span>
                        @(femaleHasLowerMedianHourlyPercent ? "lower" : "higher")
                        than men&rsquo;s.
                    </span>
                </div>
            </div>

            <div class="grid-row" aria-hidden="true">
                <div class="column-full">
                    <div class="govuk-legend">
                        <span class="font-xsmall">
                            <span class="govuk-legend__caption govuk-legend__caption--women" data-legend-text="Women"></span>
                            <span class="govuk-legend__caption govuk-legend__caption--men" data-legend-text="Men"></span>
                        </span>
                    </div>

                    @{
                        // IntelliSense says this variable isn't used, but it actually is, on the line below
                        var medianHourlyRateChartModel = new VerticalBarChartModel
                        {
                            Id = "MedianHourlyDiffChart",
                            FemaleIsLower = femaleHasLowerMedianHourlyPercent,
                            Male = femaleHasLowerMedianHourlyPercent ? 100 : 100 + Model.DiffMedianHourlyPercent,
                            Female = femaleHasLowerMedianHourlyPercent ? 100 - Model.DiffMedianHourlyPercent : 100,
                            MaleMonetisation = "£1",
                            FemaleMonetisation = FemaleMedianHourlyRateMonitised()
                        };
                    }
                    <partial name="EmployerDetails/VerticalBarChart" model="medianHourlyRateChartModel"/>
                </div>
            </div>

            <div class="grid-row">
                <div class="column-full">
                    <span>When comparing mean (average) hourly pay, </span>
                    <span>women&rsquo;s mean hourly pay is @(string.Format("{0:0.#}", Math.Abs(Model.DiffMeanHourlyPayPercent)))%</span>
                    <span>
                        @(femaleHasLowerMeanHourlyPercent ? "lower" : "higher")
                        than men&rsquo;s.
                    </span>
                </div>
            </div>

            <div class="grid-row">
                <div class="column-full">
                    <br/>
                    @await Html.PartialModelAsync(new Details
                    {
                        Id = "AboutHourlyRate",
                        LinkText = "About median and mean",
                        SummaryPartial = "AboutHourlyRate"
                    })
                </div>
            </div>
        </section>

        <hr/>
    </div>
</div>
