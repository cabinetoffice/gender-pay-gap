@model ReportStatusBadgeViewModel
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents

@{
    Func<object, object> html = null;
    string htmlClass = "";


    switch(Model.ReportStatus)
    {
        case ReportStatusBadgeType.Due:
            html = @<text>REPORT DUE <br> @Model.DateText.ToUpper()</text>;
            htmlClass = "govuk-tag--blue";
            break;
        case ReportStatusBadgeType.OverDue:
            html = @<text>REPORT OVERDUE <br> @Model.DateText.ToUpper()</text>;
            htmlClass = "govuk-tag--red";
            break;
        case ReportStatusBadgeType.SubmittedLate:
            html = @<text>SUBMITTED LATE ON <br> @Model.DateText.ToUpper()</text>;
            htmlClass = "govuk-tag--green";
            break;
        case ReportStatusBadgeType.Reported:
            html = 
            @<text>REPORTED</text>;
            htmlClass = "govuk-tag--green";
            break;
        case ReportStatusBadgeType.NotRequired:
            html = @<text>REPORT NOT REQUIRED</text>;
            htmlClass = "govuk-tag--grey";
            break;
        case ReportStatusBadgeType.NotRequiredDueToCovid:
            html = @<text>REPORT NOT REQUIRED</text>;
            htmlClass = "govuk-tag--grey";
            break;
        case ReportStatusBadgeType.VoluntarilyReported:
            html = @<text>REPORTED VOLUNTARILY</text>
    ;
            htmlClass = "govuk-tag--green";
            break;

    }

    if(Model.Desktop)
    {
        htmlClass = htmlClass + " " + "govuk-employer-table-right";
    }
    else
    {
        htmlClass = htmlClass + " " + "govuk-!-margin-bottom-4 govuk-!-margin-top-4";
    }

}

@await Html.GovUkTag(new TagViewModel
{
    Html = html,
    Classes = htmlClass
})
