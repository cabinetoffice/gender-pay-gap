@using GenderPayGap.Database
@using GenderPayGap.WebUI.Models.Shared
@using GenderPayGap.Core
@using GenderPayGap.Core.Helpers
@model EmployerDetailsViewModel
@{
    Organisation organisation = Model.Organisation;
    ViewBag.Title = $"Gender pay gap for {organisation.OrganisationName} - GOV.UK";
    ViewBag.pageDescription = $"View gender pay gap details for {organisation.OrganisationName} and compare with other organisations";
    ViewBag.ogTitle = ViewBag.Title;
    ViewBag.ogType = "business.gender_pay_gap";
    ViewBag.pageClass = "employer-report-page";

    string employerIdentifier = organisation.GetEncryptedId();

    string backUrl = !string.IsNullOrWhiteSpace(Model.EmployerBackUrl) ? Model.EmployerBackUrl : !string.IsNullOrWhiteSpace(Model.LastSearchUrl) ? Model.LastSearchUrl : "/";
    if (string.IsNullOrWhiteSpace(ViewBag.ReturnUrl))
    {
        ViewBag.ReturnUrl = Context.GetUri().PathAndQuery;
    }
    var viewModel = new AddRemoveButtonViewModel {OrganisationIdEncrypted = employerIdentifier, OrganisationName = organisation.OrganisationName};
}

<partial name="~/Views/Compare/ComparisonBasket.cshtml" model="ViewBag.BasketViewModel"/>
<div class="grid-row">
    <div class="column-full">
        <div class="grid-row">
            <div class="column-full">
                <h1 class="heading-large">
                    <span id="OrganisationName">
                        Gender pay gap reports for <br/> @organisation.OrganisationName
                    </span>
                </h1>
                @if (organisation.OrganisationNames.Count > 1)
                {
                    <div class="panel">
                        <div>Previously known as</div>
                        <strong>@organisation.OrganisationNames.ElementAt(organisation.OrganisationNames.Count - 2).Name</strong>
                    </div>
                }
            </div>
        </div>

        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <dl class="metadata employer-report-metadata">
                    <div>
                        <dt class="metadata-text-label">Registered address:</dt>
                        <dd class="metadata-text-value">@(organisation.GetLatestAddress()?.GetAddressString())</dd>
                    </div>
                    <div>
                        <dt class="metadata-text-label">Nature of business (SIC):</dt>
                        <dd class="metadata-text-value">@organisation.GetSicSectorsString()</dd>
                    </div>
                </dl>
            </div>
        </div>
        <div class="govuk-grid-row add-remove-employer-section">
            <partial name="~/Views/Compare/AddRemoveEmployer.cshtml" model="viewModel"/>
        </div>

        <div class="grid-row">
            <div class="column-two-thirds">
                <div class="grid-row">
                    <div class="column-full">
                        <hr style="margin-top: 0"/>
                        <div class="body" style="margin-top: 3em">
                            @if (organisation.GetSubmittedReports().Any() && organisation.Status == OrganisationStatuses.Retired)
                            {
                                <div class="govuk-warning-text">
                                    <span class="govuk-warning-text__icon" aria-hidden="true" style="top: calc(50% - 15px)">!</span>
                                    <strong class="govuk-warning-text__text">
                                        <span class="govuk-warning-text__assistive">Notice</span>
                                        This page is no longer updated. The organisation may no longer be in operation or operating under a different name
                                    </strong>
                                </div>
                            }
                            <p>
                                Below are all reports submitted, or expected from this employer. <br/>
                                Employers with a headcount of less than 250 can voluntarily report their gender pay gap information.
                            </p>
                        </div>

                        @await Html.PartialModelAsync(new Details
                        {
                            Id = "WhoNeedsToReport",
                            LinkText = "Who is required to report, and the deadlines",
                            SummaryPartial = "EmployerDetails/WhoNeedsToReport"
                        })

                    </div>
                </div>
                @foreach (Return report in organisation.GetRecentReports(Global.ShowReportYearCount))
                {
                    <div class="grid-row">
                        <div class="column-full">
                            <table>
                                <tbody>
                                    <tr>
                                        <td style="border-bottom: none; width: 300px;">
                                            <h3 class="heading-small govuk-!-margin-top-0">@report.GetReportingPeriod() Reporting year</h3>
                                        </td>
                                    </tr>
                                    @if (report.IsLateSubmission || report.IsVoluntarySubmission())
                                    {
                                        <tr>
                                            <td style="border-bottom: none;">
                                                <partial name="EmployerDetails/Parts/_ReportStatusBadge" model="new ReportStatusBadgeViewModel {IsLateSubmission = report.IsLateSubmission, IsVoluntarySubmission = report.IsVoluntarySubmission()}"/>
                                            </td>
                                        </tr>
                                    }
                                    @if (report.ReturnId == 0)
                                    {
                                        <tr>
                                            <td colspan="2" style="border-bottom: none;">
                                                @if (Global.ReportingStartYearsToExcludeFromLateFlagEnforcement
                                                    .Contains(report.AccountingDate.Year)
                                                     && report.AccountingDate.Year == 2019)
                                                {
                                                    <span>
                                                        The deadline for 2019/20
                                                        @(report.AccountingDate.AddYears(1) > VirtualDateTime.Now ? "is" : "was")
                                                        @(report.AccountingDate.AddYears(1).AddDays(-1).ToString("d MMMM yyyy")). Due to
                                                        Coronavirus (COVID-19), enforcement of reporting deadlines does not
                                                        apply to employers in the 2019/20 reporting year.
                                                    </span>
                                                }
                                                else
                                                {
                                                    if (organisation.GetIsInscope(report.AccountingDate.Year))
                                                    {
                                                        DateTime deadline = ReportingYearsHelper.GetDeadlineForAccountingDate(report.AccountingDate);
                                                        <span>
                                                            This employer
                                                            @(deadline.AddDays(1) > VirtualDateTime.Now ? "is" : "was")
                                                            required to report by @(deadline.ToString("d MMMM yyyy"))
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span>Not required to report</span>
                                                    }
                                                }

                                            </td>
                                        </tr>
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="2" style="border-bottom: none;">
                                                <a style="font-size: 19px !important;" href="@(Url.Action("Report", new {employerIdentifier, year = report.AccountingDate.Year}))">
                                                    View report <span class="visually-hidden">for @report.GetReportingPeriod()</span>
                                                </a>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td colspan="2" style="border-bottom: none;">
                                                The data in this report used a snapshot date of @(report.AccountingDate.ToString("dd MMMM yyyy"))
                                            </td>
                                        </tr>
                                    }
                                    @if (report.ReturnId > 0 && organisation.SectorType == SectorTypes.Private)
                                    {
                                        <tr>
                                            <td colspan="2" style="border-bottom: none;">

                                                <div class="heading-xsmall" style="font-weight: bold">Person responsible</div>
                                                <div>
                                                    <span>@report.FirstName @report.LastName</span>
                                                </div>
                                                <div>
                                                    <span>(@report.JobTitle)</span>
                                                </div>

                                            </td>
                                        </tr>
                                    }
                                    <hr/>
                                </tbody>
                            </table>
                        </div>
                    </div>
                }

            </div>

            @await Html.PartialAsync("/Views/Submit/NewRelatedContent.cshtml")
        </div>
    </div>
</div>

@section Scripts {
    <script>

        (function() {
            "use strict";

            new GOVUK.Ajaxify({
                onError: function(errorCode, error, errorThrown) {
                    window.location.href = '/error';
                }
            });
        }());

    </script>
}
