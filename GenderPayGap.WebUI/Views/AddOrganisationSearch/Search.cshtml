@using GenderPayGap.WebUI.Models.AddOrganisation
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.AddOrganisation.AddOrganisationSearchViewModel
@{
    ViewBag.Title = "Find employer - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @await Html.GovUkBackLink(new BackLinkViewModel
    {
        Text = "Back",
        Href = Url.Action("ChooseSector", "AddOrganisationChooseSector",
            new AddOrganisationChooseSectorViewModel
            {
                Sector = Model.Sector
            }),

        // Note: some of the "Back" links in this journey can't use the default browser behaviour
        //  so we should control all of them explicitly
        OverrideWithJavascript = false
    })
}

@{
    object cantFindYourOrganisationSection =
        new Func<object, object>
        (@<text>
            <details class="govuk-details" data-module="govuk-details">
                <summary class="govuk-details__summary">
                    <span class="govuk-details__summary-text">
                        Can't find your employer?
                    </span>
                </summary>
                <div class="govuk-details__text">
                    <p class="govuk-body">
                        If your employer is not listed, you can tell us the details of the employer you want to add.
                    </p>
                    <p class="govuk-body">
                        <a href="@Url.Action("ManualName", "AddOrganisationManualName",
                                     new AddOrganisationManualViewModel
                                     {
                                         Sector = Model.Sector,
                                         Query = Model.Query
                                     })"
                           class="govuk-link">
                            Provide employer details
                        </a>
                    </p>
                </div>
            </details>
         </text>)(null);
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <form method="get"
              action="@Url.Action("Search", "AddOrganisationSearch", new { Sector = Model.Sector.ToString().ToLower() })">

            <div class="govuk-form-group">
                <h1 class="govuk-label-wrapper">
                    <label class="govuk-label govuk-label--xl" for="query">
                        Find your employer
                    </label>
                </h1>

                @if (Model.Sector == AddOrganisationSector.Private)
                {
                    <div id="query-hint" class="govuk-hint">
                        You can search for private or voluntary sector employers by:
                        <ul class="govuk-list govuk-list--bullet govuk-!-margin-top-1" style="color: inherit;">
                            <li>the registered name</li>
                            <li>the Companies House number</li>
                        </ul>
                    </div>
                }
                else
                {
                    <div id="query-hint" class="govuk-hint">
                        Enter the public authority's registered name
                    </div>
                }

                <div class="gpg-search-box">
                    <input type="text"
                           name="query"
                           id="query"
                           class="govuk-input"
                           value="@(Model.Query)"
                           aria-describedby="query-hint">
                    <input type="submit" value="Search" class="gpg-search-button" />
                </div>
            </div>

        </form>

        @if (Model.SearchResults == null)
        {
            // If Model.SearchResults == null, then we are on the search "homepage"

            @if (Model.Sector == AddOrganisationSector.Private)
            {
                <div class="govuk-inset-text govuk-!-margin-top-0">
                    The registered name of an employer is sometimes different to what
                    they are commonly known as. For example, if you were searching for
                    Currys PC World, you would need to search by their registered name
                    of DSG Retail Limited.
                </div>
            }
            else
            {
                <div class="govuk-inset-text govuk-!-margin-top-0">
                    The registered name of an employer is sometimes different to what they are commonly known as.
                </div>
            }
        }
        else
        {
            // If Model.SearchResults != null, we are on the "search results" page
            // Note, we might have 0 results, but that will be an empty list, not null

            <h2 class="govuk-visually-hidden">
                Search results
            </h2>

            if (Model.SearchResults.SearchResults.Count == 0)
            {
                <p class="govuk-body">
                    Your search
                    <span class="govuk-!-font-weight-bold">
                        @(Model.Query)
                    </span>
                    did not match any employers
                </p>

                <div class="govuk-inset-text">
                    Suggestions:

                    <ul class="govuk-list govuk-list--bullet govuk-!-margin-top-1" style="color: inherit;">
                        <li>Check the spelling of the employer name</li>
                        @if (Model.Sector == AddOrganisationSector.Private)
                        {
                            <li>
                                Check you are searching for the
                                <span class="govuk-!-font-weight-bold">registered name</span>
                                of the employer.
                                <br />
                                The registered name of an employer is sometimes different to what
                                they are commonly known as. For example, if you were searching for
                                Currys PC World, you would need to search by their registered name
                                of DSG Retail Limited.
                            </li>
                        }
                    </ul>
                </div>

                @(cantFindYourOrganisationSection)
            }
            else
            {
                <p class="govuk-body">
                    Your search
                    <span class="govuk-!-font-weight-bold">
                        @(Model.Query)
                    </span>
                    matched
                    <span class="govuk-!-font-weight-bold">
                        @(Model.SearchResults.TooManyResults ? "more than" : "")
                        @(Model.SearchResults.SearchResults.Count)
                    </span>
                    employer@(Model.SearchResults.SearchResults.Count == 1 ? "" : "s")
                </p>

                @if (Model.SearchResults.TooManyResults)
                {
                    <div class="govuk-inset-text govuk-!-margin-top-0">
                        Suggestions:

                        <ul class="govuk-list govuk-list--bullet govuk-!-margin-top-1" style="color: inherit;">
                            <li>Try refining your search</li>
                            @if (Model.Sector == AddOrganisationSector.Private)
                            {
                                <li>Try searching by your employer's Companies House number</li>
                            }
                        </ul>
                    </div>
                }

                <p class="govuk-body">
                    Choose your employer from the list below
                </p>

                @(cantFindYourOrganisationSection)

                <ul class="govuk-list add-organisation-search-list">
                    @foreach (AddOrganisationSearchResult organisation in Model.SearchResults.SearchResults)
                    {
                        string resultId = organisation.EncryptedOrganisationId != null
                            ? $"search-result-id-{organisation.EncryptedOrganisationId}"
                            : $"search-result-coho-{organisation.CompanyNumber}";
                        <li id="@(resultId)">
                            <div>
                                <h3 class="govuk-heading-s govuk-!-margin-bottom-0">
                                    @(organisation.OrganisationName)
                                </h3>

                                <span class="govuk-visually-hidden">Address:</span>
                                @(organisation.OrganisationAddress)

                                <span class="govuk-!-font-size-16">
                                    @foreach (AddOrganisationSearchResultOrganisationIdentifier identifier in organisation.Identifiers)
                                    {
                                        <br />
                                        // ":" is a special character in C# Razor
                                        // To show an actual ":", we need to write "@::"
                                        @(identifier.IdentifierType)@:: @(identifier.Identifier)
                                    }
                                </span>
                            </div>
                            <div class="add-organisation-add-button">
                                @{
                                    object foundParams = organisation.EncryptedOrganisationId != null
                                        ? (object)new { id = organisation.EncryptedOrganisationId, query = Model.Query, sector = Model.Sector }
                                        : (object)new { companyNumber = organisation.CompanyNumber, query = Model.Query, sector = Model.Sector };
                                }
                                <a href="@Url.Action("FoundGet", "AddOrganisationFound", foundParams)"
                                   class="govuk-link govuk-!-padding-2">
                                    Add
                                    <span class="govuk-visually-hidden">
                                        @(organisation.OrganisationName)
                                    </span>
                                </a>
                            </div>
                        </li>
                    }
                </ul>

                @if (Model.SearchResults.SearchResults.Count > 10)
                {
                    // In the case where there's lots of search results...
                    //   If you scroll down to the bottom of the page and haven't found your organisation
                    //   there's nothing to help you succeed
                    //   So, in this case, it could be helpful to show the "Can't find your organisation" button again
                    //
                    // In the case where there's only a few search results...
                    //   The "Can't find your organisation" button is still visible / not far off the page,
                    //   even when you've scrolled right to the bottom
                    @(cantFindYourOrganisationSection)
                }
            }
        }

        <p class="govuk-body">
            <a href="@Url.Action("ManageOrganisationsGet", "ManageOrganisations")"
               class="govuk-link">
                Cancel and return to Manage Employers
            </a>
        </p>

    </div>
</div>
