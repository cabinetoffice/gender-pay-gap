@using GenderPayGap.WebUI.Views.Components.StatusMessages
@model GenderPayGap.WebUI.Models.Account.ManageAccountViewModel

@{
    ViewBag.Title = "Manage account - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        await Html.RenderPartialAsync("../Components/Navigation/AccountTabs");
    }
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        @{
            await Html.RenderPartialAsync("../Components/StatusMessages/StatusMessages",
                new StatusMessagesViewModel { Classes = "govuk-!-margin-bottom-6" });
        }

        <h1 class="govuk-heading-xl govuk-!-margin-bottom-4">
            Manage your account
        </h1>

        @if (!Model.IsUserBeingImpersonated)
        {
            <p class="govuk-body">
                <a href="@(Url.Action("CloseAccountGet", "CloseAccount"))"
                   class="govuk-link">
                    Close your account
                </a>
            </p>
        }

        <h2 class="govuk-heading-m govuk-!-margin-top-7">
            Login details
        </h2>

        <dl class="govuk-summary-list">
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Email address
                </dt>
                <dd class="govuk-summary-list__value">
                    @{
                        var user = Model.User;
                        if (user.NewEmailAddressRequestDate != null && VirtualDateTime.Now.Subtract(user.NewEmailAddressRequestDate.Value).TotalSeconds < 120)
                        {
                            <text>@Model.User.NewEmailAddress (pending)</text>
                        }
                        else
                        {
                            <text>@Model.User.EmailAddress</text>
                        }
                    }
                </dd>
                <dd class="govuk-summary-list__actions">
                    @if (!Model.IsUserBeingImpersonated)
                    {
                        <a href="@(Url.Action("ChangeEmailGet", "ChangeEmail"))"
                           class="govuk-link">
                            Change
                            <span class="govuk-visually-hidden"> email</span>
                        </a>
                    }
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Password
                </dt>
                <dd class="govuk-summary-list__value">
                    **********
                </dd>
                <dd class="govuk-summary-list__actions">
                    @if (!Model.IsUserBeingImpersonated)
                    {
                        <a href="@(Url.Action("ChangePasswordGet", "ChangePassword"))"
                           class="govuk-link">
                            Change
                            <span class="govuk-visually-hidden"> password</span>
                        </a>
                    }
                </dd>
            </div>
        </dl>
        
        <div class="govuk-!-margin-top-9">
            <h2 class="govuk-heading-m" style="float: left;">
                Personal details
            </h2>
        
            @if (!Model.IsUserBeingImpersonated)
            {
                <p class="govuk-body" style="float: right;">
                    <a href="@(Url.Action("ChangePersonalDetailsGet", "ChangePersonalDetails"))"
                       class="govuk-link">
                        Change
                        <span class="govuk-visually-hidden"> personal details</span>
                    </a>
                </p>
            }
        </div>
        <div style="clear: both;">
            @* This <div> is deliberately empty
                The elements above use "float: left;" and "float:right;"
                We use this <div> (with "clear: both;") to ensure that the elements below
                don't float up inline with the elements above *@
        </div>

        <dl class="govuk-summary-list">
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    First name
                </dt>
                <dd class="govuk-summary-list__value">
                    @(Model.User.Firstname)
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Last name
                </dt>
                <dd class="govuk-summary-list__value">
                    @(Model.User.Lastname)
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Job title
                </dt>
                <dd class="govuk-summary-list__value">
                    @(Model.User.JobTitle)
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Phone number
                </dt>
                <dd class="govuk-summary-list__value">
                    @(Model.User.ContactPhoneNumber)
                </dd>
            </div>
        </dl>
        
        <div class="govuk-!-margin-top-9">
            <h2 class="govuk-heading-m" style="float: left;">
                Contact preferences
            </h2>

            @if (!Model.IsUserBeingImpersonated)
            {
                <p class="govuk-body" style="float: right;">
                    <a href="@(Url.Action("ChangeContactPreferencesGet", "ChangeContactPreferences"))"
                       class="govuk-link" >
                        Change
                        <span class="govuk-visually-hidden"> contact preferences</span>
                    </a>
                </p>
            }
        </div>
        <div style="clear: both;">
            @* This <div> is deliberately empty
            The elements above use "float: left;" and "float:right;"
            We use this <div> (with "clear: both;") to ensure that the elements below
            don't float up inline with the elements above *@
        </div>

        <table class="govuk-table">
            <tbody class="govuk-table__body">
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__cell govuk-!-font-weight-regular">
                        I would like to receive information about webinars, events and new guidance
                    </th>
                    <td class="govuk-table__cell">
                        @if (Model.User.SendUpdates)
                        {
                            <span class="gpg-yesno gpg-yesno--yes">Yes</span>
                        }
                        else
                        {
                            <span class="gpg-yesno gpg-yesno--no">No</span>
                        }
                    </td>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__cell govuk-!-font-weight-regular">
                        I'm happy to be contacted for feedback on this service and take part in gender pay gap surveys
                    </th>
                    <td class="govuk-table__cell">
                        @if (Model.User.AllowContact)
                        {
                            <span class="gpg-yesno gpg-yesno--yes">Yes</span>
                        }
                        else
                        {
                            <span class="gpg-yesno gpg-yesno--no">No</span>
                        }
                    </td>
                </tr>
            </tbody>
        </table>

    </div>
</div>