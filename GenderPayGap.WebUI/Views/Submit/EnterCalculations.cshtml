@using GenderPayGap.WebUI.Classes.Formatters
@model GenderPayGap.WebUI.BusinessLogic.Models.Submit.ReturnViewModel
<div class="grid-row">
    <div class="column-two-thirds">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ReturnId)
            @Html.HiddenFor(model => model.OrganisationId)
            @Html.HiddenFor(model => model.EncryptedOrganisationId)
            @Html.HiddenFor(model => model.ShouldProvideLateReason)

            @*@Html.HiddenFor(model => model.ReportInfo.Draft)*@
            @Html.HiddenFor(model => model.ReportInfo.ReportModifiedDate)
            @Html.HiddenFor(model => model.ReportInfo.ReportingStartDate)

            @Html.HiddenFor(model => model.FirstName)
            @Html.HiddenFor(model => model.JobTitle)
            @Html.HiddenFor(model => model.LastName)
            @Html.HiddenFor(model => model.AccountingDate)
            @Html.HiddenFor(model => model.SectorType)
            @Html.HiddenFor(model => model.OrganisationSize)
            @Html.HiddenFor(model => model.CompanyLinkToGPGInfo)
            @Html.HiddenFor(model => model.EHRCResponse)
            @Html.HiddenFor(model => model.LateReason)

            var controller = ViewData["Controller"] as BaseController;
            var reportDateFormatter = new GDSDateFormatter(Model.ReportInfo.ReportingStartDate);

            if (Model.ReturnUrl.EqualsI("CheckData"))
            {
                <a class="link-back" href="@Url.Action("CheckData")">Back <span class="visuallyhidden"> to the previous step</span></a>
            }

            @await Html.CustomValidationSummaryAsync()

            <h1 class="heading-large">
                @await Html.PartialAsync("ReportingOrgPart", controller.ReportingOrganisation.OrganisationName)
                Enter your gender pay gap data for snapshot date @(reportDateFormatter.FullStartDate)
            </h1>

            <p>
                <strong>Please enter your data to 1 decimal point.</strong>
            </p>
            <p>For differences in rates of pay and bonuses, a positive <span aria-hidden="true" aria-label="percentage">%</span> indicates that men in your organisation receive a higher rate than women in your organisation.</p>
            <p>A negative <span aria-hidden="true" aria-label="percentage">%</span> indicates that men in your organisation receive a lower rate than women in your organisation.</p>
            <div class="form-horizontal">

                <fieldset id="HourlyPay">
                    <legend>
                        <h2 class="heading-medium">Difference in hourly rate of pay &#8211; mean</h2>
                    </legend>
                    <div class="form-group @Html.SetErrorClass(model => model.DiffMeanHourlyPayPercent, "error")">
                        @Html.LabelFor(model => model.DiffMeanHourlyPayPercent, new {@class = "form-label "})
                        @Html.ValidationMessageFor(model => model.DiffMeanHourlyPayPercent, "", new {@class = "error-message"})
                        @Html.CustomEditorFor(model => model.DiffMeanHourlyPayPercent, new {@class = "form-control form-control-1-4"}) <span aria-hidden="true" aria-label="percent">%</span>
                    </div>
                </fieldset>

                <fieldset>
                    <legend>
                        <h2 class="heading-medium">Difference in hourly rate of pay &#8211; median</h2>
                    </legend>
                    <div class="form-group @Html.SetErrorClass(model => model.DiffMedianHourlyPercent, "error")">
                        @Html.LabelFor(model => model.DiffMedianHourlyPercent, new {@class = "form-label"})
                        @Html.ValidationMessageFor(model => model.DiffMedianHourlyPercent, "", new {@class = "error-message"})
                        @Html.CustomEditorFor(model => model.DiffMedianHourlyPercent, new {@class = "form-control form-control-1-4"}) <span aria-hidden="true" aria-label="percent">%</span>
                    </div>
                </fieldset>

                <fieldset id="BonusPay">
                    <legend>
                        <h2 class="heading-medium">Percentage of employees who received bonus pay</h2>
                    </legend>
                    <div class="form-group @Html.SetErrorClass(model => model.MaleMedianBonusPayPercent, "error")">
                        @Html.LabelFor(model => model.MaleMedianBonusPayPercent, new {@class = "form-label"})
                        @Html.ValidationMessageFor(model => model.MaleMedianBonusPayPercent, "", new {@class = "error-message"})
                        @Html.CustomEditorFor(model => model.MaleMedianBonusPayPercent, new {@class = "form-control form-control-1-4"}) <span aria-hidden="true" aria-label="percent">%</span>
                    </div>
                    <div class="form-group @Html.SetErrorClass(model => model.FemaleMedianBonusPayPercent, "error")">
                        @Html.LabelFor(model => model.FemaleMedianBonusPayPercent, new {@class = "form-label"})
                        @Html.ValidationMessageFor(model => model.FemaleMedianBonusPayPercent, "", new {@class = "error-message"})
                        @Html.CustomEditorFor(model => model.FemaleMedianBonusPayPercent, new {@class = "form-control form-control-1-4"}) <span aria-hidden="true" aria-label="percent">%</span>
                    </div>
                </fieldset>

                <fieldset>
                    <legend>
                        <h2 class="heading-medium">Difference in bonus pay &#8211; mean</h2>
                    </legend>
                    <div class="form-group @Html.SetErrorClass(model => model.DiffMeanBonusPercent, "error")">
                        @Html.LabelFor(model => model.DiffMeanBonusPercent, new {@class = "form-label"})
                        @Html.ValidationMessageFor(model => model.DiffMeanBonusPercent, "", new {@class = "error-message"})
                        @Html.CustomEditorFor(model => model.DiffMeanBonusPercent, new {@class = "form-control form-control-1-4"}) <span aria-hidden="true" aria-label="percent">%</span>
                    </div>
                </fieldset>

                <fieldset>
                    <legend>
                        <h2 class="heading-medium">Difference in bonus pay &#8211; median</h2>
                    </legend>
                    <div class="form-group @Html.SetErrorClass(model => model.DiffMedianBonusPercent, "error")">
                        @Html.LabelFor(model => model.DiffMedianBonusPercent, new {@class = "form-label"})
                        @Html.ValidationMessageFor(model => model.DiffMedianBonusPercent, "", new {@class = "error-message"})
                        @Html.CustomEditorFor(model => model.DiffMedianBonusPercent, new {@class = "form-control form-control-1-4"}) <span aria-hidden="true" aria-label="percent">%</span>
                    </div>
                </fieldset>

                <h2 id="PayQuartiles" class="heading-medium">Employees by pay quartile</h2>

                <fieldset>
                    <legend>
                        <h3 class="heading-small">Upper quartile</h3>
                    </legend>
                    <div class="form-group @Html.SetErrorClass(model => model.MaleUpperQuartilePayBand, "error")">
                        @Html.LabelFor(model => model.MaleUpperQuartilePayBand, new {@class = "form-label"})
                        @Html.ValidationMessageFor(model => model.MaleUpperQuartilePayBand, "", new {@class = "error-message"})
                        @Html.CustomEditorFor(model => model.MaleUpperQuartilePayBand, new {@class = "form-control form-control-1-4"}) <span aria-hidden="true" aria-label="percent">%</span>
                    </div>
                    <div class="form-group @Html.SetErrorClass(model => model.FemaleUpperQuartilePayBand, "error") @Html.SetErrorClass(model => model.FemaleUpperQuartilePayBand, "error")">
                        @Html.LabelFor(model => model.FemaleUpperQuartilePayBand, new {@class = "form-label"})
                        @Html.ValidationMessageFor(model => model.FemaleUpperQuartilePayBand, "", new {@class = "error-message"})
                        @Html.CustomEditorFor(model => model.FemaleUpperQuartilePayBand, new {@class = "form-control form-control-1-4"}) <span aria-hidden="true" aria-label="percent">%</span>
                    </div>
                </fieldset>

                <fieldset>
                    <legend>
                        <h3 class="heading-small">Upper middle quartile</h3>
                    </legend>
                    <div class="form-group @Html.SetErrorClass(model => model.MaleUpperPayBand, "error")">
                        @Html.LabelFor(model => model.MaleUpperPayBand, new {@class = "form-label"})
                        @Html.ValidationMessageFor(model => model.MaleUpperPayBand, "", new {@class = "error-message"})
                        @Html.CustomEditorFor(model => model.MaleUpperPayBand, new {@class = "form-control form-control-1-4"}) <span aria-hidden="true" aria-label="percent">%</span>
                    </div>
                    <div class="form-group @Html.SetErrorClass(model => model.FemaleUpperPayBand, "error")">
                        @Html.LabelFor(model => model.FemaleUpperPayBand, new {@class = "form-label"})
                        @Html.ValidationMessageFor(model => model.FemaleUpperPayBand, "", new {@class = "error-message"})
                        @Html.CustomEditorFor(model => model.FemaleUpperPayBand, new {@class = "form-control form-control-1-4"}) <span aria-hidden="true" aria-label="percent">%</span>
                    </div>
                </fieldset>

                <fieldset>
                    <legend>
                        <h3 class="heading-small">Lower middle quartile</h3>
                    </legend>
                    <div class="form-group @Html.SetErrorClass(model => model.MaleMiddlePayBand, "error")">
                        @Html.LabelFor(model => model.MaleMiddlePayBand, new {@class = "form-label"})
                        @Html.ValidationMessageFor(model => model.MaleMiddlePayBand, "", new {@class = "error-message"})
                        @Html.CustomEditorFor(model => model.MaleMiddlePayBand, new {@class = "form-control form-control-1-4"}) <span aria-hidden="true" aria-label="percent">%</span>
                    </div>
                    <div class="form-group @Html.SetErrorClass(model => model.FemaleMiddlePayBand, "error")">
                        @Html.LabelFor(model => model.FemaleMiddlePayBand, new {@class = "form-label"})
                        @Html.ValidationMessageFor(model => model.FemaleMiddlePayBand, "", new {@class = "error-message"})
                        @Html.CustomEditorFor(model => model.FemaleMiddlePayBand, new {@class = "form-control form-control-1-4"}) <span aria-hidden="true" aria-label="percent">%</span>
                    </div>
                </fieldset>

                <fieldset>
                    <legend>
                        <h3 class="heading-small">Lower quartile</h3>
                    </legend>
                    <div class="form-group @Html.SetErrorClass(model => model.MaleLowerPayBand, "error")">
                        @Html.LabelFor(model => model.MaleLowerPayBand, new {@class = "form-label"})
                        @Html.ValidationMessageFor(model => model.MaleLowerPayBand, "", new {@class = "error-message"})
                        @Html.CustomEditorFor(model => model.MaleLowerPayBand, new {@class = "form-control form-control-1-4"}) <span aria-hidden="true" aria-label="percent">%</span>
                    </div>
                    <div class="form-group @Html.SetErrorClass(model => model.FemaleLowerPayBand, "error")">
                        @Html.LabelFor(model => model.FemaleLowerPayBand, new {@class = "form-label"})
                        @Html.ValidationMessageFor(model => model.FemaleLowerPayBand, "", new {@class = "error-message"})
                        @Html.CustomEditorFor(model => model.FemaleLowerPayBand, new {@class = "form-control form-control-1-4"}) <span aria-hidden="true" aria-label="percent">%</span>
                    </div>
                </fieldset>
            </div>

            <p>
                <input id="ContinueStep" class="button" type="submit" role="button" value="Continue"/>
                <br/>
                <input id="CancelStep" class="link-button" type="submit" role="button" formaction="cancel-enter-calculations" value="Cancel" style="margin-top: 15px"/>

            </p>
        }
    </div>
    <div class="column-third">
        <aside class="govuk-related-items" role="complementary">
            <h3 class="heading-small" id="subsection-title">Gender pay gap guidance</h3>
            <nav role="navigation" aria-labelledby="subsection-title">
                <ul class="font-xsmall">
                    <li>
                        <a rel="external noopener track" target="_blank" data-track-category="Related Link Clicked" href="https://www.gov.uk/guidance/gender-pay-gap-reporting-data-you-must-gather">Data you must gather<span class="visually-hidden">(opens in a new window)</span></a>
                    </li>
                    <li>
                        <a rel="external noopener track" target="_blank" data-track-category="Related Link Clicked" href="https://www.gov.uk/guidance/gender-pay-gap-reporting-make-your-calculations">How to make your calculations<span class="visually-hidden">(opens in a new window)</span></a>
                    </li>
                </ul>
            </nav>
        </aside>
    </div>
</div>