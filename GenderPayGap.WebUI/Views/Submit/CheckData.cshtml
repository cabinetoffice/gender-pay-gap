@using System.ComponentModel.DataAnnotations
@using GenderPayGap.Core
@using GenderPayGap.Core.Helpers
@using GenderPayGap.WebUI.Classes.Formatters
@using GenderPayGap.WebUI.Helpers
@using GenderPayGap.WebUI.Models.Shared.Patterns
@model GenderPayGap.WebUI.BusinessLogic.Models.Submit.ReturnViewModel
<div class="grid-row">
    <div style="margin-top: 15px;">
        <partial name="/Views/Components/EnforcementChangesMessage.cshtml"/>
    </div>
</div>
@{
    var controller = ViewData["Controller"] as BaseController;
    var reportingOrganisation = controller.ReportingOrganisation;
    var breadcrumbModel = new ManageOrganisationBreadcrumbs
    {
        OrganisationName = reportingOrganisation.OrganisationName,
        EncryptedOrganisationId = Encryption.EncryptQuerystring(reportingOrganisation.OrganisationId.ToString()),
        PageText = ReportingYearsHelper.FormatYearAsReportingPeriod(Model.ReportInfo.ReportingStartDate.Year) + " Reporting year"
    };
}

<partial name="Patterns/ManageOrganisationBreadcrumbs" model="breadcrumbModel" />

<div class="grid-row">
<div class="column-two-thirds">
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.ReturnId)
    @Html.HiddenFor(model => model.OrganisationId)
    @Html.HiddenFor(model => model.EncryptedOrganisationId)

    @Html.HiddenFor(model => model.ReportInfo.Draft)
    @Html.HiddenFor(model => model.ReportInfo.ReportModifiedDate)
    @Html.HiddenFor(model => model.ReportInfo.ReportingStartDate)

    @Html.HiddenFor(model => model.FirstName)
    @Html.HiddenFor(model => model.JobTitle)
    @Html.HiddenFor(model => model.LastName)

    @Html.HiddenFor(model => model.DiffMeanBonusPercent)
    @Html.HiddenFor(model => model.DiffMeanHourlyPayPercent)
    @Html.HiddenFor(model => model.DiffMedianBonusPercent)
    @Html.HiddenFor(model => model.DiffMedianHourlyPercent)
    @Html.HiddenFor(model => model.FemaleLowerPayBand)
    @Html.HiddenFor(model => model.FemaleMedianBonusPayPercent)
    @Html.HiddenFor(model => model.FemaleMiddlePayBand)
    @Html.HiddenFor(model => model.FemaleUpperPayBand)
    @Html.HiddenFor(model => model.FemaleUpperQuartilePayBand)
    @Html.HiddenFor(model => model.MaleLowerPayBand)
    @Html.HiddenFor(model => model.MaleMedianBonusPayPercent)
    @Html.HiddenFor(model => model.MaleMiddlePayBand)
    @Html.HiddenFor(model => model.MaleUpperPayBand)
    @Html.HiddenFor(model => model.MaleUpperQuartilePayBand)
    @Html.HiddenFor(model => model.AccountingDate)
    @Html.HiddenFor(model => model.SectorType)

    @Html.HiddenFor(model => model.OrganisationSize)
    @Html.HiddenFor(model => model.CompanyLinkToGPGInfo)
    @Html.HiddenFor(model => model.OptedOutOfReportingPayQuarters)

    <h1 class="heading-large">
        Review your gender pay gap data for snapshot date @(Model.ReportInfo.ReportingStartDate.ToString("dd MMMM yyyy"))
    </h1>
    @await Html.PartialAsync("ReportingOrgPart", reportingOrganisation.OrganisationName)

    @await Html.CustomValidationSummaryAsync()

    if (!Model.IsValidReturn())
    {
        <div class="govuk-warning-text">
            <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
            <strong class="govuk-warning-text__text">
                <span class="govuk-warning-text__assistive">Warning</span>
                More information is required to complete your submission
            </strong>
        </div>
    }

    <table class="table gpg-data">
        <thead>
            <tr>
                <th colspan="3">
                    <span>@ReportingYearsHelper.FormatYearAsReportingPeriod(Model.ReportInfo.ReportingStartDate.Year, "/") Reporting year</span>
                </th>
            </tr>
            <tr>
                <th colspan="2">
                    <span>Percentage of men and women in each hourly pay quarter</span>
                </th>
                <th>
                    <span class="edit">
                        <a id="ChangeCalculations" href="@Url.Action("EnterCalculations", "Submit", new {returnUrl = "CheckData"}, null, null, "PayQuartiles")">
                            Edit<span class="visually-hidden"> pay quarter</span>
                        </a>
                    </span>
                </th>
            </tr>
            <tr>
                <td></td>
                <td class="numeric govuk-!-font-size-16" scope="col">
                    <strong>Men</strong>
                </td>
                <td class="numeric govuk-!-font-size-16" scope="col">
                    <strong>Women</strong>
                </td>
            </tr>
        </thead>
        <tbody>

            <tr>
                <td>
                    Upper hourly pay quarter
                </td>
                <td class="numeric">
                    <span id="DisplayMaleUpperQuartilePayBand">
                        @if (Model.MaleUpperQuartilePayBand.HasValue)
                        {
                            @Html.ValueFor(model => model.MaleUpperQuartilePayBand)
                            @:%
                        }
                        else if (Model.OptedOutOfReportingPayQuarters)
                        {
                            <span>Not applicable</span>
                        }
                        else
                        {
                            <span class="gpg-data__status--notcompleted">Not completed</span>
                        }
                    </span>
                </td>
                <td class="numeric">
                    <span id="DisplayFemaleUpperQuartilePayBand">
                        @if (Model.FemaleUpperQuartilePayBand.HasValue)
                        {
                            @Html.ValueFor(model => model.FemaleUpperQuartilePayBand)
                            @:%
                        }
                        else if (Model.OptedOutOfReportingPayQuarters)
                        {
                            <span>Not applicable</span>
                        }
                        else
                        {
                            <span class="gpg-data__status--notcompleted">Not completed</span>
                        }
                    </span>
                </td>
            </tr>
            <tr>
                <td>
                    Upper middle hourly pay quarter
                </td>
                <td class="numeric">
                    <span id="DisplayMaleUpperPayBand">
                        @if (Model.MaleUpperPayBand.HasValue)
                        {
                            @Html.ValueFor(model => model.MaleUpperPayBand)
                            @:%
                        }
                        else if (Model.OptedOutOfReportingPayQuarters)
                        {
                            <span>Not applicable</span>
                        }
                        else
                        {
                            <span class="gpg-data__status--notcompleted">Not completed</span>
                        }
                    </span>
                </td>
                <td class="numeric">
                    <span id="DisplayFemaleUpperPayBand">
                        @if (Model.FemaleUpperPayBand.HasValue)
                        {
                            @Html.ValueFor(model => model.FemaleUpperPayBand)
                            @:%
                        }
                        else if (Model.OptedOutOfReportingPayQuarters)
                        {
                            <span>Not applicable</span>
                        }
                        else
                        {
                            <span class="gpg-data__status--notcompleted">Not completed</span>
                        }
                    </span>
                </td>
            </tr>
            <tr>
                <td>
                    Lower middle hourly pay quarter
                </td>
                <td class="numeric">
                    <span id="DisplayMaleMiddlePayBand">
                        @if (Model.MaleMiddlePayBand.HasValue)
                        {
                            @Html.ValueFor(model => model.MaleMiddlePayBand)
                            @:%
                        }
                        else if (Model.OptedOutOfReportingPayQuarters)
                        {
                            <span>Not applicable</span>
                        }
                        else
                        {
                            <span class="gpg-data__status--notcompleted">Not completed</span>
                        }
                    </span>
                </td>
                <td class="numeric">
                    <span id="DisplayFemaleMiddlePayBand">
                        @if (Model.FemaleMiddlePayBand.HasValue)
                        {
                            @Html.ValueFor(model => model.FemaleMiddlePayBand)
                            @:%
                        }
                        else if (Model.OptedOutOfReportingPayQuarters)
                        {
                            <span>Not applicable</span>
                        }
                        else
                        {
                            <span class="gpg-data__status--notcompleted">Not completed</span>
                        }
                    </span>
                </td>
            </tr>
            <tr>
                <td>
                    Lower hourly pay quarter
                </td>
                <td class="numeric">
                    <span id="DisplayMaleLowerPayBand">
                        @if (Model.MaleLowerPayBand.HasValue)
                        {
                            @Html.ValueFor(model => model.MaleLowerPayBand)
                            @:%
                        }
                        else if (Model.OptedOutOfReportingPayQuarters)
                        {
                            <span>Not applicable</span>
                        }
                        else
                        {
                            <span class="gpg-data__status--notcompleted">Not completed</span>
                        }
                    </span>
                </td>
                <td class="numeric">
                    <span id="DisplayFemaleLowerPayBand">
                        @if (Model.FemaleLowerPayBand.HasValue)
                        {
                            @Html.ValueFor(model => model.FemaleLowerPayBand)
                            @:%
                        }
                        else if (Model.OptedOutOfReportingPayQuarters)
                        {
                            <span>Not applicable</span>
                        }
                        else
                        {
                            <span class="gpg-data__status--notcompleted">Not completed</span>
                        }
                    </span>
                </td>
            </tr>
        </tbody>
    </table>
    <table class="table gpg-data">
        <thead>
            <tr>
                <th colspan="2">
                    <span>Mean and median gender pay gap using hourly pay</span>
                </th>
                <th class="question" colspan="3">
                    <span class="edit">
                        <a id="ChangeCalculations" href="@Url.Action("EnterCalculations", "Submit", new {returnUrl = "CheckData"}, null, null, "HourlyPay")">
                            Edit<span class="visually-hidden"> hourly rate</span>
                        </a>
                    </span>
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    Mean gender pay gap using hourly pay
                </td>
                <td class="numeric" colspan="2">
                    <span id="DisplayDiffMeanHourlyPayPercent">
                        @if (Model.DiffMeanHourlyPayPercent.HasValue)
                        {
                            @Html.ValueFor(model => model.DiffMeanHourlyPayPercent)
                            @:%
                        }
                        else
                        {
                            <span class="gpg-data__status--notcompleted">Not completed</span>
                        }
                    </span>
                </td>
            </tr>
            <tr>
                <td>
                    Median gender pay gap using hourly pay
                </td>
                <td class="numeric" colspan="2">
                    <span id="DisplayDiffMedianHourlyPercent">
                        @if (Model.DiffMedianHourlyPercent.HasValue)
                        {
                            @Html.ValueFor(model => model.DiffMedianHourlyPercent)
                            @:%
                        }
                        else
                        {
                            <span class="gpg-data__status--notcompleted">Not completed</span>
                        }
                    </span>
                </td>
            </tr>

        </tbody>
    </table>
    <table class="table gpg-data">
        <thead>
            <tr>
                <th colspan="2">
                    <span>Percentage of men and women who received bonus pay</span>
                </th>
                <th>
                    <span class="edit">
                        <a id="ChangeCalculations" href="@Url.Action("EnterCalculations", "Submit", new {returnUrl = "CheckData"}, null, null, "BonusPayFigures")">
                            Edit<span class="visually-hidden"> bonus pay</span>
                        </a>
                    </span>
                </th>
            </tr>
            <tr>
                <td></td>
                <th class="numeric govuk-!-font-size-16" scope="col">
                    <strong>Men</strong>
                </th>
                <th class="numeric govuk-!-font-size-16" scope="col">
                    <strong>Women</strong>
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td style="vertical-align: bottom;">
                    Percentage of men and women who received bonus pay
                </td>
                <td class="numeric">
                    <span id="DisplayMaleMedianBonusPayPercent">
                        @if (Model.MaleMedianBonusPayPercent.HasValue)
                        {
                            @Html.ValueFor(model => model.MaleMedianBonusPayPercent)
                            @:%
                        }
                        else
                        {
                            <span class="gpg-data__status--notcompleted">Not completed</span>
                        }
                    </span>
                </td>
                <td class="numeric">
                    <span id="DisplayFemaleMedianBonusPayPercent">
                        @if (Model.FemaleMedianBonusPayPercent.HasValue)
                        {
                            @Html.ValueFor(model => model.FemaleMedianBonusPayPercent)
                            @:%
                        }
                        else
                        {
                            <span class="gpg-data__status--notcompleted">Not completed</span>
                        }
                    </span>
                </td>
            </tr>
        </tbody>
    </table>
    <table class="table gpg-data">
        <thead>
            <tr>
                <th>
                    <span>Mean and median gender pay gap using bonus pay</span>
                </th>
                <th>
                    <span class="edit">
                        <a id="ChangeCalculations" href="@Url.Action("EnterCalculations", "Submit", new {returnUrl = "CheckData"}, null, null, "BonusPay")">
                            Edit<span class="visually-hidden"> mean and median gender pay gap using bonus pay</span>
                        </a>
                    </span>
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    Mean gender pay gap using bonus pay
                </td>
                <td class="numeric">
                    <span id="DisplayDiffMeanBonusPercent">
                        @if (Model.DiffMeanBonusPercent.HasValue)
                        {
                            @Html.ValueFor(model => model.DiffMeanBonusPercent)
                            @:%
                        }
                        else if (Model.MaleMedianBonusPayPercent == 0)
                        {
                            <span>Not applicable</span>
                        }
                        else
                        {
                            <span class="gpg-data__status--notcompleted">Not completed</span>
                        }
                    </span>
                </td>
            </tr>
            <tr>
                <td>
                    Median gender pay gap using bonus pay
                </td>
                <td class="numeric">
                    <span id="DisplayDiffMedianBonusPercent">
                        @if (Model.DiffMedianBonusPercent.HasValue)
                        {
                            @Html.ValueFor(model => model.DiffMedianBonusPercent)
                            @:%
                        }
                        else if (Model.MaleMedianBonusPayPercent == 0)
                        {
                            <span>Not applicable</span>
                        }
                        else
                        {
                            <span class="gpg-data__status--notcompleted">Not completed</span>
                        }
                    </span>
                </td>
            </tr>
        </tbody>
    </table>
    if (Model.SectorType != SectorTypes.Public)
    {
        <table class="table gpg-data">
            <thead>
                <tr>
                    <th class="question" colspan="3">
                        Person responsible in your organisation
                        <span class="edit">
                            <a id="ChangePersonResponsible" href="@Url.Action("PersonResponsible", new {returnUrl = "CheckData"})">
                                Edit<span class="visually-hidden"> person responsible in your organisation</span>
                            </a>
                        </span>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td id="DisplayPersonResponsible" colspan="3">
                        @if (!string.IsNullOrEmpty(Model.FirstName))
                        {
                            <span>
                                <span id="DisplayFirstName">@Html.ValueFor(model => model.FirstName)</span>&nbsp;<span id="DisplayLastName">@Html.ValueFor(model => model.LastName)</span>
                            </span>
                            <br/>
                            <span id="DisplayJobTitle">@Html.ValueFor(model => model.JobTitle)</span>
                        }
                        else
                        {
                            <div class="gpg-data__status--notcompleted">
                                <span id="PersonResponsible">Not completed</span>
                            </div>
                        }
                    </td>
                </tr>
            </tbody>
        </table>
    }
    <table class="table gpg-data">
        <thead>
            <tr>
                <th class="question" colspan="3">
                    Employee headcount
                    <span class="edit">
                        <a id="ChangeOrganisationSize" href="@Url.Action("OrganisationSize", new {returnUrl = "CheckData"})">
                            Edit<span class="visually-hidden"> employee headcount</span>
                        </a>
                    </span>
                </th>
            </tr>
        </thead>
        <tbody>
            <tr class="row" colspan="3">
                <td>
                    Number of employees used to establish your headcount for gender pay gap reporting, on your snapshot date
                </td>
                <td id="DisplayOrganisationSize">
                    <span class="@(Model.OrganisationSize == OrganisationSizes.NotProvided ? "gpg-data__status--notprovided" : "")">
                        @(Model.OrganisationSize.GetAttribute<DisplayAttribute>().Name)
                    </span>
                </td>
            </tr>
        </tbody>
    </table>
    <table class="table gpg-data">
        <thead>
            <tr>
                <th class="question" colspan="3">
                    Link to your gender pay gap information
                    <span class="edit">
                        <a id="ChangeEmployerWebsite" href="@Url.Action("EmployerWebsite", new {returnUrl = "CheckData"})">
                            Edit<span class="visually-hidden"> link to your gender pay gap information</span>
                        </a>
                    </span>
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td colspan="3">
                    @if (UriSanitiser.IsValidHttpOrHttpsLink(Model.CompanyLinkToGPGInfo))
                    {
                        try // This try-catch is here because of a bug in AnchorTagHelper
                        {
                            <a id="DisplayCompanyLinkToGPGInfo" style="word-break: break-all" href='@Html.ValueFor(model => model.CompanyLinkToGPGInfo)' target="_blank">
                                @Html.ValueFor(model => model.CompanyLinkToGPGInfo)
                                <span class="visually-hidden">(opens in a new window)</span>
                            </a>
                        }
                        catch (ArgumentException)
                        {
                            @(Model.CompanyLinkToGPGInfo)
                        }
                    }
                    else
                    {
                        <div class="gpg-data__status--notprovided">
                            <span id="CompanyLinkToGPGInfo">Not provided</span>
                        </div>
                    }
                </td>
            </tr>
        </tbody>
    </table>

    <div class="panel panel-border-wide">
        <p>
            <span>On submission your gender pay gap information will be published on the Gender pay gap service.</span>
            <br/>
            <br/>
            <span>
                Submission of inaccurate data will mean your employer has not complied with the gender pay gap reporting regulations.
            </span>
        </p>
    </div>
    <br/>

    <div>
        @if (Model.ReportInfo.Draft.HasDraftBeenModifiedDuringThisSession && Model.HasUserData())
        {
            @:<a href="@Url.Action("DraftComplete")" class="govuk-button govuk-button--secondary govuk-!-width-one-quarter">Save draft</a>
        }
        else
        {
            @:<a class="govuk-button govuk-button--secondary govuk-button--disabled govuk-!-width-one-quarter" disabled="disabled">Save draft</a>
        }
        <br/>
        @if (Model.IsDifferentFromDatabase && Model.ShouldProvideLateReason && Model.IsValidReturn())
        {
            <a id="ContinueLateReasonStep" href="@Url.Action("LateReason")" class="govuk-button govuk-!-width-one-quarter">Continue</a>
        }
        else if (Model.IsDifferentFromDatabase && Model.IsValidReturn())
        {
            <input id="ConfirmStep" class="govuk-button govuk-!-width-one-quarter" type="submit" role="button" value="Submit"/>
        }
        else
        {
            <input id="ConfirmStep" class="govuk-button govuk-!-width-one-quarter" type="submit" role="button" value="Submit" disabled="disabled"/>
        }
    </div>
    <br/>
    <input id="CancelStep" class="link-button" type="submit" role="button" formaction="cancel-check-data" value="Cancel and return to @reportingOrganisation.OrganisationName"/>
}

</div>
</div>
