@model GenderPayGap.WebUI.BusinessLogic.Models.Submit.ReturnViewModel

<div class="grid-row">
    <div class="column-two-thirds">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ReturnId)
            @Html.HiddenFor(model => model.OrganisationId)
            @Html.HiddenFor(model => model.EncryptedOrganisationId)
            @Html.HiddenFor(model => model.ShouldProvideLateReason)

            @Html.HiddenFor(model => model.ReportInfo.ReportModifiedDate)
            @Html.HiddenFor(model => model.ReportInfo.ReportingStartDate)

            @Html.HiddenFor(model => model.DiffMeanBonusPercent)
            @Html.HiddenFor(model => model.DiffMeanHourlyPayPercent)
            @Html.HiddenFor(model => model.DiffMedianBonusPercent)
            @Html.HiddenFor(model => model.DiffMedianHourlyPercent)
            @Html.HiddenFor(model => model.FemaleLowerPayBand)
            @Html.HiddenFor(model => model.FemaleMedianBonusPayPercent)
            @Html.HiddenFor(model => model.FemaleMiddlePayBand)
            @Html.HiddenFor(model => model.FemaleUpperPayBand)
            @Html.HiddenFor(model => model.FemaleUpperQuartilePayBand)
            @Html.HiddenFor(model => model.MaleLowerPayBand)
            @Html.HiddenFor(model => model.MaleMedianBonusPayPercent)
            @Html.HiddenFor(model => model.MaleMiddlePayBand)
            @Html.HiddenFor(model => model.MaleUpperPayBand)
            @Html.HiddenFor(model => model.MaleUpperQuartilePayBand)
            @Html.HiddenFor(model => model.AccountingDate)
            @Html.HiddenFor(model => model.SectorType)
            @Html.HiddenFor(model => model.OrganisationSize)
            @Html.HiddenFor(model => model.CompanyLinkToGPGInfo)
            @Html.HiddenFor(model => model.EHRCResponse)
            @Html.HiddenFor(model => model.LateReason)

            var controller = ViewData["Controller"] as BaseController;

            string backLink;
            if (Model.ReturnUrl.EqualsI("CheckData"))
            {
                backLink = Url.Action("CheckData");
            }
            else
            {
                backLink = Url.Action("EnterCalculations");
            }

            <a class="link-back" href="@backLink">Back <span class="visuallyhidden"> to the previous step</span></a>
            @await Html.CustomValidationSummaryAsync()
            <h1 class="heading-large">
                @await Html.PartialAsync("ReportingOrgPart", controller.ReportingOrganisation.OrganisationName)
                Person responsible in your organisation
            </h1>
            <p>
                Enter the name and job title of the person with overall responsibility for gender pay gap reporting in your organisation. This could be your CEO, a director or other senior executive.
            </p>
            <div class="form-horizontal">
                <fieldset>
                    <div class="form-group @Html.SetErrorClass(model => model.FirstName, "error")">
                        @Html.LabelFor(model => model.FirstName, new {@class = "form-label col-md-2"})
                        @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "error-danger"})
                        <div class="col-md-10">
                            @Html.CustomEditorFor(model => model.FirstName, new {@class = "form-control"})
                        </div>
                    </div>

                    <div class="form-group @Html.SetErrorClass(model => model.LastName, "error")">
                        @Html.LabelFor(model => model.LastName, new {@class = "form-label col-md-2"})
                        @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "error-danger"})
                        <div class="col-md-10">
                            @Html.CustomEditorFor(model => model.LastName, new {@class = "form-control"})
                        </div>
                    </div>

                    <div class="form-group @Html.SetErrorClass(model => model.JobTitle, "error")">
                        @Html.LabelFor(model => model.JobTitle, new {@class = "form-label col-md-2"})
                        @Html.ValidationMessageFor(model => model.JobTitle, "", new {@class = "error-danger"})
                        <div class="col-md-10">
                            @Html.CustomEditorFor(model => model.JobTitle, new {@class = "form-control"})
                        </div>
                    </div>
                </fieldset>
            </div>

            <p>
                <input id="ContinueStep" class="button" type="submit" role="button" value="Continue"/>
                <br/>
                <input id="CancelStep" class="link-button" type="submit" role="button" formaction="cancel-person-responsible" value="Cancel" style="margin-top: 15px"/>
            </p>
        }
    </div>
    <div class="column-third">
        <aside class="govuk-related-items" role="complementary">
            <h3 class="heading-small" id="subsection-title">Gender pay gap guidance </h3>
            <nav role="navigation" aria-labelledby="subsection-title">
                <ul class="font-xsmall">
                    <li>
                        <a target="blank" href="https://www.gov.uk/guidance/gender-pay-gap-reporting-what-employers-must-publish">Gender pay gap reporting: what employers must publish<span class="visually-hidden">(opens in a new window)</span></a>
                    </li>
                </ul>
            </nav>
        </aside>
    </div>
</div>