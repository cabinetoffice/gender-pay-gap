@using GenderPayGap.Core
@using GenderPayGap.WebUI.Models.Admin
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.Admin.AdminChangeStatusViewModel

@{
    ViewBag.Title = "Change status - Administration - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
        {
            new CrumbViewModel
            {
                Text = "Admin",
                Href = Url.Action("Home", "Admin")
            },
            new CrumbViewModel
            {
                Text = Model.Organisation.OrganisationName,
                Href = Url.Action("ViewOrganisation", "AdminViewOrganisation", new {id = Model.Organisation.OrganisationId})
            },
            new CrumbViewModel
            {
                Text = "Status history",
                Href = Url.Action("ViewStatusHistory", "AdminOrganisationStatus", new {id = Model.Organisation.OrganisationId})
            },
            new CrumbViewModel
            {
                Text = "Change status"
            }
        };
    }

    @(Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}

@{
    OrganisationStatuses[] statuses = {OrganisationStatuses.Active, OrganisationStatuses.Retired, OrganisationStatuses.Deleted};
    string[] hints = {"Active organisation can be searched", "Retired organisation can be searched", "Deleted organisation cannot be searched"};

    var items = new List<ItemViewModel>();
    OrganisationStatuses fieldValue;
    string fieldId, fieldName = $"GovUk_Radio_{nameof(AdminChangeStatusViewModel.NewStatus)}";

    foreach (var statusHint in statuses.Zip(hints, (s, h) => new {Status = s, Hint = h}))
    {
        if (Model.Organisation.Status != statusHint.Status)
        {
            fieldValue = statusHint.Status;
            fieldId = $"{fieldName}_{fieldValue}";
            items.Add(new RadioItemViewModel
            {
                Name = fieldName,
                Value = fieldValue.ToString(),
                Id = fieldId,
                Checked = Model.NewStatus == fieldValue,
                Label = new LabelViewModel
                {
                    Text = fieldValue.ToString(),
                    For = fieldId
                },
                Hint = new HintViewModel
                {
                    Text = statusHint.Hint
                }
            });
        }
    }

}

<span class="govuk-caption-xl">Administration</span>
<h1 class="govuk-heading-xl">
    Change status
    <br/>
    <span class="govuk-!-font-size-27">
        for @(Model.Organisation.OrganisationName)
    </span>
</h1>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <form method="POST" action="@Url.Action("ChangeStatusPost", "AdminOrganisationStatus", new {id = Model.Organisation.OrganisationId})">
            @(Html.AntiForgeryToken())

            @(Html.Hidden(nameof(AdminChangeStatusViewModel.Action),
                ChangeOrganisationStatusViewModelActions.OfferNewStatusAndReason))

            @Html.GovUkErrorSummary()

            @{
                string error = Model.GetErrorFor<AdminChangeStatusViewModel, OrganisationStatuses?>(m => m.NewStatus);
                ErrorMessageViewModel errorMessageViewModel = error != null ? new ErrorMessageViewModel {Text = error} : null;
            }

            <table class="govuk-table">
                <tbody class="govuk-table__body">
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Organisation name</th>
                        <td class="govuk-table__cell">@(Model.Organisation.OrganisationName)</td>
                    </tr>
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Current status</th>
                        <td class="govuk-table__cell">@(Model.Organisation.Status)</td>
                    </tr>
                </tbody>
            </table>

            <div class="govuk-form-group">
                @Html.GovUkRadios(new RadiosViewModel
                {
                    Name = nameof(AdminChangeStatusViewModel.NewStatus),
                    Fieldset = new FieldsetViewModel
                    {
                        Legend = new LegendViewModel
                        {
                            Text = "Please select a new status",
                            Classes = "govuk-fieldset__legend--m"
                        },
                        Classes = "govuk-!-margin-top-6"
                    },
                    Items = items,
                    ErrorMessage = errorMessageViewModel
                })

                @Html.GovUkTextAreaFor(
                    m => m.Reason,
                    labelOptions: new LabelViewModel
                    {
                        Text = "What is the reason for this change?",
                        Classes = "govuk-label--m"
                    },
                    formGroupOptions: new FormGroupViewModel
                    {
                        Classes = "govuk-!-margin-top-6"
                    })

                @(Html.GovUkButton(new ButtonViewModel
                {
                    Text = "Continue",
                    Classes = "govuk-!-margin-bottom-4"
                }))

                <p class="govuk-body">
                    <a href="@Url.Action("ViewOrganisation", "AdminViewOrganisation", new {id = Model.Organisation.OrganisationId})"
                       class="govuk-link">
                        Cancel and return to organisation page
                    </a>
                </p>

            </div>
        </form>
    </div>
</div>
