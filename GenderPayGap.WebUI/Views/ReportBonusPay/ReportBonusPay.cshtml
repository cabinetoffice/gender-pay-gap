@using GenderPayGap.WebUI.Models.Report
@using GenderPayGap.WebUI.Views.Components.StatusMessages
@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents
@model GenderPayGap.WebUI.Models.Report.ReportBonusPayViewModel

@{
    string encryptedOrganisationId = Encryption.EncryptQuerystring(Model.Organisation.OrganisationId.ToString());
    string formattedReportingYears = $"{Model.ReportingYear}-{(Model.ReportingYear + 1) % 100}";

    string editOrReportTitle = Model.IsEditingSubmittedReturn
        ? "Edit your gender pay gap"
        : "Report your gender pay gap";

    ViewBag.Title = $"{editOrReportTitle} - reporting year {formattedReportingYears} - {Model.Organisation.OrganisationName} - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    @{
        var crumbs = new List<CrumbViewModel>
        {
            new CrumbViewModel
            {
                Text = "Your Organisations",
                Href = Url.Action("ManageOrganisations", "Organisation")
            },
            new CrumbViewModel
            {
                Text = Model.Organisation.OrganisationName,
                Href = Url.Action("ManageOrganisation", "Organisation", new {id = encryptedOrganisationId})
            },
            new CrumbViewModel
            {
                Text = $"{editOrReportTitle} (reporting year {formattedReportingYears})",
                Href = Url.Action("ReportOverview", "ReportOverview",
                    new {encryptedOrganisationId = encryptedOrganisationId, reportingYear = Model.ReportingYear})
            },
            new CrumbViewModel
            {
                Text = $"Bonus pay"
            }
        };
    }

    @(Html.GovUkBreadcrumbs(new BreadcrumbsViewModel
    {
        Crumbs = crumbs
    }))
}


<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        @{ await Html.RenderPartialAsync("../Components/StatusMessages/StatusMessages", new StatusMessagesViewModel()); }

        @(Html.GovUkErrorSummary())

        <h1 class="govuk-heading-xl">
            @(editOrReportTitle)
            <br />
            <span class="govuk-!-font-size-27">
                for @(Model.Organisation.OrganisationName)
            </span>
            <br />
            <span class="govuk-!-font-size-27" style="margin-top: 4px; display: block;">
                for reporting year @(formattedReportingYears)
            </span>
        </h1>

        <form method="post"
              action="@Url.Action("ReportBonusPayPost", "ReportBonusPay",
                          new {encryptedOrganisationId = encryptedOrganisationId, reportingYear = Model.ReportingYear})">
            @(Html.AntiForgeryToken())

            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                    <h2 class="govuk-fieldset__heading">
                        Percentage of employees who received bonus pay
                    </h2>
                </legend>

                @(Html.GovUkTextInputFor(
                    m => m.FemaleBonusPayPercent,
                    labelOptions: new LabelViewModel {Text = "Females who received bonus pay" },
                    formGroupOptions: new FormGroupViewModel { Classes = "govuk-!-margin-bottom-2" },
                    classes: "govuk-input--width-10",
                    textInputAppendix: new TextInputAppendixViewModel
                    { Html = @<text>
                                 <span class="govuk-label" style="display: inline; margin-left: 5px;">%</span>
                              </text>
                    }
                ))
                @(Html.GovUkTextInputFor(
                    m => m.MaleBonusPayPercent,
                    labelOptions: new LabelViewModel {Text = "Males who received bonus pay" },
                    classes: "govuk-input--width-10",
                    textInputAppendix: new TextInputAppendixViewModel
                    { Html = @<text>
                                 <span class="govuk-label" style="display: inline; margin-left: 5px;">%</span>
                              </text>
                    }
                ))

            </fieldset>

            <fieldset class="govuk-fieldset govuk-!-margin-top-4">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                    <h2 class="govuk-fieldset__heading">
                        Bonus pay
                        <br />
                        <span class="govuk-!-font-size-19">
                            (only required if your organisation pays bonuses)
                        </span>
                    </h2>
                    <div class="govuk-inset-text govuk-!-margin-top-2 govuk-!-margin-bottom-2">
                        <div class="govuk-!-margin-bottom-2">
                            A positive % indicates that men in your organisation receive higher bonus pay than women in your organisation.
                        </div>
                        <div>
                            A negative % indicates that men in your organisation receive lower bonus pay than women in your organisation.
                        </div>
                    </div>
                </legend>

                @(Html.GovUkTextInputFor(
                    m => m.DiffMeanBonusPercent,
                    labelOptions: new LabelViewModel {Text = "Difference in bonus pay (mean)"},
                    formGroupOptions: new FormGroupViewModel { Classes = "govuk-!-margin-bottom-2" },
                    classes: "govuk-input--width-10",
                    textInputAppendix: new TextInputAppendixViewModel
                    { Html = @<text>
                                 <span class="govuk-label" style="display: inline; margin-left: 5px;">%</span>
                              </text>
                    }
                ))
                @(Html.GovUkTextInputFor(
                    m => m.DiffMedianBonusPercent,
                    labelOptions: new LabelViewModel {Text = "Difference in bonus pay (median)"},
                    classes: "govuk-input--width-10",
                    textInputAppendix: new TextInputAppendixViewModel
                    { Html = @<text>
                                 <span class="govuk-label" style="display: inline; margin-left: 5px;">%</span>
                              </text>
                    }
                ))

            </fieldset>

            @(Html.GovUkButton(new ButtonViewModel
            {
                Text = "Save",
                Name = nameof(Model.Action),
                Value = nameof(ReportPagesAction.Save),
                Classes = "govuk-!-margin-bottom-6"
            }))
            @(Html.GovUkButton(new ButtonViewModel
            {
                Text = "Save and continue",
                Name = nameof(Model.Action),
                Value = nameof(ReportPagesAction.SaveAndContinue),
                Classes = "govuk-!-margin-bottom-6"
            }))

        </form>

        <p class="govuk-body">
            <a href="@Url.Action("ReportOverview", "ReportOverview",
                         new {encryptedOrganisationId = encryptedOrganisationId, reportingYear = Model.ReportingYear})"
               class="govuk-link">
                Back to report overview
            </a>
        </p>

    </div>
</div>
