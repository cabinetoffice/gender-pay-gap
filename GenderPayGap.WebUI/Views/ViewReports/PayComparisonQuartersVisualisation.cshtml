@model GenderPayGap.Database.Return

@{
    async Task PersonIcon(bool isFemale, decimal filledPercent)
    {
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg" class="pay-comparison-quarters-vis-face @(isFemale ? "pay-comparison-quarters-vis-face--woman" : "pay-comparison-quarters-vis-face--man")">
            <g>
                <circle cx="50" cy="50" r="47" stroke-width="6" class="pay-comparison-quarters-vis-face--face-outline"
                         style="fill: none;"/>
                <rect y="0"
                      height="100"
                      x="@(isFemale ? 100 - filledPercent : 0)"
                      width="@(filledPercent)"
                      clip-path="circle(47px at @(isFemale ? (filledPercent - 50) : 50)px 50px)"
                      style="stroke: none;"
                      class="pay-comparison-quarters-vis-face--face-outline"/>
            </g>
        </svg>
    }

    async Task PayComparisonQuartersVisualisationForQuarter(string payQuarterDescription, decimal femalePercent, decimal malePercent, bool bottomBorder)
    {
        decimal remainderFemale = ((femalePercent / 4) - Math.Floor(femalePercent / 4)) * 100;
        decimal remainderMale = ((malePercent / 4) - Math.Floor(malePercent / 4)) * 100;

        <div class="pay-comparison-quarters-vis-quarter-explanation">
            <div>
                In the @(payQuarterDescription):
            </div>
            <div class="pay-comparison-quarters-vis-quarter-explanation-sides">
                <div class="pay-comparison-quarters-vis-quarter-explanation-side pay-comparison-quarters-vis-quarter-explanation-side--left">
                    @(femalePercent.ToString("0.0"))% women
                </div>
                <div class="pay-comparison-quarters-vis-quarter-explanation-side pay-comparison-quarters-vis-quarter-explanation-side--right">
                    @(malePercent.ToString("0.0"))% men
                </div>
            </div>
        </div>
        <div class="pay-comparison-quarters-vis-quarter @(bottomBorder ? "pay-comparison-quarters-vis-quarter--bottom-border" : "")">
            <div class="pay-comparison-quarters-vis-quarter-side pay-comparison-quarters-vis-quarter-side--left">
                <div class="pay-comparison-quarters-vis-quarter-faces pay-comparison-quarters-vis-quarter-faces--women">
                    @for (int i = 0; i < Math.Floor(femalePercent / 4); i++)
                    {
                        await PersonIcon(isFemale: true, filledPercent: 100);
                    }
                    @if (remainderFemale > 10)
                    {
                        await PersonIcon(isFemale: true, filledPercent: remainderFemale);
                    }
                </div>
            </div>
            <div class="pay-comparison-quarters-vis-quarter-side pay-comparison-quarters-vis-quarter-side--right">
                <div class="pay-comparison-quarters-vis-quarter-faces pay-comparison-quarters-vis-quarter-faces--men">
                    @for (int i = 0; i < Math.Floor(malePercent / 4); i++)
                    {
                        await PersonIcon(isFemale: false, filledPercent: 100);
                    }
                    @if (remainderMale > 10)
                    {
                        await PersonIcon(isFemale: false, filledPercent: remainderMale);
                    }
                </div>
            </div>
        </div>
    }
}

<figure class="pay-comparison-quarters-vis govuk-body"
        aria-hidden="true" @* We use aria-hidden="true" because the content is repeated in the text above *@>
    <figcaption class="govuk-visually-hidden">
        A visualisation showing the proportions of men and women in each pay quarter of this organisation
    </figcaption>
    <div id="pay-comparison-quarters-show-explanation-container" class="govuk-checkboxes govuk-checkboxes--small" data-module="govuk-checkboxes">
        <div class="govuk-checkboxes__item" style="float: unset;">
            <input class="govuk-checkboxes__input" id="pay-comparison-quarters-show-explanation-checkbox" type="checkbox">
            <label class="govuk-label govuk-checkboxes__label" for="pay-comparison-quarters-show-explanation-checkbox">
                Show explanation for this visualisation
            </label>
        </div>
    </div>
    
    <div class="pay-comparison-quarters-vis-arrow pay-comparison-quarters-vis-arrow--up">
        Highest paid jobs
    </div>
    <div class="pay-comparison-quarters-vis-quarter pay-comparison-quarters-vis-quarter--captions">
        <div class="pay-comparison-quarters-vis-quarter-side pay-comparison-quarters-vis-quarter-side--left">
            <div class="pay-comparison-quarters-vis-quarter-caption">
                Women
            </div>
        </div>
        <div class="pay-comparison-quarters-vis-quarter-side pay-comparison-quarters-vis-quarter-side--right">
            <div class="pay-comparison-quarters-vis-quarter-caption">
                Men
            </div>
        </div>
    </div>

    @{ await PayComparisonQuartersVisualisationForQuarter("upper hourly pay quarter (highest paid jobs)", Model.FemaleUpperQuartilePayBand.Value, Model.MaleUpperQuartilePayBand.Value, true); }
    @{ await PayComparisonQuartersVisualisationForQuarter("upper middle hourly pay quarter", Model.FemaleUpperPayBand.Value, Model.MaleUpperPayBand.Value, true); }
    @{ await PayComparisonQuartersVisualisationForQuarter("lower middle hourly pay quarter", Model.FemaleMiddlePayBand.Value, Model.MaleMiddlePayBand.Value, true); }
    @{ await PayComparisonQuartersVisualisationForQuarter("lower hourly pay quarter (lowest paid jobs)", Model.FemaleLowerPayBand.Value, Model.MaleLowerPayBand.Value, false); }

    <div class="pay-comparison-quarters-vis-arrow pay-comparison-quarters-vis-arrow--down">
        Lowest paid jobs
    </div>
    <div class="pay-comparison-quarters-vis-caption">
        Each
        <span style="display: inline-block; vertical-align: middle;">
            @{ await PersonIcon(isFemale: true, filledPercent: 100); }
        </span>
        represents 1% of the employees in this organisation
    </div>
</figure>
