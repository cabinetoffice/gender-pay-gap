@using GenderPayGap.Database
@model List<GenderPayGap.Database.Organisation>

@{
    var title = "Organisations with multiple active returns for a single year";

    ViewBag.Title = $"{title} - Administration - Gender pay gap service";
    Layout = "~/Views/GovUkFrontend/GovUkFrontendLayout.cshtml";
}

@section BeforeMain {
    <partial name="~/Views/AdminDatabaseIntegrityChecks/DatabaseIntegrityChecksBreadcrumbs.cshtml" model="title"/>
}

<span class="govuk-caption-xl">Database integrity checks</span>
<h1 class="govuk-heading-xl">@title</h1>

<p class="govuk-body">
    This shows a list of organisations who have multiple active submissions for a reporting year. When a submission 
    is created then the previous one should be retired. If this has not happened then it may need investigating 
    to decide which submission is correct and retire the other(s).
</p>

@if (!Model.Any())
{
    <div class="govuk-body">
        No organisations
    </div>
}
else
{
    <h2 class="govuk-heading-m">@(Model.Count) organisations with multiple active returns for a single year</h2>
    <table class="govuk-table">
        <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                <th scope="col" class="govuk-table__header">Organisation</th>
            </tr>
        </thead>
        <tbody class="govuk-table__body">

            @foreach (Organisation organisation in Model)
            {
                <tr class="govuk-table__row">
                    <td class="govuk-table__cell">
                        <a href="@(Url.Action("ViewOrganisation", "AdminViewOrganisation", new {id = organisation.OrganisationId}))"
                           class="govuk-link">
                            @(organisation.OrganisationName)
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
