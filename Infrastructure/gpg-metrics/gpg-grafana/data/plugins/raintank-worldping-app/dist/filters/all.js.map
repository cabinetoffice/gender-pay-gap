{"version":3,"sources":["../../src/filters/all.js"],"names":["angular","module","filter","items","tag","filtered","_","forEach","item","indexOf","tags","push","time","duration","Date","getTime","secs","Math","floor","mins","hours","days"],"mappings":";;AAAA;;AACA;;;;AAEAA,oBAAQC,MAAR,CAAe,oBAAf,EAAqCC,MAArC,CAA4C,aAA5C,EAA2D,YAAW;AACpE,SAAO,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;AAC1B,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAI,CAACD,GAAL,EAAU;AACR,aAAOD,KAAP;AACD;;AACDG,uBAAEC,OAAF,CAAWJ,KAAK,IAAI,EAApB,EAAyB,UAASK,IAAT,EAAe;AACtC,UAAIF,mBAAEG,OAAF,CAAUD,IAAI,CAACE,IAAf,EAAqBN,GAArB,KAA6B,CAAjC,EAAoC;AAClCC,QAAAA,QAAQ,CAACM,IAAT,CAAcH,IAAd;AACD;AACF,KAJD;;AAKA,WAAOH,QAAP;AACD,GAXD;AAYD,CAbD;;AAeAL,oBAAQC,MAAR,CAAe,oBAAf,EAAqCC,MAArC,CAA4C,cAA5C,EAA4D,YAAW;AACrE,SAAO,UAASU,IAAT,EAAe;AACpB,QAAIC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAID,IAAJ,CAASF,IAAT,EAAeG,OAAf,EAAtC;;AACA,QAAIF,QAAQ,GAAG,KAAf,EAAsB;AACpB,aAAO,mBAAP;AACD;;AACD,QAAIA,QAAQ,GAAG,KAAf,EAAsB;AACpB,UAAIG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,QAAQ,GAAC,IAApB,CAAX;AACA,aAAO,SAASG,IAAT,GAAgB,UAAvB;AACD;;AACD,QAAIH,QAAQ,GAAG,OAAf,EAAwB;AACtB,UAAIM,IAAI,GAAGF,IAAI,CAACC,KAAL,CAAWL,QAAQ,GAAC,IAAT,GAAc,EAAzB,CAAX;AACA,aAAO,SAASM,IAAT,GAAgB,UAAvB;AACD;;AACD,QAAIN,QAAQ,GAAG,QAAf,EAAyB;AACvB,UAAIO,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWL,QAAQ,GAAC,IAAT,GAAc,EAAd,GAAiB,EAA5B,CAAZ;AACA,aAAO,SAASO,KAAT,GAAiB,QAAxB;AACD;;AACD,QAAIC,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWL,QAAQ,GAAC,IAAT,GAAc,EAAd,GAAiB,EAAjB,GAAoB,EAA/B,CAAX;AACA,WAAO,SAASQ,IAAT,GAAgB,OAAvB;AACD,GAnBD;AAoBD,CArBD","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\n\nangular.module('grafana.directives').filter('filterByTag', function() {\n  return function(items, tag) {\n    var filtered = [];\n    if (!tag) {\n      return items;\n    }\n    _.forEach((items || []), function(item) {\n      if (_.indexOf(item.tags, tag) >= 0) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n});\n\nangular.module('grafana.directives').filter('timeDuration', function() {\n  return function(time) {\n    var duration = new Date().getTime() - new Date(time).getTime();\n    if (duration < 10000) {\n      return \"a few seconds ago\";\n    }\n    if (duration < 60000) {\n      var secs = Math.floor(duration/1000);\n      return \"for \" + secs + \" seconds\";\n    }\n    if (duration < 3600000) {\n      var mins = Math.floor(duration/1000/60);\n      return \"for \" + mins + \" minutes\";\n    }\n    if (duration < 86400000) {\n      var hours = Math.floor(duration/1000/60/60);\n      return \"for \" + hours + \" hours\";\n    }\n    var days = Math.floor(duration/1000/60/60/24);\n    return \"for \" + days + \" days\";\n  };\n});\n"],"file":"all.js"}