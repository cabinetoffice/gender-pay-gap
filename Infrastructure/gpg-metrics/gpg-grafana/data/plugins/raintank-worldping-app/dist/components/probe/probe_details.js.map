{"version":3,"sources":["../../../src/components/probe/probe_details.js"],"names":["ProbeDetailsCtrl","$scope","$injector","$location","$timeout","$q","backendSrv","contextSrv","alertSrv","self","pageReady","probe","probeUpdates","showDestroy","search","getProbe","set","$on","cancel","poller","put","then","resp","meta","code","message","reject","id","get","body","name","online","checkIfOnline","newState","enabled","save","path","slug","qstring","verifyOnline","templateUrl"],"mappings":"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","sourcesContent":["import { promiseToDigest } from '../../utils/promiseToDigest';\n\nexport class ProbeDetailsCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $location, $timeout, $q, backendSrv, contextSrv, alertSrv) {\n    var self = this;\n    this.contextSrv = contextSrv;\n    this.backendSrv = backendSrv;\n    this.alertSrv = alertSrv;\n    this.$location = $location;\n    this.$timeout = $timeout;\n    this.$q = $q;\n    this.$scope = $scope;\n    this.pageReady = false;\n    this.probe = null;\n    this.probeUpdates = {};\n    this.showDestroy = false;\n    if ($location.search().probe) {\n      this.getProbe($location.search().probe);\n    } else {\n      this.alertSrv.set(\"no probe id provided.\", \"\", 'error', 10000);\n    }\n    $scope.$on(\"$destroy\", function() {\n      $timeout.cancel(self.poller);\n    });\n  }\n\n  save() {\n    var self = this;\n    return promiseToDigest(this.$scope)\n      (this.backendSrv.put(\"api/plugin-proxy/raintank-worldping-app/api/v2/probes\", this.probe).then((resp) => {\n        if (resp.meta.code !== 200) {\n          self.alertSrv.set(\"failed to save probe.\", resp.meta.message, 'error', 10000);\n          return self.$q.reject(resp.meta.message);\n        }\n      })\n    );\n  }\n\n  getProbe(id) {\n    var self = this;\n    return promiseToDigest(this.$scope)\n      (this.backendSrv.get(\"api/plugin-proxy/raintank-worldping-app/api/v2/probes/\"+id).then((resp) => {\n        if (resp.meta.code !== 200) {\n          self.alertSrv.set(\"failed to get probe.\", resp.meta.message, 'error', 10000);\n          return self.$q.reject(resp.meta.message);\n        }\n        self.probe = resp.body;\n        self.probeUpdates = {name: self.probe.name, public: self.probe.public};\n        if (!self.probe.online) {\n          self.checkIfOnline();\n        }\n      })\n    );\n  }\n\n  setEnabled(newState) {\n    var self = this;\n    this.probe.enabled = newState;\n    return promiseToDigest(this.$scope)\n      (this.backendSrv.put('api/plugin-proxy/raintank-worldping-app/api/v2/probes', this.probe).then((resp) => {\n        if (resp.meta.code !== 200) {\n          self.alertSrv.set(\"failed to update probe.\", resp.meta.message, 'error', 10000);\n          return self.$q.reject(resp.meta.message);\n        }\n        self.probe = resp.body;\n      })\n    );\n  }\n\n  update() {\n    this.probe.name = this.probeUpdates.name;\n    this.probe.public = this.probeUpdates.public;\n    this.save();\n  }\n\n  remove(probe) {\n    var self = this;\n    return promiseToDigest(this.$scope)\n      (this.backendSrv.delete('api/plugin-proxy/raintank-worldping-app/api/v2/probes/' + probe.id).then((resp) => {\n        if (resp.meta.code !== 200) {\n          self.alertSrv.set(\"failed to delete probe.\", resp.meta.message, 'error', 10000);\n          return self.$q.reject(resp.meta.message);\n        }\n        self.$location.path('plugins/raintank-worldping-app/page/probes');\n      })\n    );\n  }\n\n  gotoDashboard(probe) {\n    this.$location.path(\"/dashboard/db/worldping-probes\").search({\"var-probe\": probe.slug, \"var-endpoint\": \"All\"});\n  }\n\n  gotoEventDashboard(probe) {\n    this.$location.path(\"/dashboard/db/worldping-events\").search({\"var-probe\": probe.slug, \"var-endpoint\": \"All\"});\n  }\n\n  getEventsDashboardLink() {\n    if (!this.probe) {\n      return \"\";\n    }\n    var path = \"/dashboard-solo/db/worldping-events\";\n    var qstring = \"?panelId=2&from=now-1d&to=now&var-probe=\"+this.probe.slug;\n    return path + qstring;\n  }\n\n  checkIfOnline() {\n    var self = this;\n    this.verifyOnline = true;\n\n    return promiseToDigest(this.$scope)\n      (this.backendSrv.get('api/plugin-proxy/raintank-worldping-app/api/v2/probes/'+this.probe.id).then((resp) => {\n        if (resp.meta.code !== 200) {\n          self.alertSrv.set(\"failed to get probe.\", resp.meta.message, 'error', 10000);\n        } else {\n          self.probe = resp.body;\n        }\n        if (!self.probe.online) {\n          self.poller = self.$timeout(function() {\n            self.checkIfOnline();\n          }, 1000);\n        }\n      })\n    );\n  }\n}\n\nProbeDetailsCtrl.templateUrl = 'public/plugins/raintank-worldping-app/components/probe/partials/probe_details.html';\n"],"file":"probe_details.js"}