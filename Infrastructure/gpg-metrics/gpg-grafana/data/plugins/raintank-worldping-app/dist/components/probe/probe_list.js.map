{"version":3,"sources":["../../../src/components/probe/probe_list.js"],"names":["ProbeListCtrl","$scope","$injector","$location","$filter","backendSrv","contextSrv","$q","isOrgAdmin","hasRole","pageReady","statuses","label","value","online","enabled","id","filter","tag","status","sort_field","probes","getProbes","map","_","forEach","probe","tags","Object","keys","self","actual","res","length","get","then","resp","meta","code","alertSrv","set","message","reject","body","collector","path","search","slug","templateUrl"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport { promiseToDigest } from '../../utils/promiseToDigest';\n\nclass ProbeListCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $location, $filter, backendSrv, contextSrv, $q) {\n    this.isOrgAdmin = contextSrv.hasRole('Admin');\n    this.backendSrv = backendSrv;\n    this.$filter = $filter;\n    this.$location = $location;\n    this.$q = $q;\n    this.$scope = $scope;\n    this.pageReady = false;\n    this.statuses = [\n      {label: \"Online\", value: {online: true, enabled: true}, id: 2},\n      {label: \"Offline\", value: {online: false, enabled: true}, id: 3},\n      {label: \"Disabled\", value: {enabled: false}, id: 4},\n    ];\n\n    this.filter = {tag: \"\", status: \"\"};\n    this.sort_field = \"name\";\n    this.probes = [];\n    this.getProbes();\n  }\n\n  probeTags() {\n    var map = {};\n    _.forEach(this.probes, function(probe) {\n      _.forEach(probe.tags, function(tag) {\n        map[tag] = true;\n      });\n    });\n    return Object.keys(map);\n  }\n\n  setProbeFilter(tag) {\n    this.filter.tag = tag;\n  }\n\n  statusFilter() {\n    var self = this;\n    return function(actual) {\n      if (!self.filter.status) {\n        return true;\n      }\n      var res = self.$filter('filter')([actual], self.filter.status);\n      return res.length > 0;\n    };\n  }\n\n  getProbes() {\n    var self = this;\n    return promiseToDigest(this.$scope)\n      (this.backendSrv.get('api/plugin-proxy/raintank-worldping-app/api/v2/probes').then(function(resp) {\n        if (resp.meta.code !== 200) {\n          self.alertSrv.set(\"failed to get probes.\", resp.meta.message, 'error', 10000);\n          return self.$q.reject(resp.meta.message);\n        }\n        self.pageReady = true;\n        self.probes = resp.body;\n      })\n    );\n  }\n\n  gotoDashboard(collector) {\n    this.$location.path(\"/dashboard/db/worldping-collector-summary\").search({\"var-collector\": collector.slug, \"var-endpoint\": \"All\"});\n  }\n}\n\nProbeListCtrl.templateUrl = 'public/plugins/raintank-worldping-app/components/probe/partials/probe_list.html';\nexport {ProbeListCtrl};\n"],"file":"probe_list.js"}